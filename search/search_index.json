{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"VAST: MLIR for Program Analysis","text":"<p>VAST is a library for program analysis and instrumentation of C/C++ and related languages. VAST provides a foundation for customizable program representation for a broad spectrum of analyses. Using the MLIR infrastructure, VAST provides a toolset to represent C/C++ program at various stages of the compilation and to transform the representation to the best-fit program abstraction.</p> <p>Whether static or dynamic, program analysis often requires a specific view of the source code. The usual requirements for a representation is to be easily analyzable, i.e., have a reasonably small set of operations, be truthful to the semantics of the analyzed program, and the analysis must be relatable to the source. It is also beneficial to access the source at various abstraction levels.</p> <p>The current state-of-the-art tools leverage compiler infrastructures to perform program analysis. This approach is beneficial because it remains truthful to the executed program semantics, whether AST or LLVM IR. However, these representations come at a cost as they are designed for optimization and code generation, rather than for program analysis.</p> <p>The Clang AST is unoptimized and too complex for interpretation-based analysis. Also, it lacks program features that Clang inserts during its LLVM code generation process. On the other hand, LLVM is often too low-level and hard to relate to high-level program constructs.</p> <p>VAST is a new compiler front/middle-end designed for program analysis. It transforms parsed C and C++ code, in the form of Clang ASTs, into a high-level MLIR dialect. The high level dialect is then progressively lowered all the way down to LLVM IR. This progression enables VAST to represent the code as a tower of IRs in multiple MLIR dialects. The MLIR allows us to capture high-level features from AST and interleave them with low-level dialects.</p>"},{"location":"#try-vast","title":"Try VAST","text":"<p>You can experiment with VAST on compiler explorer. Feel free to use VAST and produce MLIR dialects. To specify the desired MLIR output, utilize the <code>-vast-emit-mlir=&lt;dialect&gt;</code> option. Currently, the supported options are:</p> <ul> <li><code>-vast-emit-mlir=hl</code> to generate high-level dialect.  - <code>-vast-emit-mlir=llvm</code> to generate LLVM MLIR dialect.</li> </ul> <p>Refer to the vast-front documentation for additional details.</p>"},{"location":"#a-tower-of-irs","title":"A Tower of IRs","text":"<p>The feature that differentiates our approach is that the program representation can hold multiple representations simultaneously, the so-called <code>tower of IRs</code>. One can imagine the tower as multiple MLIR modules side-by-side in various dialects. Each layer of the tower represents a specific stage of compilation. At the top is a high-level dialect relatable to AST, and at the bottom is a low-level LLVM-like dialect. Layers are interlinked with location information. Higher layers can also be seen as metadata for lower layers.</p> <p>This feature simplifies analysis built on top of VAST IR in multiple ways. It naturally provides provenance to higher levels dialects (and source code) from the low levels. Similarly, one can reach for low-level representation from the high-level source view. This can have multiple utilizations.  One of them is relating analysis results to the source. For a user, it is invaluable to represent results in the language of what they see, that is, the high-level representation of the source. For example, using provenance, one can link the values in low-level registers to variable names in the source.  Furthermore, this streamlines communication from the user to the analysis backend and back in the interactive tools and also allows the automatic analysis to query the best-fit representation at any time.</p> <p>The provenance is invaluable for static analysis too. It is often advantageous to perform analysis as an abstract interpretation of the low-level representation and relate it to high-level constructs. For example, when trying to infer properties about control flow, like loop invariants, one can examine high-level operations and relate the results to low-level analysis using provenance links.</p> <p>We expect to provide a DSL library for design of custom program representation abstraction on top of our tower of IRs. The library will provide utilities to link other dialects to the rest of the tower so that the provenance is usable outside the main pipeline.</p>"},{"location":"#dialects","title":"Dialects","text":"<p>As a foundation, VAST provides backbone dialects for the tower of IRs. A high-level dialect <code>hl</code> is a faithful representation of Clang AST. While intermediate dialects represent compilation artifacts like ABI lowering of macro expansions. Whenever it is possible, we try to utilize standard dialects. At the bottom of the tower, we have the <code>llvm</code> dialect. For features that are not present in the <code>llvm</code> dialect, we utilize our low-level dialect <code>ll</code>. We leverage a <code>meta</code> dialect to provide provenance utilities. The currently supported features are documented in automatically generated dialect docs.</p> <p>For types, we provide high-level types from Clang AST enriched by value categories. This allows referencing types as presented in the source. In the rest of the tower, we utilize standard or llvm types, respectively.</p> <p>One does not need to utilize the tower of IRs but can craft a specific representation that interleaves multiple abstractions simultaneously.</p>"},{"location":"CONTRIBUTING/","title":"Contributing to VAST","text":"<p>First, thanks for your interest in contributing to VAST! We welcome and appreciate all contributions, including bug reports, feature suggestions, tutorials/blog posts, and code improvements.</p> <p>If you're unsure where to start, we recommend our <code>good first issue</code> issue label.</p>"},{"location":"CONTRIBUTING/#bug-reports-and-feature-suggestions","title":"Bug reports and feature suggestions","text":"<p>Bug reports and feature suggestions can be submitted to our issue tracker.</p> <p>When reporting a bug please provide a minimal example with steps to reproduce the issue if possible. It helps us a lot, as we can get to the bottom of the issue much faster and can even use it as a test case to catch future regressions.</p>"},{"location":"CONTRIBUTING/#questions","title":"Questions","text":"<p>Questions can be submitted to the discussion page.</p>"},{"location":"CONTRIBUTING/#legal","title":"Legal","text":"<p>For legal reasons, we require contributors to sign our Contributor License Agreement.  This will be automatically checked as part of our CI.</p>"},{"location":"CONTRIBUTING/#git-pull-requests","title":"Git &amp; Pull Requests","text":"<p>VAST uses the pull request contribution model. Please make an account on Github, fork this repo, and submit code contributions via pull request. For more documentation, look here.</p> <p>Since VAST does not squash commits in a pull request, it is important to uphold some culture when it comes to commits.</p> <ul> <li>Commit should ideally be one simple change.</li> <li>Commit messages follow a simple format:   <code>component: Simple sentence with a dot.</code> with maximum of 80 chars and optional longer   message.</li> <li>When unsure what component commit modifies, run <code>git log</code> on the modified file(s).</li> <li>Commits should modify only one component (as a result the project does not have   to build with each separate commit)</li> <li>If you are having troubles coming up with a simple sentence as a commit message,   that is short enough, it may be a good indicator that the commit should be split.</li> </ul> <p>Some pull request guidelines:</p> <ul> <li>Minimize irrelevant changes (formatting, whitespace, etc) to code that would   otherwise not be touched by this patch. Save formatting or style corrections   for a separate pull request that does not make any semantic changes.</li> <li>When possible, large changes should be split up into smaller focused pull   requests.</li> <li>Fill out the pull request description with a summary of what your patch does,   key changes that have been made, and any further points of discussion, if   applicable.</li> <li>Title your pull request with a brief description of what it's changing.   \"Fixes #123\" is a good comment to add to the description, but makes for an   unclear title on its own.</li> <li>CI must pass for the PR to be merged.</li> <li>There must be a review from some maintainer that accepts changes for the PR to be merged.</li> </ul>"},{"location":"statement/","title":"License","text":"<p>VAST is licensed according to the Apache 2.0 license. VAST links against and uses Clang and LLVM APIs. Clang is also licensed under Apache 2.0, with LLVM exceptions.</p> <p>This research was developed with funding from the Defense Advanced Research Projects Agency (DARPA). The views, opinions and/or findings expressed are those of the author and should not be interpreted as representing the official views or policies of the Department of Defense or the U.S. Government.</p> <p>Distribution Statement A \u2013 Approved for Public Release, Distribution Unlimited</p>"},{"location":"Benchmarks/gzip_times_1.10/","title":"GZIP 1.10","text":"Compilation unit HighLevel with unsupported HighLevel LLVM Total passing 69/69 32/69 14/69 ./bits.c 0.1 FAIL FAIL ./deflate.c 0.11 FAIL FAIL ./gzip.c 0.26 FAIL FAIL ./inflate.c 0.14 FAIL FAIL ./lib/asnprintf.c 0.62 0.41 FAIL ./lib/basename-lgpl.c 0.63 FAIL FAIL ./lib/chdir-long.c 0.17 FAIL FAIL ./lib/cloexec.c 0.97 0.95 1.12 ./lib/creat-safer.c 0.54 0.55 0.23 ./lib/dirname-lgpl.c 0.89 FAIL FAIL ./lib/dup-safer-flag.c 0.98 0.98 1.60 ./lib/dup-safer.c 0.97 0.91 1.52 ./lib/exitfail.c 0.73 0.73 FAIL ./lib/fclose.c 0.12 FAIL FAIL ./lib/fcntl.c 0.9 0.91 FAIL ./lib/fd-hook.c 0.71 0.86 FAIL ./lib/fd-safer-flag.c 0.76 0.97 0.44 ./lib/fd-safer.c 0.92 0.76 0.44 ./lib/fflush.c 0.13 FAIL FAIL ./lib/filenamecat-lgpl.c 0.86 FAIL FAIL ./lib/fprintf.c 0.13 FAIL FAIL ./lib/fpurge.c 0.1 FAIL FAIL ./lib/freading.c 0.8 FAIL FAIL ./lib/fseek.c 0.11 FAIL FAIL ./lib/fseeko.c 0.1 FAIL FAIL ./lib/fseterr.c 0.8 FAIL FAIL ./lib/getprogname.c 0.78 0.73 FAIL ./lib/gettime.c 0.56 0.51 FAIL ./lib/glthread/lock.c 0.95 0.95 FAIL ./lib/glthread/threadlib.c 0.89 0.90 FAIL ./lib/localtime-buffer.c 0.48 0.50 0.72 ./lib/malloca.c 0.79 0.74 FAIL ./lib/math.c 0.14 0.14 0.35 ./lib/open-safer.c 0.57 0.51 FAIL ./lib/openat-die.c 0.14 FAIL FAIL ./lib/openat-proc.c 0.15 FAIL FAIL ./lib/openat-safer.c 0.64 0.58 FAIL ./lib/opendir-safer.c 0.13 0.92 FAIL ./lib/pipe-safer.c 0.92 0.82 0.45 ./lib/printf-args.c 0.83 FAIL FAIL ./lib/printf-frexp.c 0.13 0.12 0.37 ./lib/printf-frexpl.c 0.14 0.18 FAIL ./lib/printf-parse.c 0.18 FAIL FAIL ./lib/printf.c 0.82 FAIL FAIL ./lib/save-cwd.c 0.14 FAIL FAIL ./lib/savedir.c 0.96 FAIL FAIL ./lib/sig-handler.c 0.1 0.96 FAIL ./lib/stat-time.c 0.65 0.65 FAIL ./lib/statat.c 0.98 0.98 1.46 ./lib/strerror_r.c 0.1 FAIL FAIL ./lib/stripslash.c 0.81 0.47 FAIL ./lib/timespec.c 0.54 0.50 FAIL ./lib/unistd.c 0.83 0.80 0.43 ./lib/utimens.c 0.12 0.12 FAIL ./lib/vasnprintf.c 0.2 FAIL FAIL ./lib/vfprintf.c 0.1 FAIL FAIL ./lib/xalloc-die.c 0.11 FAIL FAIL ./lib/xmalloc.c 0.98 FAIL FAIL ./lib/xsize.c 0.5 0.50 0.10 ./lib/yesno.c 0.98 FAIL FAIL ./lzw.c 0.94 FAIL FAIL ./trees.c 0.13 FAIL FAIL ./unlzh.c 0.11 FAIL FAIL ./unlzw.c 0.13 FAIL FAIL ./unpack.c 0.99 FAIL FAIL ./unzip.c 0.1 FAIL FAIL ./util.c 0.15 FAIL FAIL ./version.c 0.39 0.41 0.45 ./zip.c 0.82 FAIL FAIL"},{"location":"Benchmarks/gzip_times_1.13/","title":"GZIP 1.13","text":"Compilation unit HighLevel with unsupported HighLevel LLVM Total passing 67/67 27/67 12/67 ./bits.c 0.11 FAIL FAIL ./deflate.c 0.11 FAIL FAIL ./gzip.c 0.25 FAIL FAIL ./inflate.c 0.14 FAIL FAIL ./lib/asnprintf.c 0.77 FAIL FAIL ./lib/basename-lgpl.c 0.59 FAIL FAIL ./lib/chdir-long.c 0.17 FAIL FAIL ./lib/cloexec.c 0.96 0.11 1.11 ./lib/creat-safer.c 0.57 0.57 0.18 ./lib/dirname-lgpl.c 0.12 FAIL FAIL ./lib/dup-safer-flag.c 0.96 0.96 1.70 ./lib/dup-safer.c 0.92 0.91 1.23 ./lib/exitfail.c 0.78 0.79 FAIL ./lib/fclose.c 0.11 FAIL FAIL ./lib/fcntl.c 0.11 0.10 FAIL ./lib/fd-hook.c 0.82 0.87 FAIL ./lib/fd-safer-flag.c 0.92 0.85 0.85 ./lib/fd-safer.c 0.89 0.90 0.89 ./lib/fflush.c 0.11 FAIL FAIL ./lib/filenamecat-lgpl.c 0.91 FAIL FAIL ./lib/fopen.c 0.13 FAIL FAIL ./lib/fprintf.c 0.11 FAIL FAIL ./lib/fpurge.c 0.11 FAIL FAIL ./lib/freading.c 0.91 FAIL FAIL ./lib/fseek.c 0.12 FAIL FAIL ./lib/fseeko.c 0.11 FAIL FAIL ./lib/fseterr.c 0.15 FAIL FAIL ./lib/getprogname.c 0.81 0.79 FAIL ./lib/gettime.c 0.6 0.59 FAIL ./lib/ialloc.c 0.82 0.76 FAIL ./lib/malloca.c 0.81 0.81 FAIL ./lib/math.c 0.13 0.12 0.34 ./lib/mbszero.c 0.1 FAIL FAIL ./lib/open-safer.c 0.56 0.71 FAIL ./lib/openat-die.c 0.16 FAIL FAIL ./lib/openat-proc.c 0.16 FAIL FAIL ./lib/openat-safer.c 0.63 0.59 FAIL ./lib/opendir-safer.c 0.1 0.98 FAIL ./lib/pipe-safer.c 0.92 0.95 0.88 ./lib/printf-args.c 0.1 FAIL FAIL ./lib/printf-frexp.c 0.16 0.13 0.38 ./lib/printf-frexpl.c 0.15 0.12 FAIL ./lib/printf-parse.c 0.14 FAIL FAIL ./lib/printf.c 0.81 FAIL FAIL ./lib/save-cwd.c 0.14 FAIL FAIL ./lib/savedir.c 0.11 FAIL FAIL ./lib/sig-handler.c 0.1 0.96 FAIL ./lib/stat-time.c 0.68 0.69 FAIL ./lib/stripslash.c 0.91 FAIL FAIL ./lib/time.c 0.89 0.85 FAIL ./lib/timespec.c 0.62 0.51 FAIL ./lib/unistd.c 0.95 0.89 0.87 ./lib/utimens.c 0.13 FAIL FAIL ./lib/vasnprintf.c 0.22 FAIL FAIL ./lib/vfprintf.c 0.1 FAIL FAIL ./lib/xalloc-die.c 0.12 FAIL FAIL ./lib/xmalloc.c 0.18 FAIL FAIL ./lib/xsize.c 0.48 0.49 0.11 ./lib/yesno.c 0.98 FAIL FAIL ./trees.c 0.13 FAIL FAIL ./unlzh.c 0.12 FAIL FAIL ./unlzw.c 0.13 FAIL FAIL ./unpack.c 0.1 FAIL FAIL ./unzip.c 0.11 FAIL FAIL ./util.c 0.15 FAIL FAIL ./version.c 0.44 0.43 0.42 ./zip.c 0.85 FAIL FAIL"},{"location":"Benchmarks/linux_kernel_times/","title":"Linux Kernel 6.11","text":"Compilation unit HighLevel with unsupported HighLevel Total passing 2907/2907 2906/2907 ./.vmlinux.export.c 0.41 0.50 ./arch/x86/boot/a20.c 0.1 0.96 ./arch/x86/boot/cmdline.c 0.94 0.94 ./arch/x86/boot/compressed/acpi.c 2.73 2.81 ./arch/x86/boot/compressed/cmdline.c 3.65 2.75 ./arch/x86/boot/compressed/cpuflags.c 0.64 0.69 ./arch/x86/boot/compressed/early_serial_console.c 3.61 2.87 ./arch/x86/boot/compressed/efi.c 4.13 2.85 ./arch/x86/boot/compressed/error.c 2.5 3.18 ./arch/x86/boot/compressed/ident_map_64.c 2.93 2.97 ./arch/x86/boot/compressed/idt_64.c 2.83 3.40 ./arch/x86/boot/compressed/kaslr.c 2.78 3.50 ./arch/x86/boot/compressed/misc.c 3.89 3.34 ./arch/x86/boot/compressed/pgtable_64.c 2.69 2.78 ./arch/x86/boot/compressed/string.c 0.8 0.12 ./arch/x86/boot/cpu.c 0.9 0.17 ./arch/x86/boot/cpucheck.c 0.1 0.11 ./arch/x86/boot/cpuflags.c 0.73 0.79 ./arch/x86/boot/early_serial_console.c 0.12 0.16 ./arch/x86/boot/edd.c 0.8 0.18 ./arch/x86/boot/main.c 0.96 0.17 ./arch/x86/boot/memory.c 0.12 0.18 ./arch/x86/boot/pm.c 0.1 0.11 ./arch/x86/boot/printf.c 0.1 0.16 ./arch/x86/boot/regs.c 0.79 0.87 ./arch/x86/boot/string.c 0.66 0.68 ./arch/x86/boot/tty.c 0.9 0.94 ./arch/x86/boot/version.c 0.98 0.13 ./arch/x86/boot/video-bios.c 0.95 0.10 ./arch/x86/boot/video-mode.c 0.1 0.16 ./arch/x86/boot/video-vesa.c 0.99 0.16 ./arch/x86/boot/video-vga.c 0.93 0.11 ./arch/x86/boot/video.c 0.1 0.12 ./arch/x86/entry/common.c 3.89 4.26 ./arch/x86/entry/syscall_32.c 3.61 3.68 ./arch/x86/entry/syscall_64.c 3.82 3.59 ./arch/x86/entry/vdso/extable.c 3.8 3.73 ./arch/x86/entry/vdso/vclock_gettime.c 1.43 1.51 ./arch/x86/entry/vdso/vdso-image-32.c 1.28 0.98 ./arch/x86/entry/vdso/vdso-image-64.c 1.73 1.53 ./arch/x86/entry/vdso/vdso32-setup.c 2.56 2.42 ./arch/x86/entry/vdso/vdso32/vclock_gettime.c 1.67 1.44 ./arch/x86/entry/vdso/vdso32/vgetcpu.c 0.13 0.15 ./arch/x86/entry/vdso/vgetcpu.c 0.15 0.15 ./arch/x86/entry/vdso/vgetrandom.c 1.7 1.74 ./arch/x86/entry/vdso/vma.c 3.37 3.45 ./arch/x86/entry/vsyscall/vsyscall_64.c 4.3 4.39 ./arch/x86/events/amd/core.c 3.93 3.73 ./arch/x86/events/amd/ibs.c 4.15 4.22 ./arch/x86/events/amd/iommu.c 3.67 3.66 ./arch/x86/events/amd/lbr.c 3.62 3.71 ./arch/x86/events/amd/uncore.c 3.44 3.69 ./arch/x86/events/core.c 4.64 4.77 ./arch/x86/events/intel/bts.c 3.75 3.65 ./arch/x86/events/intel/core.c 8.32 7.87 ./arch/x86/events/intel/cstate.c 3.85 3.72 ./arch/x86/events/intel/ds.c 5.66 5.66 ./arch/x86/events/intel/knc.c 3.84 4.11 ./arch/x86/events/intel/lbr.c 3.8 3.72 ./arch/x86/events/intel/p4.c 3.54 3.56 ./arch/x86/events/intel/p6.c 3.91 3.94 ./arch/x86/events/intel/pt.c 3.84 3.84 ./arch/x86/events/intel/uncore.c 4.14 4.60 ./arch/x86/events/intel/uncore_discovery.c 3.92 3.81 ./arch/x86/events/intel/uncore_nhmex.c 3.79 3.85 ./arch/x86/events/intel/uncore_snb.c 4.74 3.68 ./arch/x86/events/intel/uncore_snbep.c 7.1 7.40 ./arch/x86/events/msr.c 3.43 3.57 ./arch/x86/events/probe.c 1.34 1.60 ./arch/x86/events/rapl.c 3.66 3.91 ./arch/x86/events/utils.c 3.8 3.44 ./arch/x86/events/zhaoxin/core.c 3.88 3.48 ./arch/x86/ia32/audit.c 0.49 0.47 ./arch/x86/kernel/acpi/boot.c 3.92 3.79 ./arch/x86/kernel/acpi/cppc.c 3.31 3.28 ./arch/x86/kernel/acpi/cstate.c 3.26 3.24 ./arch/x86/kernel/acpi/madt_wakeup.c 3.19 3.39 ./arch/x86/kernel/acpi/sleep.c 3.48 3.55 ./arch/x86/kernel/alternative.c 4.13 3.84 ./arch/x86/kernel/amd_nb.c 3.3 3.19 ./arch/x86/kernel/apic/apic.c 5.6 5.50 ./arch/x86/kernel/apic/apic_common.c 2.66 2.94 ./arch/x86/kernel/apic/apic_flat_64.c 3.57 2.86 ./arch/x86/kernel/apic/apic_noop.c 2.72 2.77 ./arch/x86/kernel/apic/hw_nmi.c 3.12 3.10 ./arch/x86/kernel/apic/init.c 2.93 2.72 ./arch/x86/kernel/apic/io_apic.c 3.84 3.75 ./arch/x86/kernel/apic/ipi.c 2.72 2.83 ./arch/x86/kernel/apic/msi.c 3.3 3.52 ./arch/x86/kernel/apic/probe_64.c 2.58 2.81 ./arch/x86/kernel/apic/vector.c 4.51 4.78 ./arch/x86/kernel/audit_64.c 2.79 2.83 ./arch/x86/kernel/bootflag.c 2.98 3.74 ./arch/x86/kernel/callthunks.c 3.86 3.50 ./arch/x86/kernel/cet.c 3.74 3.77 ./arch/x86/kernel/check.c 2.67 2.65 ./arch/x86/kernel/cpu/amd.c 3.61 3.61 ./arch/x86/kernel/cpu/aperfmperf.c 3.35 3.52 ./arch/x86/kernel/cpu/bugs.c 5.35 4.97 ./arch/x86/kernel/cpu/cacheinfo.c 3.15 3.52 ./arch/x86/kernel/cpu/capflags.c 0.58 0.60 ./arch/x86/kernel/cpu/centaur.c 2.92 2.78 ./arch/x86/kernel/cpu/common.c 5.2 5.28 ./arch/x86/kernel/cpu/cpuid-deps.c 2.66 2.70 ./arch/x86/kernel/cpu/debugfs.c 2.75 2.74 ./arch/x86/kernel/cpu/feat_ctl.c 2.73 2.68 ./arch/x86/kernel/cpu/hygon.c 2.7 2.73 ./arch/x86/kernel/cpu/hypervisor.c 0.92 0.99 ./arch/x86/kernel/cpu/intel.c 4.26 4.14 ./arch/x86/kernel/cpu/intel_epb.c 2.67 2.75 ./arch/x86/kernel/cpu/match.c 2.67 2.65 ./arch/x86/kernel/cpu/mce/amd.c 5.11 5.84 ./arch/x86/kernel/cpu/mce/core.c 4.13 4.27 ./arch/x86/kernel/cpu/mce/genpool.c 3.33 2.93 ./arch/x86/kernel/cpu/mce/intel.c 2.73 2.90 ./arch/x86/kernel/cpu/mce/severity.c 3.88 3.72 ./arch/x86/kernel/cpu/mce/threshold.c 4.43 4.55 ./arch/x86/kernel/cpu/microcode/amd.c 3.9 3.29 ./arch/x86/kernel/cpu/microcode/core.c 3.11 3.35 ./arch/x86/kernel/cpu/microcode/intel.c 3.17 2.93 ./arch/x86/kernel/cpu/mshyperv.c 4.29 4.10 ./arch/x86/kernel/cpu/mtrr/cleanup.c 3.24 3.24 ./arch/x86/kernel/cpu/mtrr/generic.c 3.23 3.37 ./arch/x86/kernel/cpu/mtrr/if.c 2.43 2.41 ./arch/x86/kernel/cpu/mtrr/mtrr.c 3.3 3.21 ./arch/x86/kernel/cpu/perfctr-watchdog.c 3.24 3.22 ./arch/x86/kernel/cpu/powerflags.c 0.21 0.24 ./arch/x86/kernel/cpu/proc.c 2.68 2.82 ./arch/x86/kernel/cpu/rdrand.c 0.36 0.24 ./arch/x86/kernel/cpu/scattered.c 2.61 2.78 ./arch/x86/kernel/cpu/topology.c 2.91 2.78 ./arch/x86/kernel/cpu/topology_amd.c 2.74 2.87 ./arch/x86/kernel/cpu/topology_common.c 3.15 2.77 ./arch/x86/kernel/cpu/topology_ext.c 2.65 2.85 ./arch/x86/kernel/cpu/tsx.c 2.94 2.89 ./arch/x86/kernel/cpu/umwait.c 3.39 3.17 ./arch/x86/kernel/cpu/vmware.c 3.16 3.32 ./arch/x86/kernel/cpu/zhaoxin.c 2.7 2.71 ./arch/x86/kernel/cpuid.c 2.49 2.59 ./arch/x86/kernel/crash.c 3.39 3.29 ./arch/x86/kernel/crash_dump_64.c 3.66 2.88 ./arch/x86/kernel/dumpstack.c 3.47 3.34 ./arch/x86/kernel/dumpstack_64.c 3.1 3.23 ./arch/x86/kernel/e820.c 3.61 3.52 ./arch/x86/kernel/early-quirks.c 3.82 3.73 ./arch/x86/kernel/early_printk.c 1.41 1.76 ./arch/x86/kernel/ebda.c 2.83 2.70 ./arch/x86/kernel/espfix_64.c 3.6 3.49 ./arch/x86/kernel/fpu/bugs.c 0.31 0.31 ./arch/x86/kernel/fpu/core.c 4.89 4.52 ./arch/x86/kernel/fpu/init.c 1.46 1.72 ./arch/x86/kernel/fpu/regset.c 3.57 3.29 ./arch/x86/kernel/fpu/signal.c 3.45 3.50 ./arch/x86/kernel/fpu/xstate.c 3.78 4.12 ./arch/x86/kernel/head64.c 2.48 2.59 ./arch/x86/kernel/hpet.c 3.75 3.11 ./arch/x86/kernel/hw_breakpoint.c 3.58 3.57 ./arch/x86/kernel/i8237.c 1.58 1.53 ./arch/x86/kernel/i8253.c 3.85 2.90 ./arch/x86/kernel/i8259.c 3.25 3.25 ./arch/x86/kernel/idt.c 3.61 3.82 ./arch/x86/kernel/io_delay.c 1.71 1.63 ./arch/x86/kernel/ioport.c 3.69 3.40 ./arch/x86/kernel/irq.c 4.87 5.73 ./arch/x86/kernel/irq_64.c 3.16 3.14 ./arch/x86/kernel/irq_work.c 4.65 4.35 ./arch/x86/kernel/irqinit.c 4.24 4.58 ./arch/x86/kernel/itmt.c 3.57 3.33 ./arch/x86/kernel/jump_label.c 3.54 2.78 ./arch/x86/kernel/kdebugfs.c 2.88 2.85 ./arch/x86/kernel/kprobes/core.c 3.66 3.63 ./arch/x86/kernel/kprobes/opt.c 3.65 3.34 ./arch/x86/kernel/ksysfs.c 2.73 2.85 ./arch/x86/kernel/kvm.c 4.48 4.41 ./arch/x86/kernel/kvmclock.c 3.18 3.47 ./arch/x86/kernel/ldt.c 3.98 3.97 ./arch/x86/kernel/machine_kexec_64.c 3.44 3.59 ./arch/x86/kernel/mmconf-fam10h_64.c 3.95 3.39 ./arch/x86/kernel/module.c 2.99 3.23 ./arch/x86/kernel/mpparse.c 3.71 3.37 ./arch/x86/kernel/msr.c 3.57 3.33 ./arch/x86/kernel/nmi.c 4.34 4.19 ./arch/x86/kernel/paravirt.c 3.66 3.63 ./arch/x86/kernel/pci-dma.c 3.56 3.42 ./arch/x86/kernel/pcspeaker.c 2.72 2.63 ./arch/x86/kernel/perf_regs.c 3.47 3.41 ./arch/x86/kernel/platform-quirks.c 2.76 2.70 ./arch/x86/kernel/probe_roms.c 2.97 3.32 ./arch/x86/kernel/process.c 5.55 5.70 ./arch/x86/kernel/process_64.c 4.57 4.31 ./arch/x86/kernel/ptrace.c 3.91 4.20 ./arch/x86/kernel/pvclock.c 2.95 3.14 ./arch/x86/kernel/quirks.c 3.35 3.16 ./arch/x86/kernel/reboot.c 3.82 3.66 ./arch/x86/kernel/resource.c 0.56 0.64 ./arch/x86/kernel/rethook.c 3.4 2.91 ./arch/x86/kernel/rtc.c 2.91 2.95 ./arch/x86/kernel/setup.c 4.84 4.91 ./arch/x86/kernel/setup_percpu.c 3.34 3.30 ./arch/x86/kernel/signal.c 3.73 3.68 ./arch/x86/kernel/signal_32.c 3.53 3.61 ./arch/x86/kernel/signal_64.c 3.52 3.60 ./arch/x86/kernel/smp.c 4.95 4.89 ./arch/x86/kernel/smpboot.c 3.64 3.57 ./arch/x86/kernel/stacktrace.c 3.46 3.15 ./arch/x86/kernel/static_call.c 2.75 2.78 ./arch/x86/kernel/step.c 2.92 3.23 ./arch/x86/kernel/sys_ia32.c 3.64 3.67 ./arch/x86/kernel/sys_x86_64.c 3.72 3.48 ./arch/x86/kernel/time.c 1.99 1.70 ./arch/x86/kernel/tls.c 3.5 3.72 ./arch/x86/kernel/trace.c 3.47 3.21 ./arch/x86/kernel/trace_clock.c 0.63 0.70 ./arch/x86/kernel/tracepoint.c 2.53 2.86 ./arch/x86/kernel/traps.c 4.37 4.32 ./arch/x86/kernel/tsc.c 3.27 3.50 ./arch/x86/kernel/tsc_msr.c 2.89 2.77 ./arch/x86/kernel/tsc_sync.c 2.19 2.19 ./arch/x86/kernel/umip.c 3.77 3.73 ./arch/x86/kernel/unwind_orc.c 3.14 3.91 ./arch/x86/kernel/uprobes.c 3.92 4.42 ./arch/x86/kernel/vmcore_info_64.c 2.87 2.92 ./arch/x86/kernel/vsmp_64.c 2.67 2.68 ./arch/x86/kernel/x86_init.c 3.28 3.60 ./arch/x86/lib/cache-smp.c 0.58 0.57 ./arch/x86/lib/cmdline.c 0.17 0.18 ./arch/x86/lib/copy_mc.c 1.52 1.45 ./arch/x86/lib/cpu.c 2.77 2.51 ./arch/x86/lib/csum-partial_64.c 0.12 0.11 ./arch/x86/lib/csum-wrappers_64.c 1.36 1.43 ./arch/x86/lib/delay.c 1.34 0.93 ./arch/x86/lib/inat.c 0.64 0.62 ./arch/x86/lib/insn-eval.c 3.11 3.11 ./arch/x86/lib/insn.c 0.23 0.23 ./arch/x86/lib/iomem.c 2.6 2.68 ./arch/x86/lib/kaslr.c 0.79 0.77 ./arch/x86/lib/misc.c 0.65 0.49 ./arch/x86/lib/msr-reg-export.c 0.68 0.71 ./arch/x86/lib/msr-smp.c 0.73 0.72 ./arch/x86/lib/msr.c 3.71 3.68 ./arch/x86/lib/pc-conf-reg.c 0.65 0.57 ./arch/x86/lib/usercopy.c 1.36 1.27 ./arch/x86/lib/usercopy_64.c 3.49 2.95 ./arch/x86/mm/amdtopology.c 3.57 3.44 ./arch/x86/mm/cpu_entry_area.c 3.16 2.95 ./arch/x86/mm/dump_pagetables.c 2.92 3.21 ./arch/x86/mm/extable.c 3.74 3.93 ./arch/x86/mm/fault.c 4.66 4.73 ./arch/x86/mm/hugetlbpage.c 3.43 3.39 ./arch/x86/mm/init.c 3.66 4.96 ./arch/x86/mm/init_64.c 4.3 4.17 ./arch/x86/mm/ioremap.c 3.92 3.69 ./arch/x86/mm/kaslr.c 2.99 2.87 ./arch/x86/mm/maccess.c 1.38 1.36 ./arch/x86/mm/mmap.c 2.74 2.85 ./arch/x86/mm/numa.c 4.31 4.40 ./arch/x86/mm/numa_64.c 2.8 2.79 ./arch/x86/mm/pat/memtype.c 2.91 2.82 ./arch/x86/mm/pat/memtype_interval.c 2.62 2.54 ./arch/x86/mm/pat/set_memory.c 3.78 3.62 ./arch/x86/mm/pgprot.c 2.79 2.92 ./arch/x86/mm/pgtable.c 3.36 3.34 ./arch/x86/mm/physaddr.c 2.73 2.71 ./arch/x86/mm/pkeys.c 3.35 3.20 ./arch/x86/mm/pti.c 3.21 3.31 ./arch/x86/mm/srat.c 3.26 3.27 ./arch/x86/mm/tlb.c 3.65 3.57 ./arch/x86/pci/acpi.c 3.45 3.49 ./arch/x86/pci/amd_bus.c 2.91 3.19 ./arch/x86/pci/bus_numa.c 2.96 3.18 ./arch/x86/pci/common.c 3.41 3.44 ./arch/x86/pci/direct.c 3.16 2.96 ./arch/x86/pci/early.c 2.97 2.91 ./arch/x86/pci/fixup.c 3.58 3.58 ./arch/x86/pci/i386.c 3.55 3.10 ./arch/x86/pci/init.c 3.28 3.17 ./arch/x86/pci/irq.c 3.35 3.50 ./arch/x86/pci/legacy.c 2.86 2.97 ./arch/x86/pci/mmconfig-shared.c 3.61 3.36 ./arch/x86/pci/mmconfig_64.c 3.41 3.45 ./arch/x86/platform/efi/efi.c 3.98 4.12 ./arch/x86/platform/efi/efi_64.c 3.73 3.81 ./arch/x86/platform/efi/memmap.c 3.64 3.71 ./arch/x86/platform/efi/quirks.c 3.94 3.95 ./arch/x86/platform/efi/runtime-map.c 3.33 3.70 ./arch/x86/platform/intel/iosf_mbi.c 3.15 3.20 ./arch/x86/power/cpu.c 4.14 3.87 ./arch/x86/power/hibernate.c 3.2 3.56 ./arch/x86/power/hibernate_64.c 3.27 3.66 ./arch/x86/realmode/init.c 2.78 2.81 ./arch/x86/realmode/rm/regs.c 0.87 0.12 ./arch/x86/realmode/rm/video-bios.c 0.91 0.12 ./arch/x86/realmode/rm/video-mode.c 0.86 0.13 ./arch/x86/realmode/rm/video-vesa.c 0.86 0.11 ./arch/x86/realmode/rm/video-vga.c 0.99 0.10 ./arch/x86/realmode/rm/wakemain.c 0.91 0.80 ./arch/x86/tools/relocs_32.c 0.14 0.11 ./arch/x86/tools/relocs_64.c 0.13 0.13 ./arch/x86/tools/relocs_common.c 0.1 0.10 ./arch/x86/video/video-common.c 3.19 3.90 ./block/badblocks.c 2.76 2.68 ./block/bdev.c 3.83 3.72 ./block/bio.c 4.26 4.19 ./block/blk-cgroup.c 3.46 3.53 ./block/blk-core.c 4.58 4.75 ./block/blk-flush.c 3.31 3.34 ./block/blk-ia-ranges.c 3.2 3.20 ./block/blk-ioc.c 3.43 3.47 ./block/blk-iocost.c 4.14 4.24 ./block/blk-iolatency.c 4.17 3.83 ./block/blk-ioprio.c 3.34 3.42 ./block/blk-lib.c 3.36 3.38 ./block/blk-map.c 3.16 3.12 ./block/blk-merge.c 4.1 4.27 ./block/blk-mq-cpumap.c 3.28 3.33 ./block/blk-mq-debugfs.c 3.33 3.34 ./block/blk-mq-pci.c 2.99 3.24 ./block/blk-mq-sched.c 3.88 3.80 ./block/blk-mq-sysfs.c 3.34 3.40 ./block/blk-mq-tag.c 3.29 3.31 ./block/blk-mq-virtio.c 3.25 3.17 ./block/blk-mq.c 4.96 4.67 ./block/blk-pm.c 3.33 3.14 ./block/blk-rq-qos.c 2.91 3.27 ./block/blk-settings.c 3.53 3.41 ./block/blk-stat.c 3.13 3.35 ./block/blk-sysfs.c 3.56 3.44 ./block/blk-timeout.c 3.17 3.86 ./block/bsg.c 3.76 3.15 ./block/disk-events.c 3.19 2.99 ./block/early-lookup.c 2.92 3.45 ./block/elevator.c 3.91 3.94 ./block/fops.c 3.57 3.27 ./block/genhd.c 3.61 3.59 ./block/holder.c 3.1 3.18 ./block/ioctl.c 3.1 3.38 ./block/ioprio.c 3.51 3.65 ./block/kyber-iosched.c 4.5 4.49 ./block/mq-deadline.c 4.89 3.71 ./block/partitions/core.c 3.52 3.42 ./block/partitions/efi.c 3.63 3.62 ./block/partitions/msdos.c 3.44 3.42 ./certs/system_keyring.c 1.32 1.37 ./crypto/acompress.c 3.78 3.78 ./crypto/aead.c 3.74 3.70 ./crypto/aes_generic.c 2.76 2.76 ./crypto/ahash.c 3.91 3.84 ./crypto/akcipher.c 3.56 3.73 ./crypto/algapi.c 3.98 4.17 ./crypto/algboss.c 4.17 3.87 ./crypto/api.c 2.88 2.92 ./crypto/asymmetric_keys/asymmetric_type.c 2.6 2.55 ./crypto/asymmetric_keys/pkcs7.asn1.c 0.61 0.59 ./crypto/asymmetric_keys/pkcs7_parser.c 2.56 2.60 ./crypto/asymmetric_keys/pkcs7_trust.c 1.37 1.47 ./crypto/asymmetric_keys/pkcs7_verify.c 1.54 1.37 ./crypto/asymmetric_keys/public_key.c 2.69 2.73 ./crypto/asymmetric_keys/restrict.c 2.57 2.63 ./crypto/asymmetric_keys/signature.c 2.44 2.52 ./crypto/asymmetric_keys/x509.asn1.c 0.57 0.60 ./crypto/asymmetric_keys/x509_akid.asn1.c 0.54 0.55 ./crypto/asymmetric_keys/x509_cert_parser.c 1.62 1.47 ./crypto/asymmetric_keys/x509_loader.c 0.7 0.63 ./crypto/asymmetric_keys/x509_public_key.c 2.77 2.68 ./crypto/authenc.c 3.92 4.12 ./crypto/authencesn.c 4.41 4.90 ./crypto/cbc.c 2.79 2.68 ./crypto/ccm.c 2.94 3.39 ./crypto/cipher.c 2.75 2.72 ./crypto/cmac.c 2.86 2.61 ./crypto/compress.c 3.54 2.85 ./crypto/crc32c_generic.c 2.51 2.89 ./crypto/crypto_null.c 3.72 3.32 ./crypto/ctr.c 2.76 2.61 ./crypto/drbg.c 2.93 2.97 ./crypto/ecb.c 2.37 2.67 ./crypto/echainiv.c 3.21 3.88 ./crypto/gcm.c 3.27 3.10 ./crypto/geniv.c 3.84 4.17 ./crypto/ghash-generic.c 2.81 2.50 ./crypto/hash_info.c 0.62 0.64 ./crypto/hmac.c 2.79 2.94 ./crypto/jitterentropy-kcapi.c 2.42 2.72 ./crypto/jitterentropy.c 0.58 0.83 ./crypto/kpp.c 3.92 3.81 ./crypto/lskcipher.c 3.85 3.75 ./crypto/lzo-rle.c 2.96 2.95 ./crypto/lzo.c 2.89 2.80 ./crypto/md5.c 2.6 2.74 ./crypto/proc.c 3.67 3.78 ./crypto/rng.c 3.87 3.82 ./crypto/rsa-pkcs1pad.c 3.53 2.95 ./crypto/rsa.c 2.72 2.81 ./crypto/rsa_helper.c 0.14 0.13 ./crypto/rsaprivkey.asn1.c 0.54 0.53 ./crypto/rsapubkey.asn1.c 0.53 0.52 ./crypto/scatterwalk.c 2.9 3.10 ./crypto/scompress.c 3.86 4.17 ./crypto/seqiv.c 3.22 3.18 ./crypto/sha256_generic.c 2.74 2.80 ./crypto/sha3_generic.c 2.72 2.58 ./crypto/sha512_generic.c 3.27 2.98 ./crypto/shash.c 3.62 3.71 ./crypto/sig.c 3.6 3.59 ./crypto/skcipher.c 3.91 3.91 ./crypto/testmgr.c 2.79 3.50 ./drivers/acpi/ac.c 3.14 2.87 ./drivers/acpi/acpi_apd.c 3.22 2.86 ./drivers/acpi/acpi_lpat.c 2.89 3.70 ./drivers/acpi/acpi_lpit.c 2.95 2.80 ./drivers/acpi/acpi_memhotplug.c 2.87 2.95 ./drivers/acpi/acpi_pcc.c 2.97 3.13 ./drivers/acpi/acpi_platform.c 2.97 2.95 ./drivers/acpi/acpi_pnp.c 2.86 2.96 ./drivers/acpi/acpi_processor.c 3.59 3.72 ./drivers/acpi/acpi_video.c 3.94 4.23 ./drivers/acpi/acpica/dsargs.c 1.64 1.65 ./drivers/acpi/acpica/dscontrol.c 1.7 1.47 ./drivers/acpi/acpica/dsdebug.c 1.4 1.42 ./drivers/acpi/acpica/dsfield.c 1.69 1.56 ./drivers/acpi/acpica/dsinit.c 1.49 1.56 ./drivers/acpi/acpica/dsmethod.c 1.51 1.52 ./drivers/acpi/acpica/dsmthdat.c 1.46 1.56 ./drivers/acpi/acpica/dsobject.c 1.57 1.48 ./drivers/acpi/acpica/dsopcode.c 1.68 1.73 ./drivers/acpi/acpica/dspkginit.c 1.65 1.48 ./drivers/acpi/acpica/dsutils.c 1.44 1.58 ./drivers/acpi/acpica/dswexec.c 1.5 1.56 ./drivers/acpi/acpica/dswload.c 1.53 1.58 ./drivers/acpi/acpica/dswload2.c 1.69 1.59 ./drivers/acpi/acpica/dswscope.c 1.59 1.57 ./drivers/acpi/acpica/dswstate.c 1.42 1.68 ./drivers/acpi/acpica/evevent.c 1.54 1.42 ./drivers/acpi/acpica/evglock.c 1.44 1.53 ./drivers/acpi/acpica/evgpe.c 1.68 1.50 ./drivers/acpi/acpica/evgpeblk.c 1.56 1.58 ./drivers/acpi/acpica/evgpeinit.c 1.54 1.64 ./drivers/acpi/acpica/evgpeutil.c 1.55 1.58 ./drivers/acpi/acpica/evhandler.c 1.53 1.49 ./drivers/acpi/acpica/evmisc.c 1.55 1.56 ./drivers/acpi/acpica/evregion.c 1.56 1.53 ./drivers/acpi/acpica/evrgnini.c 1.44 1.52 ./drivers/acpi/acpica/evsci.c 1.54 1.37 ./drivers/acpi/acpica/evxface.c 1.58 1.68 ./drivers/acpi/acpica/evxfevnt.c 1.49 1.65 ./drivers/acpi/acpica/evxfgpe.c 1.55 1.41 ./drivers/acpi/acpica/evxfregn.c 1.64 1.56 ./drivers/acpi/acpica/exconcat.c 1.55 1.60 ./drivers/acpi/acpica/exconfig.c 1.57 1.61 ./drivers/acpi/acpica/exconvrt.c 1.47 1.44 ./drivers/acpi/acpica/excreate.c 1.58 1.55 ./drivers/acpi/acpica/exdebug.c 1.49 1.58 ./drivers/acpi/acpica/exdump.c 1.64 1.57 ./drivers/acpi/acpica/exfield.c 1.49 1.50 ./drivers/acpi/acpica/exfldio.c 1.58 1.53 ./drivers/acpi/acpica/exmisc.c 1.51 1.60 ./drivers/acpi/acpica/exmutex.c 1.54 1.48 ./drivers/acpi/acpica/exnames.c 1.71 1.56 ./drivers/acpi/acpica/exoparg1.c 1.47 1.53 ./drivers/acpi/acpica/exoparg2.c 1.49 1.55 ./drivers/acpi/acpica/exoparg3.c 1.62 1.53 ./drivers/acpi/acpica/exoparg6.c 1.6 1.62 ./drivers/acpi/acpica/exprep.c 1.69 1.55 ./drivers/acpi/acpica/exregion.c 1.52 1.59 ./drivers/acpi/acpica/exresnte.c 1.55 1.50 ./drivers/acpi/acpica/exresolv.c 1.63 1.55 ./drivers/acpi/acpica/exresop.c 1.44 1.42 ./drivers/acpi/acpica/exserial.c 1.51 1.55 ./drivers/acpi/acpica/exstore.c 1.47 1.67 ./drivers/acpi/acpica/exstoren.c 1.57 1.46 ./drivers/acpi/acpica/exstorob.c 1.52 1.61 ./drivers/acpi/acpica/exsystem.c 1.5 1.52 ./drivers/acpi/acpica/extrace.c 1.57 1.58 ./drivers/acpi/acpica/exutils.c 1.51 1.49 ./drivers/acpi/acpica/hwacpi.c 1.62 1.50 ./drivers/acpi/acpica/hwesleep.c 1.51 1.56 ./drivers/acpi/acpica/hwgpe.c 1.5 1.57 ./drivers/acpi/acpica/hwpci.c 1.58 1.58 ./drivers/acpi/acpica/hwregs.c 1.61 1.56 ./drivers/acpi/acpica/hwsleep.c 1.42 1.50 ./drivers/acpi/acpica/hwvalid.c 1.55 1.48 ./drivers/acpi/acpica/hwxface.c 1.59 1.60 ./drivers/acpi/acpica/hwxfsleep.c 1.47 1.46 ./drivers/acpi/acpica/nsaccess.c 1.55 1.60 ./drivers/acpi/acpica/nsalloc.c 1.56 1.59 ./drivers/acpi/acpica/nsarguments.c 1.55 1.49 ./drivers/acpi/acpica/nsconvert.c 1.62 1.61 ./drivers/acpi/acpica/nsdump.c 1.48 1.46 ./drivers/acpi/acpica/nseval.c 1.55 1.55 ./drivers/acpi/acpica/nsinit.c 1.57 1.62 ./drivers/acpi/acpica/nsload.c 1.5 1.55 ./drivers/acpi/acpica/nsnames.c 1.54 1.42 ./drivers/acpi/acpica/nsobject.c 1.55 1.60 ./drivers/acpi/acpica/nsparse.c 1.55 1.68 ./drivers/acpi/acpica/nspredef.c 1.59 1.58 ./drivers/acpi/acpica/nsprepkg.c 1.49 1.43 ./drivers/acpi/acpica/nsrepair.c 1.61 1.49 ./drivers/acpi/acpica/nsrepair2.c 1.54 1.58 ./drivers/acpi/acpica/nssearch.c 1.52 1.59 ./drivers/acpi/acpica/nsutils.c 1.54 1.58 ./drivers/acpi/acpica/nswalk.c 1.49 1.56 ./drivers/acpi/acpica/nsxfeval.c 1.67 1.56 ./drivers/acpi/acpica/nsxfname.c 1.51 1.57 ./drivers/acpi/acpica/nsxfobj.c 1.5 1.55 ./drivers/acpi/acpica/psargs.c 1.58 1.51 ./drivers/acpi/acpica/psloop.c 1.61 1.58 ./drivers/acpi/acpica/psobject.c 1.59 1.52 ./drivers/acpi/acpica/psopcode.c 1.51 1.58 ./drivers/acpi/acpica/psopinfo.c 1.5 1.58 ./drivers/acpi/acpica/psparse.c 1.56 1.51 ./drivers/acpi/acpica/psscope.c 1.49 1.52 ./drivers/acpi/acpica/pstree.c 1.54 1.51 ./drivers/acpi/acpica/psutils.c 1.51 1.52 ./drivers/acpi/acpica/pswalk.c 1.52 1.48 ./drivers/acpi/acpica/psxface.c 1.54 1.54 ./drivers/acpi/acpica/rsaddr.c 1.69 1.51 ./drivers/acpi/acpica/rscalc.c 1.53 1.59 ./drivers/acpi/acpica/rscreate.c 1.47 1.47 ./drivers/acpi/acpica/rsdumpinfo.c 1.59 1.58 ./drivers/acpi/acpica/rsinfo.c 1.57 1.55 ./drivers/acpi/acpica/rsio.c 1.48 1.57 ./drivers/acpi/acpica/rsirq.c 1.58 1.61 ./drivers/acpi/acpica/rslist.c 1.51 1.49 ./drivers/acpi/acpica/rsmemory.c 1.52 1.58 ./drivers/acpi/acpica/rsmisc.c 1.51 1.62 ./drivers/acpi/acpica/rsserial.c 1.56 1.50 ./drivers/acpi/acpica/rsutils.c 1.57 1.60 ./drivers/acpi/acpica/rsxface.c 1.58 1.52 ./drivers/acpi/acpica/tbdata.c 1.44 1.53 ./drivers/acpi/acpica/tbfadt.c 1.57 1.70 ./drivers/acpi/acpica/tbfind.c 1.58 1.51 ./drivers/acpi/acpica/tbinstal.c 1.49 1.48 ./drivers/acpi/acpica/tbprint.c 1.54 1.55 ./drivers/acpi/acpica/tbutils.c 1.59 1.44 ./drivers/acpi/acpica/tbxface.c 1.51 1.50 ./drivers/acpi/acpica/tbxfload.c 1.52 1.64 ./drivers/acpi/acpica/tbxfroot.c 1.55 1.56 ./drivers/acpi/acpica/utaddress.c 1.55 1.43 ./drivers/acpi/acpica/utalloc.c 1.53 1.61 ./drivers/acpi/acpica/utascii.c 1.56 1.66 ./drivers/acpi/acpica/utbuffer.c 1.58 1.51 ./drivers/acpi/acpica/utcksum.c 1.52 1.45 ./drivers/acpi/acpica/utcopy.c 1.54 1.57 ./drivers/acpi/acpica/utdebug.c 1.51 1.58 ./drivers/acpi/acpica/utdecode.c 1.54 1.57 ./drivers/acpi/acpica/utdelete.c 1.53 1.52 ./drivers/acpi/acpica/uterror.c 1.61 1.51 ./drivers/acpi/acpica/uteval.c 1.54 1.55 ./drivers/acpi/acpica/utexcep.c 1.51 1.46 ./drivers/acpi/acpica/utglobal.c 1.55 1.46 ./drivers/acpi/acpica/uthex.c 1.53 1.68 ./drivers/acpi/acpica/utids.c 1.59 1.50 ./drivers/acpi/acpica/utinit.c 1.5 1.62 ./drivers/acpi/acpica/utlock.c 1.56 1.54 ./drivers/acpi/acpica/utmath.c 1.62 1.53 ./drivers/acpi/acpica/utmisc.c 1.55 1.55 ./drivers/acpi/acpica/utmutex.c 1.52 1.56 ./drivers/acpi/acpica/utnonansi.c 1.57 1.44 ./drivers/acpi/acpica/utobject.c 1.55 1.61 ./drivers/acpi/acpica/utosi.c 1.53 1.53 ./drivers/acpi/acpica/utownerid.c 1.49 1.52 ./drivers/acpi/acpica/utpredef.c 1.53 1.46 ./drivers/acpi/acpica/utresdecode.c 1.49 1.60 ./drivers/acpi/acpica/utresrc.c 1.56 1.49 ./drivers/acpi/acpica/utstate.c 1.56 1.47 ./drivers/acpi/acpica/utstring.c 1.46 1.48 ./drivers/acpi/acpica/utstrsuppt.c 1.58 1.54 ./drivers/acpi/acpica/utstrtoul64.c 1.57 1.56 ./drivers/acpi/acpica/utxface.c 1.59 1.61 ./drivers/acpi/acpica/utxferror.c 1.45 1.53 ./drivers/acpi/acpica/utxfinit.c 1.47 1.48 ./drivers/acpi/acpica/utxfmutex.c 1.68 1.50 ./drivers/acpi/battery.c 3.63 3.76 ./drivers/acpi/bgrt.c 2.94 2.95 ./drivers/acpi/bus.c 3.76 3.64 ./drivers/acpi/button.c 3.68 2.85 ./drivers/acpi/container.c 2.87 2.87 ./drivers/acpi/cppc_acpi.c 3.21 3.98 ./drivers/acpi/debugfs.c 3.26 3.77 ./drivers/acpi/device_pm.c 3.38 3.62 ./drivers/acpi/device_sysfs.c 3.6 3.23 ./drivers/acpi/dock.c 2.89 2.97 ./drivers/acpi/dptf/int340x_thermal.c 2.9 2.80 ./drivers/acpi/ec.c 3.66 3.49 ./drivers/acpi/event.c 3.89 3.71 ./drivers/acpi/evged.c 3.55 3.95 ./drivers/acpi/fan_attr.c 3.66 3.96 ./drivers/acpi/fan_core.c 2.89 2.84 ./drivers/acpi/fan_hwmon.c 2.98 3.16 ./drivers/acpi/glue.c 3.48 3.29 ./drivers/acpi/ioapic.c 3.27 3.35 ./drivers/acpi/mipi-disco-img.c 3.38 3.93 ./drivers/acpi/nhlt.c 3.85 3.83 ./drivers/acpi/numa/srat.c 3.11 3.11 ./drivers/acpi/nvs.c 3.85 2.94 ./drivers/acpi/osi.c 2.98 2.99 ./drivers/acpi/osl.c 3.91 4.10 ./drivers/acpi/pci_irq.c 3.24 3.26 ./drivers/acpi/pci_link.c 3.42 3.54 ./drivers/acpi/pci_root.c 3.52 3.45 ./drivers/acpi/power.c 3.51 2.92 ./drivers/acpi/prmt.c 3.78 3.91 ./drivers/acpi/proc.c 3.68 3.51 ./drivers/acpi/processor_core.c 3.26 3.14 ./drivers/acpi/processor_driver.c 3.14 2.88 ./drivers/acpi/processor_idle.c 3.99 4.24 ./drivers/acpi/processor_pdc.c 3.12 3.11 ./drivers/acpi/processor_perflib.c 3.52 3.10 ./drivers/acpi/processor_thermal.c 3.3 3.11 ./drivers/acpi/processor_throttling.c 3.11 2.93 ./drivers/acpi/property.c 2.95 2.78 ./drivers/acpi/reboot.c 3.52 3.57 ./drivers/acpi/resource.c 3.22 3.19 ./drivers/acpi/scan.c 3.46 3.74 ./drivers/acpi/sleep.c 4.47 4.48 ./drivers/acpi/spcr.c 3.39 3.15 ./drivers/acpi/sysfs.c 2.93 3.97 ./drivers/acpi/tables.c 3.76 3.70 ./drivers/acpi/thermal.c 2.9 3.98 ./drivers/acpi/thermal_lib.c 3.17 3.92 ./drivers/acpi/utils.c 3.11 2.90 ./drivers/acpi/video_detect.c 3.53 3.73 ./drivers/acpi/wakeup.c 3.21 2.96 ./drivers/acpi/x86/apple.c 2.96 2.94 ./drivers/acpi/x86/blacklist.c 2.9 3.43 ./drivers/acpi/x86/cmos_rtc.c 3.26 3.15 ./drivers/acpi/x86/lpss.c 3.59 3.61 ./drivers/acpi/x86/s2idle.c 3.56 3.43 ./drivers/acpi/x86/utils.c 3.71 3.39 ./drivers/ata/ahci.c 4.11 4.32 ./drivers/ata/ata_piix.c 4.34 4.45 ./drivers/ata/libahci.c 4.13 4.16 ./drivers/ata/libata-acpi.c 3.8 3.78 ./drivers/ata/libata-core.c 5.6 5.65 ./drivers/ata/libata-eh.c 4.49 4.53 ./drivers/ata/libata-pata-timings.c 3.74 3.59 ./drivers/ata/libata-pmp.c 3.78 3.74 ./drivers/ata/libata-sata.c 3.76 3.52 ./drivers/ata/libata-scsi.c 3.97 4.37 ./drivers/ata/libata-sff.c 4.29 4.57 ./drivers/ata/libata-trace.c 4.31 4.34 ./drivers/ata/libata-transport.c 3.76 3.66 ./drivers/ata/pata_amd.c 3.54 3.67 ./drivers/ata/pata_oldpiix.c 3.78 3.66 ./drivers/ata/pata_sch.c 3.75 3.65 ./drivers/base/attribute_container.c 2.49 2.60 ./drivers/base/auxiliary.c 2.63 2.52 ./drivers/base/auxiliary_sysfs.c 2.81 2.65 ./drivers/base/bus.c 2.58 2.93 ./drivers/base/cacheinfo.c 3.1 3.10 ./drivers/base/class.c 3.11 3.49 ./drivers/base/component.c 2.72 2.66 ./drivers/base/container.c 2.81 2.66 ./drivers/base/core.c 4.61 4.88 ./drivers/base/cpu.c 3.74 3.72 ./drivers/base/dd.c 3.87 2.82 ./drivers/base/devres.c 2.89 2.90 ./drivers/base/devtmpfs.c 3.55 3.66 ./drivers/base/driver.c 2.76 2.57 ./drivers/base/firmware.c 2.71 2.70 ./drivers/base/firmware_loader/builtin/main.c 1.4 1.39 ./drivers/base/firmware_loader/main.c 3.63 3.49 ./drivers/base/init.c 2.89 3.78 ./drivers/base/map.c 2.6 2.66 ./drivers/base/module.c 2.7 2.52 ./drivers/base/node.c 3.24 3.28 ./drivers/base/physical_location.c 2.93 2.96 ./drivers/base/platform-msi.c 2.97 2.96 ./drivers/base/platform.c 3.55 3.57 ./drivers/base/power/common.c 3.75 2.94 ./drivers/base/power/generic_ops.c 2.7 2.61 ./drivers/base/power/main.c 4.21 4.41 ./drivers/base/power/qos.c 4.15 4.26 ./drivers/base/power/runtime.c 2.89 3.58 ./drivers/base/power/sysfs.c 2.6 2.79 ./drivers/base/power/trace.c 3.41 3.26 ./drivers/base/power/wakeirq.c 2.62 2.76 ./drivers/base/power/wakeup.c 4.51 4.38 ./drivers/base/power/wakeup_stats.c 2.7 2.92 ./drivers/base/property.c 3.87 3.93 ./drivers/base/regmap/regcache-flat.c 2.77 2.91 ./drivers/base/regmap/regcache-maple.c 2.67 2.59 ./drivers/base/regmap/regcache-rbtree.c 2.6 2.76 ./drivers/base/regmap/regcache.c 3.51 3.97 ./drivers/base/regmap/regmap-debugfs.c 2.93 2.74 ./drivers/base/regmap/regmap.c 4.27 4.34 ./drivers/base/swnode.c 2.8 2.76 ./drivers/base/syscore.c 4.25 4.24 ./drivers/base/topology.c 3.14 3.49 ./drivers/base/trace.c 3.7 3.42 ./drivers/base/transport_class.c 2.42 2.73 ./drivers/block/loop.c 3.65 3.42 ./drivers/block/virtio_blk.c 3.43 3.43 ./drivers/cdrom/cdrom.c 3.41 3.28 ./drivers/char/agp/amd64-agp.c 2.97 3.27 ./drivers/char/agp/backend.c 3.18 3.67 ./drivers/char/agp/generic.c 3.15 3.39 ./drivers/char/agp/intel-agp.c 3.1 3.12 ./drivers/char/agp/intel-gtt.c 3.42 3.51 ./drivers/char/agp/isoch.c 3.58 2.88 ./drivers/char/hpet.c 3.19 3.29 ./drivers/char/hw_random/core.c 2.9 2.67 ./drivers/char/hw_random/via-rng.c 2.47 2.47 ./drivers/char/mem.c 3.54 3.68 ./drivers/char/misc.c 3.14 2.86 ./drivers/char/nvram.c 2.91 3.45 ./drivers/char/random.c 4.69 4.55 ./drivers/char/virtio_console.c 3.28 3.38 ./drivers/clocksource/acpi_pm.c 3.26 2.99 ./drivers/clocksource/i8253.c 2.57 2.54 ./drivers/connector/cn_proc.c 4.31 4.26 ./drivers/connector/cn_queue.c 4.69 4.23 ./drivers/connector/connector.c 4.41 4.34 ./drivers/cpufreq/acpi-cpufreq.c 3.36 3.19 ./drivers/cpufreq/amd-pstate-trace.c 3.69 3.93 ./drivers/cpufreq/amd-pstate.c 4.67 4.49 ./drivers/cpufreq/cpufreq.c 4.47 4.40 ./drivers/cpufreq/cpufreq_governor.c 2.99 3.18 ./drivers/cpufreq/cpufreq_governor_attr_set.c 2.61 2.77 ./drivers/cpufreq/cpufreq_ondemand.c 2.84 3.97 ./drivers/cpufreq/cpufreq_performance.c 2.69 2.79 ./drivers/cpufreq/cpufreq_userspace.c 2.73 2.73 ./drivers/cpufreq/freq_table.c 2.95 2.88 ./drivers/cpufreq/intel_pstate.c 5.49 5.23 ./drivers/cpuidle/cpuidle-haltpoll.c 2.87 2.82 ./drivers/cpuidle/cpuidle.c 4.51 4.70 ./drivers/cpuidle/driver.c 2.8 2.74 ./drivers/cpuidle/governor.c 2.65 2.58 ./drivers/cpuidle/governors/haltpoll.c 4.54 4.40 ./drivers/cpuidle/governors/menu.c 1.57 1.59 ./drivers/cpuidle/poll_state.c 0.95 0.84 ./drivers/cpuidle/sysfs.c 2.8 2.95 ./drivers/dma-buf/dma-buf.c 3.71 3.57 ./drivers/dma-buf/dma-fence-array.c 2.24 2.93 ./drivers/dma-buf/dma-fence-chain.c 2.73 1.99 ./drivers/dma-buf/dma-fence-unwrap.c 1.9 2.41 ./drivers/dma-buf/dma-fence.c 3.85 3.78 ./drivers/dma-buf/dma-resv.c 2.99 2.95 ./drivers/dma-buf/sync_file.c 2.62 2.57 ./drivers/dma/acpi-dma.c 3.21 3.10 ./drivers/dma/dmaengine.c 3.41 3.51 ./drivers/dma/dw/acpi.c 3.39 3.25 ./drivers/dma/dw/core.c 3.21 3.27 ./drivers/dma/dw/dw.c 3.91 3.23 ./drivers/dma/dw/idma32.c 3.18 3.16 ./drivers/dma/hsu/hsu.c 3.1 3.11 ./drivers/dma/virt-dma.c 3.13 3.36 ./drivers/firewire/init_ohci1394_dma.c 3.12 3.20 ./drivers/firmware/dmi-id.c 2.79 2.77 ./drivers/firmware/dmi_scan.c 3.7 3.21 ./drivers/firmware/efi/earlycon.c 3.27 3.16 ./drivers/firmware/efi/efi-bgrt.c 3.74 3.83 ./drivers/firmware/efi/efi.c 4.12 3.88 ./drivers/firmware/efi/esrt.c 3.22 3.19 ./drivers/firmware/efi/libstub/alignedmem.c 3.45 3.65 ./drivers/firmware/efi/libstub/efi-stub-helper.c 3.78 3.74 ./drivers/firmware/efi/libstub/file.c 3.7 3.50 ./drivers/firmware/efi/libstub/gop.c 3.48 3.60 ./drivers/firmware/efi/libstub/mem.c 3.69 3.76 ./drivers/firmware/efi/libstub/pci.c 3.94 3.80 ./drivers/firmware/efi/libstub/printk.c 3.62 3.57 ./drivers/firmware/efi/libstub/random.c 3.79 3.59 ./drivers/firmware/efi/libstub/randomalloc.c 3.68 3.71 ./drivers/firmware/efi/libstub/relocate.c 3.65 3.66 ./drivers/firmware/efi/libstub/secureboot.c 3.61 3.48 ./drivers/firmware/efi/libstub/skip_spaces.c 0.77 0.13 ./drivers/firmware/efi/libstub/smbios.c 3.59 3.75 ./drivers/firmware/efi/libstub/tpm.c 3.96 4.23 ./drivers/firmware/efi/libstub/vsprintf.c 0.18 0.16 ./drivers/firmware/efi/libstub/x86-5lvl.c 3.52 3.73 ./drivers/firmware/efi/libstub/x86-stub.c 4.85 3.95 ./drivers/firmware/efi/memattr.c 2.99 2.86 ./drivers/firmware/efi/memmap.c 3.71 3.78 ./drivers/firmware/efi/reboot.c 2.9 2.82 ./drivers/firmware/efi/runtime-wrappers.c 3.62 3.61 ./drivers/firmware/efi/tpm.c 3.37 3.56 ./drivers/firmware/efi/vars.c 2.84 2.72 ./drivers/firmware/memmap.c 2.75 2.88 ./drivers/gpu/drm/bridge/panel.c 3.11 3.10 ./drivers/gpu/drm/display/drm_display_helper_mod.c 2.68 2.83 ./drivers/gpu/drm/display/drm_dp_dual_mode_helper.c 3.57 3.59 ./drivers/gpu/drm/display/drm_dp_helper.c 4.28 3.91 ./drivers/gpu/drm/display/drm_dp_mst_topology.c 4.43 4.10 ./drivers/gpu/drm/display/drm_dsc_helper.c 3.88 3.97 ./drivers/gpu/drm/display/drm_hdcp_helper.c 3.1 3.45 ./drivers/gpu/drm/display/drm_hdmi_helper.c 3.17 3.10 ./drivers/gpu/drm/display/drm_scdc_helper.c 3.73 3.78 ./drivers/gpu/drm/drm_aperture.c 2.7 2.45 ./drivers/gpu/drm/drm_atomic.c 3.57 3.75 ./drivers/gpu/drm/drm_atomic_helper.c 3.33 3.54 ./drivers/gpu/drm/drm_atomic_state_helper.c 3.16 3.18 ./drivers/gpu/drm/drm_atomic_uapi.c 3.4 3.44 ./drivers/gpu/drm/drm_auth.c 3.11 3.24 ./drivers/gpu/drm/drm_blend.c 3.17 3.24 ./drivers/gpu/drm/drm_bridge.c 3.54 3.36 ./drivers/gpu/drm/drm_buddy.c 2.78 2.70 ./drivers/gpu/drm/drm_cache.c 2.91 2.84 ./drivers/gpu/drm/drm_client.c 3.31 3.35 ./drivers/gpu/drm/drm_client_modeset.c 3.47 3.33 ./drivers/gpu/drm/drm_color_mgmt.c 3.33 3.52 ./drivers/gpu/drm/drm_connector.c 3.36 3.37 ./drivers/gpu/drm/drm_crtc.c 3.51 3.47 ./drivers/gpu/drm/drm_crtc_helper.c 3.32 3.46 ./drivers/gpu/drm/drm_damage_helper.c 3.18 3.95 ./drivers/gpu/drm/drm_debugfs.c 3.44 3.36 ./drivers/gpu/drm/drm_debugfs_crc.c 3.28 3.28 ./drivers/gpu/drm/drm_displayid.c 2.61 2.76 ./drivers/gpu/drm/drm_drv.c 3.49 3.45 ./drivers/gpu/drm/drm_dumb_buffers.c 3.18 3.11 ./drivers/gpu/drm/drm_edid.c 4.52 4.44 ./drivers/gpu/drm/drm_eld.c 0.1 0.11 ./drivers/gpu/drm/drm_encoder.c 3.12 3.32 ./drivers/gpu/drm/drm_encoder_slave.c 3.89 3.58 ./drivers/gpu/drm/drm_file.c 3.28 3.48 ./drivers/gpu/drm/drm_flip_work.c 3.33 3.41 ./drivers/gpu/drm/drm_format_helper.c 2.8 2.66 ./drivers/gpu/drm/drm_fourcc.c 1.56 1.66 ./drivers/gpu/drm/drm_framebuffer.c 3.37 3.32 ./drivers/gpu/drm/drm_gem.c 3.8 3.81 ./drivers/gpu/drm/drm_gem_atomic_helper.c 3.43 3.27 ./drivers/gpu/drm/drm_gem_framebuffer_helper.c 3.26 3.39 ./drivers/gpu/drm/drm_gem_shmem_helper.c 3.68 3.64 ./drivers/gpu/drm/drm_ioc32.c 3.3 3.20 ./drivers/gpu/drm/drm_ioctl.c 3.44 3.61 ./drivers/gpu/drm/drm_kms_helper_common.c 2.65 2.52 ./drivers/gpu/drm/drm_lease.c 3.13 3.45 ./drivers/gpu/drm/drm_managed.c 3.19 3.29 ./drivers/gpu/drm/drm_mipi_dsi.c 2.93 2.83 ./drivers/gpu/drm/drm_mm.c 2.8 2.72 ./drivers/gpu/drm/drm_mode_config.c 3.53 3.19 ./drivers/gpu/drm/drm_mode_object.c 3.23 3.42 ./drivers/gpu/drm/drm_modes.c 3.9 3.87 ./drivers/gpu/drm/drm_modeset_helper.c 3.82 3.77 ./drivers/gpu/drm/drm_modeset_lock.c 3.12 3.20 ./drivers/gpu/drm/drm_panel.c 3.59 3.71 ./drivers/gpu/drm/drm_panel_orientation_quirks.c 3.87 3.95 ./drivers/gpu/drm/drm_pci.c 3.4 3.15 ./drivers/gpu/drm/drm_plane.c 3.31 3.30 ./drivers/gpu/drm/drm_plane_helper.c 3.66 3.17 ./drivers/gpu/drm/drm_prime.c 3.34 3.11 ./drivers/gpu/drm/drm_print.c 2.81 3.54 ./drivers/gpu/drm/drm_probe_helper.c 3.36 3.43 ./drivers/gpu/drm/drm_property.c 3.22 3.11 ./drivers/gpu/drm/drm_rect.c 2.68 2.77 ./drivers/gpu/drm/drm_self_refresh_helper.c 3.21 3.19 ./drivers/gpu/drm/drm_simple_kms_helper.c 3.41 3.24 ./drivers/gpu/drm/drm_syncobj.c 3.32 3.54 ./drivers/gpu/drm/drm_sysfs.c 3.84 3.65 ./drivers/gpu/drm/drm_trace_points.c 3.66 3.68 ./drivers/gpu/drm/drm_vblank.c 3.41 3.35 ./drivers/gpu/drm/drm_vblank_work.c 3.14 3.10 ./drivers/gpu/drm/drm_vma_manager.c 2.8 3.59 ./drivers/gpu/drm/drm_writeback.c 3.44 3.27 ./drivers/gpu/drm/i915/display/dvo_ch7017.c 5.34 5.66 ./drivers/gpu/drm/i915/display/dvo_ch7xxx.c 4.98 5.12 ./drivers/gpu/drm/i915/display/dvo_ivch.c 4.95 4.59 ./drivers/gpu/drm/i915/display/dvo_ns2501.c 5.36 5.22 ./drivers/gpu/drm/i915/display/dvo_sil164.c 4.89 4.55 ./drivers/gpu/drm/i915/display/dvo_tfp410.c 4.65 4.70 ./drivers/gpu/drm/i915/display/g4x_dp.c 5.84 5.64 ./drivers/gpu/drm/i915/display/g4x_hdmi.c 5.63 5.83 ./drivers/gpu/drm/i915/display/hsw_ips.c 5.59 5.77 ./drivers/gpu/drm/i915/display/i9xx_plane.c 5.89 6.23 ./drivers/gpu/drm/i915/display/i9xx_wm.c 6.54 6.19 ./drivers/gpu/drm/i915/display/icl_dsi.c 6.12 6.29 ./drivers/gpu/drm/i915/display/intel_acpi.c 5.59 5.32 ./drivers/gpu/drm/i915/display/intel_alpm.c 5.51 5.60 ./drivers/gpu/drm/i915/display/intel_atomic.c 5.34 5.27 ./drivers/gpu/drm/i915/display/intel_atomic_plane.c 5.46 5.50 ./drivers/gpu/drm/i915/display/intel_audio.c 5.75 5.94 ./drivers/gpu/drm/i915/display/intel_backlight.c 5.99 5.77 ./drivers/gpu/drm/i915/display/intel_bios.c 5.39 5.32 ./drivers/gpu/drm/i915/display/intel_bw.c 5.13 5.39 ./drivers/gpu/drm/i915/display/intel_cdclk.c 6.34 6.10 ./drivers/gpu/drm/i915/display/intel_color.c 7.12 6.86 ./drivers/gpu/drm/i915/display/intel_combo_phy.c 5.6 5.69 ./drivers/gpu/drm/i915/display/intel_connector.c 5.72 5.42 ./drivers/gpu/drm/i915/display/intel_crt.c 5.65 5.55 ./drivers/gpu/drm/i915/display/intel_crtc.c 5.5 5.69 ./drivers/gpu/drm/i915/display/intel_crtc_state_dump.c 5.14 5.86 ./drivers/gpu/drm/i915/display/intel_cursor.c 5.69 5.72 ./drivers/gpu/drm/i915/display/intel_cx0_phy.c 6.28 6.39 ./drivers/gpu/drm/i915/display/intel_ddi.c 6.56 6.84 ./drivers/gpu/drm/i915/display/intel_ddi_buf_trans.c 5.52 5.57 ./drivers/gpu/drm/i915/display/intel_display.c 7.75 7.73 ./drivers/gpu/drm/i915/display/intel_display_debugfs.c 5.97 5.71 ./drivers/gpu/drm/i915/display/intel_display_debugfs_params.c 4.32 4.28 ./drivers/gpu/drm/i915/display/intel_display_device.c 5.68 4.88 ./drivers/gpu/drm/i915/display/intel_display_driver.c 5.22 5.49 ./drivers/gpu/drm/i915/display/intel_display_irq.c 6.12 6.18 ./drivers/gpu/drm/i915/display/intel_display_params.c 4.52 4.36 ./drivers/gpu/drm/i915/display/intel_display_power.c 5.85 5.86 ./drivers/gpu/drm/i915/display/intel_display_power_map.c 5.56 5.36 ./drivers/gpu/drm/i915/display/intel_display_power_well.c 5.78 5.80 ./drivers/gpu/drm/i915/display/intel_display_reset.c 5.15 5.15 ./drivers/gpu/drm/i915/display/intel_display_rps.c 4.68 5.62 ./drivers/gpu/drm/i915/display/intel_display_trace.c 6.27 5.86 ./drivers/gpu/drm/i915/display/intel_display_wa.c 4.89 4.66 ./drivers/gpu/drm/i915/display/intel_dkl_phy.c 4.8 5.16 ./drivers/gpu/drm/i915/display/intel_dmc.c 5.12 4.95 ./drivers/gpu/drm/i915/display/intel_dmc_wl.c 5.45 5.11 ./drivers/gpu/drm/i915/display/intel_dp.c 5.84 6.14 ./drivers/gpu/drm/i915/display/intel_dp_aux.c 5.81 5.49 ./drivers/gpu/drm/i915/display/intel_dp_aux_backlight.c 5.21 5.13 ./drivers/gpu/drm/i915/display/intel_dp_hdcp.c 5.59 5.43 ./drivers/gpu/drm/i915/display/intel_dp_link_training.c 5.2 5.23 ./drivers/gpu/drm/i915/display/intel_dp_mst.c 5.98 5.87 ./drivers/gpu/drm/i915/display/intel_dpio_phy.c 5.98 5.91 ./drivers/gpu/drm/i915/display/intel_dpll.c 6.72 6.24 ./drivers/gpu/drm/i915/display/intel_dpll_mgr.c 6.13 6.69 ./drivers/gpu/drm/i915/display/intel_dpt.c 4.89 5.43 ./drivers/gpu/drm/i915/display/intel_dpt_common.c 5.87 5.52 ./drivers/gpu/drm/i915/display/intel_drrs.c 5.49 5.63 ./drivers/gpu/drm/i915/display/intel_dsb.c 5.59 5.51 ./drivers/gpu/drm/i915/display/intel_dsb_buffer.c 5.3 5.22 ./drivers/gpu/drm/i915/display/intel_dsi.c 5.11 5.23 ./drivers/gpu/drm/i915/display/intel_dsi_dcs_backlight.c 5.25 5.29 ./drivers/gpu/drm/i915/display/intel_dsi_vbt.c 5.76 5.63 ./drivers/gpu/drm/i915/display/intel_dvo.c 5.62 5.52 ./drivers/gpu/drm/i915/display/intel_encoder.c 4.96 5.82 ./drivers/gpu/drm/i915/display/intel_fb.c 5.36 5.88 ./drivers/gpu/drm/i915/display/intel_fb_bo.c 4.55 4.44 ./drivers/gpu/drm/i915/display/intel_fb_pin.c 5.32 5.10 ./drivers/gpu/drm/i915/display/intel_fbc.c 6.28 6.24 ./drivers/gpu/drm/i915/display/intel_fdi.c 5.66 5.85 ./drivers/gpu/drm/i915/display/intel_fifo_underrun.c 6.64 6.19 ./drivers/gpu/drm/i915/display/intel_frontbuffer.c 5.48 5.60 ./drivers/gpu/drm/i915/display/intel_global_state.c 5.12 5.12 ./drivers/gpu/drm/i915/display/intel_gmbus.c 5.65 5.66 ./drivers/gpu/drm/i915/display/intel_hdcp.c 5.86 5.52 ./drivers/gpu/drm/i915/display/intel_hdcp_gsc.c 4.49 4.55 ./drivers/gpu/drm/i915/display/intel_hdcp_gsc_message.c 4.39 4.38 ./drivers/gpu/drm/i915/display/intel_hdmi.c 5.85 5.83 ./drivers/gpu/drm/i915/display/intel_hotplug.c 5.21 5.16 ./drivers/gpu/drm/i915/display/intel_hotplug_irq.c 5.71 5.68 ./drivers/gpu/drm/i915/display/intel_hti.c 4.88 4.85 ./drivers/gpu/drm/i915/display/intel_link_bw.c 5.21 5.22 ./drivers/gpu/drm/i915/display/intel_load_detect.c 5.17 5.17 ./drivers/gpu/drm/i915/display/intel_lpe_audio.c 5.2 5.16 ./drivers/gpu/drm/i915/display/intel_lspcon.c 5.48 5.66 ./drivers/gpu/drm/i915/display/intel_lvds.c 6.16 5.85 ./drivers/gpu/drm/i915/display/intel_modeset_lock.c 5.87 4.98 ./drivers/gpu/drm/i915/display/intel_modeset_setup.c 5.75 5.88 ./drivers/gpu/drm/i915/display/intel_modeset_verify.c 5.12 5.10 ./drivers/gpu/drm/i915/display/intel_opregion.c 5.23 5.87 ./drivers/gpu/drm/i915/display/intel_overlay.c 6.21 5.61 ./drivers/gpu/drm/i915/display/intel_panel.c 5.69 5.78 ./drivers/gpu/drm/i915/display/intel_pch_display.c 5.73 5.79 ./drivers/gpu/drm/i915/display/intel_pch_refclk.c 5.76 5.61 ./drivers/gpu/drm/i915/display/intel_pipe_crc.c 5.74 5.75 ./drivers/gpu/drm/i915/display/intel_plane_initial.c 5.36 5.25 ./drivers/gpu/drm/i915/display/intel_pmdemand.c 6.4 6.41 ./drivers/gpu/drm/i915/display/intel_pps.c 6.1 5.71 ./drivers/gpu/drm/i915/display/intel_psr.c 6.36 6.17 ./drivers/gpu/drm/i915/display/intel_qp_tables.c 1.7 1.14 ./drivers/gpu/drm/i915/display/intel_quirks.c 5.94 5.31 ./drivers/gpu/drm/i915/display/intel_sdvo.c 5.94 5.99 ./drivers/gpu/drm/i915/display/intel_snps_phy.c 11.47 11.23 ./drivers/gpu/drm/i915/display/intel_sprite.c 6.25 6.31 ./drivers/gpu/drm/i915/display/intel_sprite_uapi.c 5.24 5.10 ./drivers/gpu/drm/i915/display/intel_tc.c 5.93 5.88 ./drivers/gpu/drm/i915/display/intel_tv.c 5.63 5.83 ./drivers/gpu/drm/i915/display/intel_vblank.c 5.47 5.15 ./drivers/gpu/drm/i915/display/intel_vdsc.c 6.17 6.34 ./drivers/gpu/drm/i915/display/intel_vga.c 5.75 4.62 ./drivers/gpu/drm/i915/display/intel_vrr.c 5.93 5.30 ./drivers/gpu/drm/i915/display/intel_wm.c 5.2 4.95 ./drivers/gpu/drm/i915/display/skl_scaler.c 5.47 5.63 ./drivers/gpu/drm/i915/display/skl_universal_plane.c 6.66 6.31 ./drivers/gpu/drm/i915/display/skl_watermark.c 6.6 6.79 ./drivers/gpu/drm/i915/display/vlv_dsi.c 5.78 6.43 ./drivers/gpu/drm/i915/display/vlv_dsi_pll.c 5.62 5.59 ./drivers/gpu/drm/i915/gem/i915_gem_busy.c 4.13 4.37 ./drivers/gpu/drm/i915/gem/i915_gem_clflush.c 4.89 4.60 ./drivers/gpu/drm/i915/gem/i915_gem_context.c 5.23 5.73 ./drivers/gpu/drm/i915/gem/i915_gem_create.c 5.3 4.84 ./drivers/gpu/drm/i915/gem/i915_gem_dmabuf.c 4.35 4.42 ./drivers/gpu/drm/i915/gem/i915_gem_domain.c 4.53 4.92 ./drivers/gpu/drm/i915/gem/i915_gem_execbuffer.c 4.99 5.10 ./drivers/gpu/drm/i915/gem/i915_gem_internal.c 4.56 4.14 ./drivers/gpu/drm/i915/gem/i915_gem_lmem.c 4.67 4.55 ./drivers/gpu/drm/i915/gem/i915_gem_mman.c 4.73 4.92 ./drivers/gpu/drm/i915/gem/i915_gem_object.c 5.15 4.80 ./drivers/gpu/drm/i915/gem/i915_gem_pages.c 4.44 4.57 ./drivers/gpu/drm/i915/gem/i915_gem_phys.c 4.69 4.63 ./drivers/gpu/drm/i915/gem/i915_gem_pm.c 4.46 4.47 ./drivers/gpu/drm/i915/gem/i915_gem_region.c 4.97 4.84 ./drivers/gpu/drm/i915/gem/i915_gem_shmem.c 5.33 5.75 ./drivers/gpu/drm/i915/gem/i915_gem_shrinker.c 5.1 5.24 ./drivers/gpu/drm/i915/gem/i915_gem_stolen.c 4.32 4.48 ./drivers/gpu/drm/i915/gem/i915_gem_throttle.c 4.93 4.83 ./drivers/gpu/drm/i915/gem/i915_gem_tiling.c 4.4 4.41 ./drivers/gpu/drm/i915/gem/i915_gem_ttm.c 4.78 4.52 ./drivers/gpu/drm/i915/gem/i915_gem_ttm_move.c 4.68 4.58 ./drivers/gpu/drm/i915/gem/i915_gem_ttm_pm.c 4.37 4.46 ./drivers/gpu/drm/i915/gem/i915_gem_userptr.c 4.64 4.71 ./drivers/gpu/drm/i915/gem/i915_gem_wait.c 4.38 4.26 ./drivers/gpu/drm/i915/gem/i915_gemfs.c 4.47 4.20 ./drivers/gpu/drm/i915/gt/gen2_engine_cs.c 4.51 4.58 ./drivers/gpu/drm/i915/gt/gen6_engine_cs.c 4.23 4.17 ./drivers/gpu/drm/i915/gt/gen6_ppgtt.c 4.87 5.59 ./drivers/gpu/drm/i915/gt/gen6_renderstate.c 1.74 1.77 ./drivers/gpu/drm/i915/gt/gen7_renderclear.c 4.38 4.48 ./drivers/gpu/drm/i915/gt/gen7_renderstate.c 1.77 1.67 ./drivers/gpu/drm/i915/gt/gen8_engine_cs.c 4.79 4.94 ./drivers/gpu/drm/i915/gt/gen8_ppgtt.c 5.15 4.93 ./drivers/gpu/drm/i915/gt/gen8_renderstate.c 1.75 1.76 ./drivers/gpu/drm/i915/gt/gen9_renderstate.c 1.74 1.69 ./drivers/gpu/drm/i915/gt/intel_breadcrumbs.c 5.33 4.89 ./drivers/gpu/drm/i915/gt/intel_context.c 5.76 5.11 ./drivers/gpu/drm/i915/gt/intel_context_sseu.c 4.96 4.99 ./drivers/gpu/drm/i915/gt/intel_engine_cs.c 5.59 5.22 ./drivers/gpu/drm/i915/gt/intel_engine_heartbeat.c 5.84 4.78 ./drivers/gpu/drm/i915/gt/intel_engine_pm.c 4.7 4.94 ./drivers/gpu/drm/i915/gt/intel_engine_user.c 4.55 4.62 ./drivers/gpu/drm/i915/gt/intel_execlists_submission.c 5.25 5.21 ./drivers/gpu/drm/i915/gt/intel_ggtt.c 4.68 4.91 ./drivers/gpu/drm/i915/gt/intel_ggtt_fencing.c 4.56 4.55 ./drivers/gpu/drm/i915/gt/intel_ggtt_gmch.c 4.73 4.32 ./drivers/gpu/drm/i915/gt/intel_gsc.c 4.59 4.49 ./drivers/gpu/drm/i915/gt/intel_gt.c 5.61 4.89 ./drivers/gpu/drm/i915/gt/intel_gt_buffer_pool.c 4.48 4.58 ./drivers/gpu/drm/i915/gt/intel_gt_ccs_mode.c 4.55 4.51 ./drivers/gpu/drm/i915/gt/intel_gt_clock_utils.c 4.44 4.40 ./drivers/gpu/drm/i915/gt/intel_gt_debugfs.c 4.49 4.43 ./drivers/gpu/drm/i915/gt/intel_gt_engines_debugfs.c 4.26 4.16 ./drivers/gpu/drm/i915/gt/intel_gt_irq.c 4.64 4.37 ./drivers/gpu/drm/i915/gt/intel_gt_mcr.c 4.46 4.54 ./drivers/gpu/drm/i915/gt/intel_gt_pm.c 5.25 5.33 ./drivers/gpu/drm/i915/gt/intel_gt_pm_debugfs.c 4.47 4.43 ./drivers/gpu/drm/i915/gt/intel_gt_pm_irq.c 4.56 4.32 ./drivers/gpu/drm/i915/gt/intel_gt_requests.c 4.32 4.35 ./drivers/gpu/drm/i915/gt/intel_gt_sysfs.c 4.47 4.66 ./drivers/gpu/drm/i915/gt/intel_gt_sysfs_pm.c 4.56 4.82 ./drivers/gpu/drm/i915/gt/intel_gtt.c 5.12 4.82 ./drivers/gpu/drm/i915/gt/intel_llc.c 4.5 4.42 ./drivers/gpu/drm/i915/gt/intel_lrc.c 5.26 5.32 ./drivers/gpu/drm/i915/gt/intel_migrate.c 4.98 5.76 ./drivers/gpu/drm/i915/gt/intel_mocs.c 4.35 4.41 ./drivers/gpu/drm/i915/gt/intel_ppgtt.c 4.94 4.88 ./drivers/gpu/drm/i915/gt/intel_rc6.c 4.71 4.36 ./drivers/gpu/drm/i915/gt/intel_region_lmem.c 4.37 4.43 ./drivers/gpu/drm/i915/gt/intel_renderstate.c 4.91 4.97 ./drivers/gpu/drm/i915/gt/intel_reset.c 5.24 5.16 ./drivers/gpu/drm/i915/gt/intel_ring.c 4.49 4.55 ./drivers/gpu/drm/i915/gt/intel_ring_submission.c 5.17 5.48 ./drivers/gpu/drm/i915/gt/intel_rps.c 4.84 4.73 ./drivers/gpu/drm/i915/gt/intel_sa_media.c 4.29 4.27 ./drivers/gpu/drm/i915/gt/intel_sseu.c 4.38 4.59 ./drivers/gpu/drm/i915/gt/intel_sseu_debugfs.c 4.63 4.38 ./drivers/gpu/drm/i915/gt/intel_timeline.c 4.42 4.50 ./drivers/gpu/drm/i915/gt/intel_tlb.c 4.42 4.31 ./drivers/gpu/drm/i915/gt/intel_wopcm.c 4.29 4.53 ./drivers/gpu/drm/i915/gt/intel_workarounds.c 5.13 5.32 ./drivers/gpu/drm/i915/gt/shmem_utils.c 4.62 4.54 ./drivers/gpu/drm/i915/gt/sysfs_engines.c 4.55 4.39 ./drivers/gpu/drm/i915/gt/uc/intel_gsc_fw.c 4.64 4.51 ./drivers/gpu/drm/i915/gt/uc/intel_gsc_proxy.c 4.57 4.57 ./drivers/gpu/drm/i915/gt/uc/intel_gsc_uc.c 4.37 4.24 ./drivers/gpu/drm/i915/gt/uc/intel_gsc_uc_debugfs.c 4.17 4.47 ./drivers/gpu/drm/i915/gt/uc/intel_gsc_uc_heci_cmd_submit.c 4.93 4.97 ./drivers/gpu/drm/i915/gt/uc/intel_guc.c 4.67 4.58 ./drivers/gpu/drm/i915/gt/uc/intel_guc_ads.c 5.24 5.12 ./drivers/gpu/drm/i915/gt/uc/intel_guc_capture.c 5.35 5.35 ./drivers/gpu/drm/i915/gt/uc/intel_guc_ct.c 4.36 4.65 ./drivers/gpu/drm/i915/gt/uc/intel_guc_debugfs.c 4.8 4.12 ./drivers/gpu/drm/i915/gt/uc/intel_guc_fw.c 4.36 4.43 ./drivers/gpu/drm/i915/gt/uc/intel_guc_hwconfig.c 4.31 4.40 ./drivers/gpu/drm/i915/gt/uc/intel_guc_log.c 4.99 4.54 ./drivers/gpu/drm/i915/gt/uc/intel_guc_log_debugfs.c 4.33 4.21 ./drivers/gpu/drm/i915/gt/uc/intel_guc_rc.c 4.37 4.45 ./drivers/gpu/drm/i915/gt/uc/intel_guc_slpc.c 4.59 4.33 ./drivers/gpu/drm/i915/gt/uc/intel_guc_submission.c 5.22 5.40 ./drivers/gpu/drm/i915/gt/uc/intel_huc.c 4.31 4.47 ./drivers/gpu/drm/i915/gt/uc/intel_huc_debugfs.c 4.12 4.13 ./drivers/gpu/drm/i915/gt/uc/intel_huc_fw.c 4.63 4.41 ./drivers/gpu/drm/i915/gt/uc/intel_uc.c 4.77 4.30 ./drivers/gpu/drm/i915/gt/uc/intel_uc_debugfs.c 4.17 4.37 ./drivers/gpu/drm/i915/gt/uc/intel_uc_fw.c 4.52 4.47 ./drivers/gpu/drm/i915/i915_active.c 4.79 4.89 ./drivers/gpu/drm/i915/i915_cmd_parser.c 4.7 4.76 ./drivers/gpu/drm/i915/i915_config.c 0.98 1.15 ./drivers/gpu/drm/i915/i915_debugfs.c 5.16 4.92 ./drivers/gpu/drm/i915/i915_debugfs_params.c 4.53 4.50 ./drivers/gpu/drm/i915/i915_deps.c 2.96 3.25 ./drivers/gpu/drm/i915/i915_driver.c 5.61 5.76 ./drivers/gpu/drm/i915/i915_drm_client.c 5.53 5.90 ./drivers/gpu/drm/i915/i915_gem.c 5.16 5.29 ./drivers/gpu/drm/i915/i915_gem_evict.c 4.98 4.92 ./drivers/gpu/drm/i915/i915_gem_gtt.c 4.96 4.81 ./drivers/gpu/drm/i915/i915_gem_ww.c 4.2 4.83 ./drivers/gpu/drm/i915/i915_getparam.c 4.37 4.46 ./drivers/gpu/drm/i915/i915_gpu_error.c 5.79 5.99 ./drivers/gpu/drm/i915/i915_hwmon.c 4.68 4.67 ./drivers/gpu/drm/i915/i915_ioc32.c 4.32 4.19 ./drivers/gpu/drm/i915/i915_ioctl.c 4.61 4.41 ./drivers/gpu/drm/i915/i915_irq.c 5.23 5.33 ./drivers/gpu/drm/i915/i915_memcpy.c 0.36 0.28 ./drivers/gpu/drm/i915/i915_mitigations.c 4.36 4.46 ./drivers/gpu/drm/i915/i915_mm.c 4.47 4.57 ./drivers/gpu/drm/i915/i915_module.c 5.31 4.73 ./drivers/gpu/drm/i915/i915_params.c 4.38 4.39 ./drivers/gpu/drm/i915/i915_pci.c 4.63 4.73 ./drivers/gpu/drm/i915/i915_perf.c 5.4 5.19 ./drivers/gpu/drm/i915/i915_pmu.c 4.56 4.34 ./drivers/gpu/drm/i915/i915_query.c 4.32 4.46 ./drivers/gpu/drm/i915/i915_request.c 4.88 5.13 ./drivers/gpu/drm/i915/i915_scatterlist.c 3.27 3.43 ./drivers/gpu/drm/i915/i915_scheduler.c 4.58 4.53 ./drivers/gpu/drm/i915/i915_suspend.c 5.3 4.77 ./drivers/gpu/drm/i915/i915_sw_fence.c 2.17 1.99 ./drivers/gpu/drm/i915/i915_sw_fence_work.c 1.47 1.51 ./drivers/gpu/drm/i915/i915_switcheroo.c 4.83 5.57 ./drivers/gpu/drm/i915/i915_syncmap.c 1.76 1.62 ./drivers/gpu/drm/i915/i915_sysfs.c 4.26 4.55 ./drivers/gpu/drm/i915/i915_trace_points.c 5.41 5.23 ./drivers/gpu/drm/i915/i915_ttm_buddy_manager.c 3.59 3.21 ./drivers/gpu/drm/i915/i915_user_extensions.c 1.69 1.71 ./drivers/gpu/drm/i915/i915_utils.c 4.43 4.39 ./drivers/gpu/drm/i915/i915_vgpu.c 4.46 4.49 ./drivers/gpu/drm/i915/i915_vma.c 5.57 5.51 ./drivers/gpu/drm/i915/i915_vma_resource.c 4.45 4.49 ./drivers/gpu/drm/i915/intel_clock_gating.c 4.37 4.39 ./drivers/gpu/drm/i915/intel_device_info.c 4.58 4.58 ./drivers/gpu/drm/i915/intel_memory_region.c 4.31 4.26 ./drivers/gpu/drm/i915/intel_pcode.c 4.42 4.42 ./drivers/gpu/drm/i915/intel_region_ttm.c 4.43 4.26 ./drivers/gpu/drm/i915/intel_runtime_pm.c 4.93 4.95 ./drivers/gpu/drm/i915/intel_sbi.c 4.36 4.34 ./drivers/gpu/drm/i915/intel_step.c 4.43 4.36 ./drivers/gpu/drm/i915/intel_uncore.c 5.28 5.38 ./drivers/gpu/drm/i915/intel_wakeref.c 4.35 4.55 ./drivers/gpu/drm/i915/pxp/intel_pxp.c 4.91 4.74 ./drivers/gpu/drm/i915/pxp/intel_pxp_huc.c 4.45 4.36 ./drivers/gpu/drm/i915/pxp/intel_pxp_tee.c 4.62 4.51 ./drivers/gpu/drm/i915/soc/intel_dram.c 4.6 4.53 ./drivers/gpu/drm/i915/soc/intel_gmch.c 4.47 4.35 ./drivers/gpu/drm/i915/soc/intel_pch.c 4.38 4.77 ./drivers/gpu/drm/i915/vlv_sideband.c 4.43 4.36 ./drivers/gpu/drm/i915/vlv_suspend.c 4.88 4.70 ./drivers/gpu/drm/ttm/ttm_agp_backend.c 3.2 3.32 ./drivers/gpu/drm/ttm/ttm_bo.c 3.25 3.32 ./drivers/gpu/drm/ttm/ttm_bo_util.c 3.15 3.22 ./drivers/gpu/drm/ttm/ttm_bo_vm.c 3.35 3.54 ./drivers/gpu/drm/ttm/ttm_device.c 3.66 3.10 ./drivers/gpu/drm/ttm/ttm_execbuf_util.c 3.49 3.11 ./drivers/gpu/drm/ttm/ttm_module.c 2.86 2.56 ./drivers/gpu/drm/ttm/ttm_pool.c 3.37 3.33 ./drivers/gpu/drm/ttm/ttm_range_manager.c 2.96 3.55 ./drivers/gpu/drm/ttm/ttm_resource.c 3.1 3.15 ./drivers/gpu/drm/ttm/ttm_sys_manager.c 2.53 2.65 ./drivers/gpu/drm/ttm/ttm_tt.c 3.74 3.69 ./drivers/gpu/drm/virtio/virtgpu_debugfs.c 3.39 3.22 ./drivers/gpu/drm/virtio/virtgpu_display.c 3.51 3.40 ./drivers/gpu/drm/virtio/virtgpu_drv.c 3.41 3.59 ./drivers/gpu/drm/virtio/virtgpu_fence.c 3.51 3.58 ./drivers/gpu/drm/virtio/virtgpu_gem.c 3.34 3.19 ./drivers/gpu/drm/virtio/virtgpu_ioctl.c 3.47 3.30 ./drivers/gpu/drm/virtio/virtgpu_kms.c 3.36 3.37 ./drivers/gpu/drm/virtio/virtgpu_object.c 3.37 3.60 ./drivers/gpu/drm/virtio/virtgpu_plane.c 3.42 3.16 ./drivers/gpu/drm/virtio/virtgpu_prime.c 3.27 3.30 ./drivers/gpu/drm/virtio/virtgpu_submit.c 3.39 3.28 ./drivers/gpu/drm/virtio/virtgpu_trace_points.c 3.93 3.92 ./drivers/gpu/drm/virtio/virtgpu_vq.c 3.37 3.43 ./drivers/gpu/drm/virtio/virtgpu_vram.c 3.29 3.42 ./drivers/hid/hid-a4tech.c 3.35 3.30 ./drivers/hid/hid-apple.c 3.35 3.45 ./drivers/hid/hid-belkin.c 3.31 3.29 ./drivers/hid/hid-cherry.c 3.41 3.29 ./drivers/hid/hid-chicony.c 3.44 3.35 ./drivers/hid/hid-core.c 3.83 3.66 ./drivers/hid/hid-cypress.c 3.5 3.32 ./drivers/hid/hid-debug.c 3.61 3.86 ./drivers/hid/hid-ezkey.c 3.33 3.23 ./drivers/hid/hid-generic.c 3.42 3.33 ./drivers/hid/hid-gyration.c 3.22 3.40 ./drivers/hid/hid-input.c 3.76 3.57 ./drivers/hid/hid-ite.c 3.4 3.44 ./drivers/hid/hid-kensington.c 3.36 3.29 ./drivers/hid/hid-lg-g15.c 3.55 3.32 ./drivers/hid/hid-lg.c 3.36 3.51 ./drivers/hid/hid-lg4ff.c 3.62 3.47 ./drivers/hid/hid-lgff.c 3.48 3.21 ./drivers/hid/hid-microsoft.c 3.32 3.28 ./drivers/hid/hid-monterey.c 3.19 3.51 ./drivers/hid/hid-ntrig.c 3.42 3.43 ./drivers/hid/hid-petalynx.c 3.63 3.43 ./drivers/hid/hid-pl.c 3.19 3.85 ./drivers/hid/hid-quirks.c 3.43 3.57 ./drivers/hid/hid-redragon.c 3.38 3.50 ./drivers/hid/hid-samsung.c 3.25 3.25 ./drivers/hid/hid-sony.c 3.72 3.39 ./drivers/hid/hid-sunplus.c 3.63 3.50 ./drivers/hid/hid-topseed.c 3.34 3.35 ./drivers/hid/hidraw.c 3.22 3.38 ./drivers/hid/usbhid/hid-core.c 3.62 3.57 ./drivers/hid/usbhid/hid-pidff.c 3.34 3.41 ./drivers/hid/usbhid/hiddev.c 3.65 3.40 ./drivers/hwmon/hwmon.c 4.22 4.22 ./drivers/i2c/algos/i2c-algo-bit.c 3.33 3.48 ./drivers/i2c/busses/i2c-i801.c 3.88 3.91 ./drivers/i2c/i2c-boardinfo.c 3.63 3.77 ./drivers/i2c/i2c-core-acpi.c 3.64 3.70 ./drivers/i2c/i2c-core-base.c 4.32 4.55 ./drivers/i2c/i2c-core-smbus.c 3.99 4.15 ./drivers/i2c/i2c-smbus.c 3.65 3.71 ./drivers/input/evdev.c 2.95 2.99 ./drivers/input/ff-core.c 2.68 2.83 ./drivers/input/ff-memless.c 2.83 2.63 ./drivers/input/input-compat.c 2.81 2.63 ./drivers/input/input-leds.c 2.69 2.78 ./drivers/input/input-mt.c 2.54 2.74 ./drivers/input/input-poller.c 2.66 2.67 ./drivers/input/input.c 3.94 3.84 ./drivers/input/keyboard/atkbd.c 2.98 2.73 ./drivers/input/mouse/alps.c 2.79 3.57 ./drivers/input/mouse/byd.c 2.71 2.78 ./drivers/input/mouse/cypress_ps2.c 2.79 2.62 ./drivers/input/mouse/focaltech.c 2.71 2.77 ./drivers/input/mouse/lifebook.c 2.86 2.88 ./drivers/input/mouse/logips2pp.c 2.8 2.77 ./drivers/input/mouse/psmouse-base.c 2.74 2.68 ./drivers/input/mouse/psmouse-smbus.c 3.5 3.59 ./drivers/input/mouse/synaptics.c 3.95 3.66 ./drivers/input/mouse/trackpoint.c 2.79 2.80 ./drivers/input/serio/i8042.c 3.83 3.70 ./drivers/input/serio/libps2.c 2.92 2.70 ./drivers/input/serio/serio.c 2.69 2.72 ./drivers/input/serio/serport.c 3.13 3.21 ./drivers/input/sparse-keymap.c 2.61 2.60 ./drivers/input/touchscreen.c 2.64 2.79 ./drivers/input/vivaldi-fmap.c 2.57 2.52 ./drivers/iommu/amd/init.c 3.76 4.61 ./drivers/iommu/amd/io_pgtable.c 2.94 3.27 ./drivers/iommu/amd/io_pgtable_v2.c 3.41 3.30 ./drivers/iommu/amd/iommu.c 3.89 3.67 ./drivers/iommu/amd/pasid.c 3.14 3.90 ./drivers/iommu/amd/ppr.c 3.33 3.23 ./drivers/iommu/amd/quirks.c 3.39 3.21 ./drivers/iommu/dma-iommu.c 3.96 3.97 ./drivers/iommu/intel/cache.c 4.15 4.53 ./drivers/iommu/intel/cap_audit.c 3.88 4.70 ./drivers/iommu/intel/dmar.c 4.61 4.44 ./drivers/iommu/intel/iommu.c 4.88 4.81 ./drivers/iommu/intel/nested.c 4.13 4.36 ./drivers/iommu/intel/pasid.c 4.33 4.15 ./drivers/iommu/intel/perfmon.c 4.29 3.91 ./drivers/iommu/intel/trace.c 4.21 4.41 ./drivers/iommu/io-pgfault.c 3.2 3.79 ./drivers/iommu/io-pgtable.c 3.14 3.10 ./drivers/iommu/iommu-sva.c 3.29 3.53 ./drivers/iommu/iommu-sysfs.c 3.25 3.31 ./drivers/iommu/iommu-traces.c 3.68 3.86 ./drivers/iommu/iommu.c 4.68 3.61 ./drivers/iommu/iova.c 2.97 3.45 ./drivers/leds/led-class.c 2.81 2.48 ./drivers/leds/led-core.c 2.66 2.65 ./drivers/leds/led-triggers.c 3.57 2.92 ./drivers/macintosh/mac_hid.c 2.72 2.91 ./drivers/mailbox/mailbox.c 2.66 2.77 ./drivers/mailbox/pcc.c 2.96 3.77 ./drivers/md/dm-builtin.c 3.72 4.15 ./drivers/md/dm-io-rewind.c 3.72 3.53 ./drivers/md/dm-io.c 3.88 3.88 ./drivers/md/dm-ioctl.c 4.35 4.37 ./drivers/md/dm-kcopyd.c 3.79 3.89 ./drivers/md/dm-linear.c 3.97 3.12 ./drivers/md/dm-log.c 3.17 3.21 ./drivers/md/dm-raid1.c 3.19 3.41 ./drivers/md/dm-region-hash.c 3.75 3.13 ./drivers/md/dm-rq.c 3.95 3.83 ./drivers/md/dm-stats.c 3.96 4.18 ./drivers/md/dm-stripe.c 2.81 2.95 ./drivers/md/dm-sysfs.c 3.94 4.10 ./drivers/md/dm-table.c 4.11 4.11 ./drivers/md/dm-target.c 3.8 3.81 ./drivers/md/dm-zero.c 3.11 3.43 ./drivers/md/dm.c 4.22 4.15 ./drivers/md/md-autodetect.c 3.77 3.77 ./drivers/md/md-bitmap.c 3.98 3.82 ./drivers/md/md.c 4.9 5.18 ./drivers/misc/mei/bus-fixup.c 3.43 2.96 ./drivers/misc/mei/bus.c 3.17 3.17 ./drivers/misc/mei/client.c 3.22 3.62 ./drivers/misc/mei/debugfs.c 2.58 2.91 ./drivers/misc/mei/dma-ring.c 3.16 2.90 ./drivers/misc/mei/hbm.c 2.84 2.74 ./drivers/misc/mei/hw-me.c 3.2 3.42 ./drivers/misc/mei/init.c 2.79 2.59 ./drivers/misc/mei/interrupt.c 2.61 2.82 ./drivers/misc/mei/main.c 2.68 2.75 ./drivers/misc/mei/mei-trace.c 3.77 3.61 ./drivers/misc/mei/pci-me.c 3.18 3.12 ./drivers/net/ethernet/broadcom/tg3.c 6.3 6.16 ./drivers/net/ethernet/intel/e100.c 4.27 4.32 ./drivers/net/ethernet/intel/e1000/e1000_ethtool.c 5.56 5.74 ./drivers/net/ethernet/intel/e1000/e1000_hw.c 5.1 5.45 ./drivers/net/ethernet/intel/e1000/e1000_main.c 6.2 5.50 ./drivers/net/ethernet/intel/e1000/e1000_param.c 5.21 5.97 ./drivers/net/ethernet/intel/e1000e/80003es2lan.c 4.7 4.76 ./drivers/net/ethernet/intel/e1000e/82571.c 4.77 4.67 ./drivers/net/ethernet/intel/e1000e/ethtool.c 4.71 4.71 ./drivers/net/ethernet/intel/e1000e/ich8lan.c 5.17 4.57 ./drivers/net/ethernet/intel/e1000e/mac.c 4.84 5.11 ./drivers/net/ethernet/intel/e1000e/manage.c 4.57 4.83 ./drivers/net/ethernet/intel/e1000e/netdev.c 5.86 5.48 ./drivers/net/ethernet/intel/e1000e/nvm.c 4.69 4.71 ./drivers/net/ethernet/intel/e1000e/param.c 4.74 4.97 ./drivers/net/ethernet/intel/e1000e/phy.c 4.94 4.75 ./drivers/net/ethernet/intel/e1000e/ptp.c 4.9 4.69 ./drivers/net/ethernet/marvell/sky2.c 5.48 5.63 ./drivers/net/ethernet/nvidia/forcedeth.c 4.6 4.70 ./drivers/net/ethernet/realtek/8139too.c 4.28 4.36 ./drivers/net/ethernet/realtek/r8169_firmware.c 2.42 2.66 ./drivers/net/ethernet/realtek/r8169_main.c 5.53 5.37 ./drivers/net/ethernet/realtek/r8169_phy_config.c 4.35 4.13 ./drivers/net/loopback.c 4.59 4.52 ./drivers/net/mdio/acpi_mdio.c 4.26 4.27 ./drivers/net/mdio/fwnode_mdio.c 4.23 4.19 ./drivers/net/mii.c 4.29 3.99 ./drivers/net/net_failover.c 4.24 4.38 ./drivers/net/netconsole.c 4.15 3.85 ./drivers/net/phy/fixed_phy.c 4.17 4.20 ./drivers/net/phy/linkmode.c 3.56 3.65 ./drivers/net/phy/mdio-boardinfo.c 3.85 4.45 ./drivers/net/phy/mdio_bus.c 4.58 4.48 ./drivers/net/phy/mdio_device.c 4.95 3.80 ./drivers/net/phy/mdio_devres.c 3.9 3.99 ./drivers/net/phy/phy-c45.c 3.9 3.98 ./drivers/net/phy/phy-core.c 3.76 3.84 ./drivers/net/phy/phy.c 4.66 4.63 ./drivers/net/phy/phy_device.c 4.34 4.58 ./drivers/net/phy/realtek.c 4.3 4.24 ./drivers/net/phy/stubs.c 3.87 4.18 ./drivers/net/phy/swphy.c 3.74 3.64 ./drivers/net/virtio_net.c 6.18 6.89 ./drivers/nvmem/core.c 2.9 2.85 ./drivers/pci/access.c 3.65 3.13 ./drivers/pci/ats.c 2.99 3.16 ./drivers/pci/bus.c 3.18 3.15 ./drivers/pci/devres.c 3.75 2.99 ./drivers/pci/host-bridge.c 3.41 3.32 ./drivers/pci/hotplug/acpi_pcihp.c 3.29 3.43 ./drivers/pci/hotplug/pci_hotplug_core.c 3.42 3.28 ./drivers/pci/iomap.c 2.98 3.27 ./drivers/pci/irq.c 3.49 3.19 ./drivers/pci/mmap.c 3.39 3.25 ./drivers/pci/msi/api.c 3.15 3.16 ./drivers/pci/msi/irqdomain.c 3.41 3.35 ./drivers/pci/msi/msi.c 3.26 3.37 ./drivers/pci/msi/pcidev_msi.c 3.2 3.19 ./drivers/pci/pci-acpi.c 3.56 3.51 ./drivers/pci/pci-driver.c 4.43 3.93 ./drivers/pci/pci-label.c 3.39 3.54 ./drivers/pci/pci-sysfs.c 3.69 3.86 ./drivers/pci/pci.c 3.84 3.76 ./drivers/pci/pcie/aspm.c 3.23 3.59 ./drivers/pci/pcie/pme.c 3.15 3.15 ./drivers/pci/pcie/portdrv.c 3.24 3.20 ./drivers/pci/pcie/rcec.c 3.17 3.28 ./drivers/pci/probe.c 3.62 3.52 ./drivers/pci/proc.c 3.48 3.50 ./drivers/pci/quirks.c 3.8 4.97 ./drivers/pci/remove.c 2.86 3.35 ./drivers/pci/rom.c 3.26 3.10 ./drivers/pci/search.c 3.2 3.81 ./drivers/pci/setup-bus.c 3.52 3.48 ./drivers/pci/setup-res.c 3.73 3.14 ./drivers/pci/slot.c 3.3 3.31 ./drivers/pci/vc.c 2.9 2.93 ./drivers/pci/vgaarb.c 3.39 3.36 ./drivers/pci/vpd.c 3.76 3.18 ./drivers/pcmcia/cardbus.c 3.27 2.93 ./drivers/pcmcia/cistpl.c 3.93 3.65 ./drivers/pcmcia/cs.c 3.2 3.29 ./drivers/pcmcia/ds.c 3.14 3.18 ./drivers/pcmcia/pcmcia_cis.c 4.13 4.12 ./drivers/pcmcia/pcmcia_resource.c 3.78 4.20 ./drivers/pcmcia/rsrc_mgr.c 3.22 3.15 ./drivers/pcmcia/rsrc_nonstatic.c 3.11 2.97 ./drivers/pcmcia/socket_sysfs.c 3.66 3.73 ./drivers/pcmcia/yenta_socket.c 3.33 3.21 ./drivers/platform/x86/eeepc-laptop.c 3.8 3.81 ./drivers/platform/x86/p2sb.c 3.23 3.74 ./drivers/platform/x86/wmi-bmof.c 2.96 2.94 ./drivers/platform/x86/wmi.c 3.11 2.96 ./drivers/pnp/card.c 3.59 3.25 ./drivers/pnp/core.c 3.13 3.11 ./drivers/pnp/driver.c 2.72 2.70 ./drivers/pnp/interface.c 2.86 2.73 ./drivers/pnp/manager.c 2.7 2.91 ./drivers/pnp/pnpacpi/core.c 2.94 2.94 ./drivers/pnp/pnpacpi/rsparser.c 3.52 3.25 ./drivers/pnp/quirks.c 3.21 3.10 ./drivers/pnp/resource.c 3.6 3.67 ./drivers/pnp/support.c 2.66 2.63 ./drivers/pnp/system.c 2.8 2.65 ./drivers/power/supply/power_supply_core.c 2.77 2.81 ./drivers/power/supply/power_supply_hwmon.c 2.57 2.73 ./drivers/power/supply/power_supply_leds.c 2.69 2.66 ./drivers/power/supply/power_supply_sysfs.c 2.71 2.77 ./drivers/pps/kapi.c 2.63 2.77 ./drivers/pps/pps.c 2.66 2.62 ./drivers/pps/sysfs.c 2.74 2.64 ./drivers/ptp/ptp_chardev.c 3.47 3.41 ./drivers/ptp/ptp_clock.c 3.92 3.97 ./drivers/ptp/ptp_kvm_common.c 3.32 3.27 ./drivers/ptp/ptp_kvm_x86.c 3.29 3.46 ./drivers/ptp/ptp_sysfs.c 3.29 3.34 ./drivers/ptp/ptp_vclock.c 3.19 3.26 ./drivers/rtc/class.c 2.86 2.84 ./drivers/rtc/dev.c 2.84 2.67 ./drivers/rtc/interface.c 3.92 4.25 ./drivers/rtc/lib.c 2.92 2.80 ./drivers/rtc/nvmem.c 2.8 2.68 ./drivers/rtc/proc.c 2.85 2.76 ./drivers/rtc/rtc-cmos.c 3.28 3.18 ./drivers/rtc/rtc-mc146818-lib.c 3.18 3.14 ./drivers/rtc/sysfs.c 2.84 2.98 ./drivers/scsi/constants.c 3.26 3.34 ./drivers/scsi/hosts.c 3.29 3.28 ./drivers/scsi/scsi.c 4.11 3.95 ./drivers/scsi/scsi_bsg.c 3.32 3.27 ./drivers/scsi/scsi_common.c 2.67 2.63 ./drivers/scsi/scsi_debugfs.c 3.3 3.12 ./drivers/scsi/scsi_devinfo.c 3.4 3.35 ./drivers/scsi/scsi_error.c 3.41 3.73 ./drivers/scsi/scsi_ioctl.c 3.3 3.14 ./drivers/scsi/scsi_lib.c 3.66 3.66 ./drivers/scsi/scsi_lib_dma.c 3.33 3.30 ./drivers/scsi/scsi_logging.c 3.38 3.20 ./drivers/scsi/scsi_pm.c 3.3 3.25 ./drivers/scsi/scsi_proc.c 3.22 3.18 ./drivers/scsi/scsi_scan.c 3.38 3.26 ./drivers/scsi/scsi_sysctl.c 3.18 3.21 ./drivers/scsi/scsi_sysfs.c 3.37 3.57 ./drivers/scsi/scsi_trace.c 3.43 3.40 ./drivers/scsi/scsi_transport_spi.c 3.45 3.59 ./drivers/scsi/scsicam.c 3.25 3.27 ./drivers/scsi/sd.c 3.64 3.59 ./drivers/scsi/sg.c 3.49 3.48 ./drivers/scsi/sr.c 3.44 3.36 ./drivers/scsi/sr_ioctl.c 3.15 3.24 ./drivers/scsi/sr_vendor.c 3.27 3.23 ./drivers/scsi/virtio_scsi.c 3.15 3.38 ./drivers/thermal/gov_step_wise.c 2.93 2.84 ./drivers/thermal/gov_user_space.c 2.68 2.80 ./drivers/thermal/intel/intel_tcc.c 0.86 0.85 ./drivers/thermal/intel/therm_throt.c 4.11 3.93 ./drivers/thermal/intel/x86_pkg_temp_thermal.c 2.98 2.80 ./drivers/thermal/intel/x86_pkg_temp_thermal.mod.c 2.6 2.62 ./drivers/thermal/thermal_core.c 3.91 3.96 ./drivers/thermal/thermal_helpers.c 2.85 2.89 ./drivers/thermal/thermal_hwmon.c 2.69 2.77 ./drivers/thermal/thermal_sysfs.c 2.71 2.68 ./drivers/thermal/thermal_trip.c 2.67 2.62 ./drivers/tty/hvc/hvc_console.c 3.88 3.20 ./drivers/tty/n_null.c 3.11 2.91 ./drivers/tty/n_tty.c 3.32 3.25 ./drivers/tty/pty.c 3.66 3.45 ./drivers/tty/serial/8250/8250_core.c 3.42 3.65 ./drivers/tty/serial/8250/8250_dma.c 3.2 3.88 ./drivers/tty/serial/8250/8250_dwlib.c 3.31 3.38 ./drivers/tty/serial/8250/8250_early.c 2.92 3.11 ./drivers/tty/serial/8250/8250_exar.c 3.42 3.29 ./drivers/tty/serial/8250/8250_lpss.c 3.45 3.33 ./drivers/tty/serial/8250/8250_mid.c 3.16 3.31 ./drivers/tty/serial/8250/8250_pci.c 3.43 3.44 ./drivers/tty/serial/8250/8250_pcilib.c 3.25 2.98 ./drivers/tty/serial/8250/8250_pericom.c 3.17 3.42 ./drivers/tty/serial/8250/8250_platform.c 3.19 3.32 ./drivers/tty/serial/8250/8250_pnp.c 3.33 3.20 ./drivers/tty/serial/8250/8250_port.c 3.25 3.31 ./drivers/tty/serial/8250/8250_rsa.c 3.24 3.10 ./drivers/tty/serial/earlycon.c 3.41 3.35 ./drivers/tty/serial/serial_base_bus.c 2.97 3.31 ./drivers/tty/serial/serial_core.c 3.65 3.77 ./drivers/tty/serial/serial_ctrl.c 3.16 3.93 ./drivers/tty/serial/serial_port.c 3.11 3.91 ./drivers/tty/sysrq.c 3.98 3.95 ./drivers/tty/tty_audit.c 3.74 3.21 ./drivers/tty/tty_baudrate.c 3.91 2.89 ./drivers/tty/tty_buffer.c 2.85 2.96 ./drivers/tty/tty_io.c 3.38 3.32 ./drivers/tty/tty_ioctl.c 3.42 3.14 ./drivers/tty/tty_jobctrl.c 2.8 3.20 ./drivers/tty/tty_ldisc.c 3.25 3.64 ./drivers/tty/tty_ldsem.c 3.63 2.92 ./drivers/tty/tty_mutex.c 3.7 2.77 ./drivers/tty/tty_port.c 2.97 3.74 ./drivers/tty/vt/consolemap.c 3.23 3.29 ./drivers/tty/vt/consolemap_deftbl.c 0.1 0.69 ./drivers/tty/vt/defkeymap.c 0.6 0.85 ./drivers/tty/vt/keyboard.c 3.97 3.16 ./drivers/tty/vt/selection.c 2.94 3.19 ./drivers/tty/vt/vc_screen.c 3.36 3.27 ./drivers/tty/vt/vt.c 3.26 3.46 ./drivers/tty/vt/vt_ioctl.c 3.38 3.48 ./drivers/usb/class/usblp.c 2.99 2.89 ./drivers/usb/common/common.c 3.12 3.26 ./drivers/usb/common/debug.c 0.16 0.16 ./drivers/usb/core/buffer.c 3.91 2.92 ./drivers/usb/core/config.c 3.17 3.15 ./drivers/usb/core/devices.c 3.37 3.33 ./drivers/usb/core/devio.c 3.97 3.82 ./drivers/usb/core/driver.c 3.3 3.29 ./drivers/usb/core/endpoint.c 2.85 3.22 ./drivers/usb/core/file.c 2.85 2.97 ./drivers/usb/core/generic.c 3.12 3.17 ./drivers/usb/core/hcd-pci.c 3.56 3.17 ./drivers/usb/core/hcd.c 3.69 3.91 ./drivers/usb/core/hub.c 4.21 4.14 ./drivers/usb/core/message.c 3.52 3.84 ./drivers/usb/core/notify.c 2.87 2.92 ./drivers/usb/core/phy.c 3.25 3.35 ./drivers/usb/core/port.c 3.67 3.69 ./drivers/usb/core/quirks.c 3.99 3.25 ./drivers/usb/core/sysfs.c 3.24 3.24 ./drivers/usb/core/urb.c 3.48 2.96 ./drivers/usb/core/usb-acpi.c 3.3 3.43 ./drivers/usb/core/usb.c 4.51 3.67 ./drivers/usb/early/ehci-dbgp.c 3.25 3.16 ./drivers/usb/host/ehci-hcd.c 3.74 4.82 ./drivers/usb/host/ehci-pci.c 3.34 3.27 ./drivers/usb/host/ohci-hcd.c 3.88 3.54 ./drivers/usb/host/ohci-pci.c 2.93 3.77 ./drivers/usb/host/pci-quirks.c 3.67 3.47 ./drivers/usb/host/uhci-hcd.c 3.14 3.47 ./drivers/usb/host/xhci-dbg.c 2.78 2.76 ./drivers/usb/host/xhci-debugfs.c 2.91 2.93 ./drivers/usb/host/xhci-ext-caps.c 3.23 3.20 ./drivers/usb/host/xhci-hub.c 4.35 4.38 ./drivers/usb/host/xhci-mem.c 4.61 4.64 ./drivers/usb/host/xhci-pci.c 4.88 5.99 ./drivers/usb/host/xhci-ring.c 4.58 4.57 ./drivers/usb/host/xhci-trace.c 5.12 5.33 ./drivers/usb/host/xhci.c 4.63 4.75 ./drivers/usb/mon/mon_bin.c 3.25 3.28 ./drivers/usb/mon/mon_main.c 2.85 2.74 ./drivers/usb/mon/mon_stat.c 2.75 2.68 ./drivers/usb/mon/mon_text.c 2.88 3.99 ./drivers/usb/storage/initializers.c 3.16 3.10 ./drivers/usb/storage/option_ms.c 3.32 3.57 ./drivers/usb/storage/protocol.c 3.22 3.41 ./drivers/usb/storage/scsiglue.c 3.38 3.38 ./drivers/usb/storage/sierra_ms.c 3.43 3.26 ./drivers/usb/storage/transport.c 3.38 3.49 ./drivers/usb/storage/usb.c 3.43 3.37 ./drivers/usb/storage/usual-tables.c 2.76 2.67 ./drivers/video/aperture.c 3.73 3.80 ./drivers/video/backlight/backlight.c 3.54 3.91 ./drivers/video/cmdline.c 3.74 3.57 ./drivers/video/console/dummycon.c 3.3 2.94 ./drivers/video/console/vgacon.c 2.9 3.33 ./drivers/video/hdmi.c 2.72 2.72 ./drivers/video/nomodeset.c 2.68 2.57 ./drivers/virtio/virtio.c 3.25 2.83 ./drivers/virtio/virtio_anchor.c 2.94 2.91 ./drivers/virtio/virtio_dma_buf.c 3.93 2.75 ./drivers/virtio/virtio_input.c 2.96 3.26 ./drivers/virtio/virtio_pci_admin_legacy_io.c 3.36 3.35 ./drivers/virtio/virtio_pci_common.c 3.17 3.25 ./drivers/virtio/virtio_pci_legacy.c 3.72 3.24 ./drivers/virtio/virtio_pci_legacy_dev.c 2.92 2.98 ./drivers/virtio/virtio_pci_modern.c 3.18 3.19 ./drivers/virtio/virtio_pci_modern_dev.c 2.94 3.22 ./drivers/virtio/virtio_ring.c 3.17 3.24 ./fs/9p/fid.c 3.24 2.98 ./fs/9p/v9fs.c 3.21 3.13 ./fs/9p/vfs_addr.c 3.57 3.32 ./fs/9p/vfs_dentry.c 3.1 3.89 ./fs/9p/vfs_dir.c 3.2 3.27 ./fs/9p/vfs_file.c 3.15 3.27 ./fs/9p/vfs_inode.c 3.11 2.94 ./fs/9p/vfs_inode_dotl.c 3.22 2.85 ./fs/9p/vfs_super.c 3.28 3.34 ./fs/9p/xattr.c 3.22 3.39 ./fs/aio.c 4.16 4.15 ./fs/anon_inodes.c 3.31 3.41 ./fs/attr.c 3.51 3.52 ./fs/autofs/dev-ioctl.c 3.32 3.18 ./fs/autofs/expire.c 3.43 3.28 ./fs/autofs/init.c 3.36 3.31 ./fs/autofs/inode.c 3.49 3.35 ./fs/autofs/root.c 3.39 3.52 ./fs/autofs/symlink.c 3.35 3.30 ./fs/autofs/waitq.c 3.45 3.28 ./fs/bad_inode.c 2.38 2.42 ./fs/binfmt_elf.c 3.74 3.78 ./fs/binfmt_misc.c 3.82 3.44 ./fs/binfmt_script.c 2.66 2.53 ./fs/buffer.c 4.96 5.18 ./fs/char_dev.c 3.92 2.84 ./fs/compat_binfmt_elf.c 3.71 4.11 ./fs/coredump.c 4.94 5.49 ./fs/d_path.c 3.58 3.62 ./fs/dcache.c 3.75 3.84 ./fs/debugfs/file.c 3.58 3.63 ./fs/debugfs/inode.c 3.74 3.42 ./fs/devpts/inode.c 3.23 3.25 ./fs/direct-io.c 3.15 3.33 ./fs/drop_caches.c 3.19 3.26 ./fs/efivarfs/efivarfs.mod.c 2.5 2.52 ./fs/efivarfs/file.c 2.84 2.72 ./fs/efivarfs/inode.c 2.86 2.70 ./fs/efivarfs/super.c 3.52 3.34 ./fs/efivarfs/vars.c 2.97 3.19 ./fs/eventfd.c 3.59 3.40 ./fs/eventpoll.c 5.58 5.70 ./fs/exec.c 5.17 5.94 ./fs/exportfs/expfs.c 2.47 2.68 ./fs/ext4/acl.c 3.43 3.50 ./fs/ext4/balloc.c 5.79 5.84 ./fs/ext4/bitmap.c 3.45 3.58 ./fs/ext4/block_validity.c 3.54 3.76 ./fs/ext4/dir.c 3.49 3.36 ./fs/ext4/ext4_jbd2.c 5.91 6.44 ./fs/ext4/extents.c 6.42 6.17 ./fs/ext4/extents_status.c 5.65 5.94 ./fs/ext4/fast_commit.c 6.61 6.61 ./fs/ext4/file.c 3.21 3.36 ./fs/ext4/fsmap.c 6.13 5.85 ./fs/ext4/fsync.c 5.76 5.52 ./fs/ext4/hash.c 3.73 3.84 ./fs/ext4/ialloc.c 5.9 5.98 ./fs/ext4/indirect.c 5.41 5.71 ./fs/ext4/inline.c 3.63 3.73 ./fs/ext4/inode.c 6.11 6.18 ./fs/ext4/ioctl.c 5.52 6.11 ./fs/ext4/mballoc.c 6.76 6.31 ./fs/ext4/migrate.c 3.56 3.64 ./fs/ext4/mmp.c 3.56 3.53 ./fs/ext4/move_extent.c 3.43 3.16 ./fs/ext4/namei.c 5.98 5.88 ./fs/ext4/orphan.c 3.58 3.51 ./fs/ext4/page-io.c 3.42 3.69 ./fs/ext4/readpage.c 3.3 3.32 ./fs/ext4/resize.c 3.46 3.50 ./fs/ext4/super.c 8.36 8.72 ./fs/ext4/symlink.c 3.39 3.46 ./fs/ext4/sysfs.c 3.28 3.57 ./fs/ext4/xattr.c 3.67 3.83 ./fs/ext4/xattr_hurd.c 3.54 3.41 ./fs/ext4/xattr_security.c 3.93 3.62 ./fs/ext4/xattr_trusted.c 3.32 3.58 ./fs/ext4/xattr_user.c 3.19 3.49 ./fs/fat/cache.c 3.27 3.34 ./fs/fat/dir.c 3.7 3.52 ./fs/fat/fatent.c 3.51 3.45 ./fs/fat/file.c 3.71 3.59 ./fs/fat/inode.c 3.63 3.75 ./fs/fat/misc.c 3.52 3.56 ./fs/fat/namei_msdos.c 3.54 3.32 ./fs/fat/namei_vfat.c 3.41 3.65 ./fs/fat/nfs.c 3.34 3.39 ./fs/fcntl.c 3.65 3.72 ./fs/fhandle.c 3.77 3.75 ./fs/file.c 4.61 4.52 ./fs/file_table.c 3.72 3.66 ./fs/filesystems.c 3.48 3.38 ./fs/fs-writeback.c 4.53 4.77 ./fs/fs_context.c 3.84 3.77 ./fs/fs_parser.c 3.41 3.37 ./fs/fs_pin.c 2.63 2.60 ./fs/fs_struct.c 2.53 2.32 ./fs/fs_types.c 2.41 2.76 ./fs/fsopen.c 3.57 3.66 ./fs/hugetlbfs/inode.c 3.46 3.79 ./fs/init.c 3.57 3.11 ./fs/inode.c 4.67 4.40 ./fs/ioctl.c 3.65 3.94 ./fs/iomap/buffered-io.c 3.99 3.93 ./fs/iomap/direct-io.c 3.69 3.63 ./fs/iomap/fiemap.c 3.29 2.94 ./fs/iomap/iter.c 3.18 3.36 ./fs/iomap/seek.c 3.13 3.15 ./fs/iomap/swapfile.c 3.36 3.25 ./fs/iomap/trace.c 4.1 4.16 ./fs/isofs/compress.c 3.13 3.21 ./fs/isofs/dir.c 3.27 3.12 ./fs/isofs/export.c 3.52 3.96 ./fs/isofs/inode.c 3.62 3.42 ./fs/isofs/joliet.c 2.96 3.18 ./fs/isofs/namei.c 2.96 3.11 ./fs/isofs/rock.c 2.97 3.63 ./fs/isofs/util.c 3.1 3.19 ./fs/jbd2/checkpoint.c 3.65 3.77 ./fs/jbd2/commit.c 3.76 3.88 ./fs/jbd2/journal.c 4.75 4.71 ./fs/jbd2/recovery.c 3.34 3.26 ./fs/jbd2/revoke.c 3.24 3.11 ./fs/jbd2/transaction.c 3.88 3.84 ./fs/kernel_read_file.c 3.23 3.44 ./fs/kernfs/dir.c 3.83 3.25 ./fs/kernfs/file.c 3.73 3.62 ./fs/kernfs/inode.c 3.45 3.85 ./fs/kernfs/mount.c 3.31 3.13 ./fs/kernfs/symlink.c 3.12 3.23 ./fs/libfs.c 3.88 3.50 ./fs/lockd/clnt4xdr.c 5.74 4.88 ./fs/lockd/clntlock.c 5.74 5.12 ./fs/lockd/clntproc.c 4.96 4.96 ./fs/lockd/clntxdr.c 4.7 4.62 ./fs/lockd/host.c 4.61 4.78 ./fs/lockd/mon.c 4.86 5.10 ./fs/lockd/procfs.c 2.94 3.15 ./fs/lockd/svc.c 4.84 5.88 ./fs/lockd/svc4proc.c 4.75 4.58 ./fs/lockd/svclock.c 5.21 4.59 ./fs/lockd/svcproc.c 4.72 4.82 ./fs/lockd/svcshare.c 4.55 4.75 ./fs/lockd/svcsubs.c 4.68 4.76 ./fs/lockd/trace.c 5.15 4.95 ./fs/lockd/xdr.c 4.73 4.85 ./fs/lockd/xdr4.c 4.79 4.68 ./fs/locks.c 4.51 4.49 ./fs/mbcache.c 2.63 2.59 ./fs/mnt_idmapping.c 2.38 2.40 ./fs/mpage.c 3.69 3.41 ./fs/namei.c 4.23 4.35 ./fs/namespace.c 4.22 3.97 ./fs/netfs/buffered_read.c 3.63 3.66 ./fs/netfs/buffered_write.c 3.54 3.93 ./fs/netfs/direct_read.c 3.71 3.66 ./fs/netfs/direct_write.c 3.68 3.69 ./fs/netfs/io.c 3.84 3.55 ./fs/netfs/iterator.c 3.62 3.76 ./fs/netfs/locking.c 3.74 3.79 ./fs/netfs/main.c 4.51 4.71 ./fs/netfs/misc.c 3.94 3.71 ./fs/netfs/objects.c 3.55 3.73 ./fs/netfs/write_collect.c 3.55 3.54 ./fs/netfs/write_issue.c 3.95 3.66 ./fs/nfs/callback.c 4.82 4.74 ./fs/nfs/callback_proc.c 6.92 6.16 ./fs/nfs/callback_xdr.c 6.17 5.99 ./fs/nfs/client.c 5.26 4.97 ./fs/nfs/delegation.c 6.25 6.32 ./fs/nfs/dir.c 6.53 6.94 ./fs/nfs/direct.c 7.98 6.84 ./fs/nfs/dns_resolve.c 4.88 4.73 ./fs/nfs/export.c 6.82 7.81 ./fs/nfs/file.c 6.51 6.74 ./fs/nfs/fs_context.c 6.87 6.94 ./fs/nfs/getroot.c 4.63 5.19 ./fs/nfs/inode.c 6.99 6.71 ./fs/nfs/io.c 4.93 5.46 ./fs/nfs/mount_clnt.c 4.82 4.86 ./fs/nfs/namespace.c 4.93 5.10 ./fs/nfs/nfs3acl.c 5.86 4.92 ./fs/nfs/nfs3client.c 5.13 4.87 ./fs/nfs/nfs3proc.c 4.8 5.35 ./fs/nfs/nfs3super.c 4.81 4.76 ./fs/nfs/nfs3xdr.c 6.72 6.81 ./fs/nfs/nfs4client.c 5.19 5.26 ./fs/nfs/nfs4file.c 6.79 6.78 ./fs/nfs/nfs4getroot.c 4.98 4.87 ./fs/nfs/nfs4idmap.c 5.94 6.21 ./fs/nfs/nfs4namespace.c 5.22 5.35 ./fs/nfs/nfs4proc.c 6.48 6.61 ./fs/nfs/nfs4renewd.c 4.81 4.92 ./fs/nfs/nfs4session.c 4.89 5.62 ./fs/nfs/nfs4state.c 5.98 5.96 ./fs/nfs/nfs4super.c 5.38 5.22 ./fs/nfs/nfs4sysctl.c 4.9 4.92 ./fs/nfs/nfs4trace.c 7.28 7.32 ./fs/nfs/nfs4xdr.c 6.52 6.30 ./fs/nfs/nfsroot.c 4.88 4.88 ./fs/nfs/nfstrace.c 7.8 8.10 ./fs/nfs/pagelist.c 6.81 6.72 ./fs/nfs/read.c 6.82 6.82 ./fs/nfs/super.c 4.87 5.14 ./fs/nfs/symlink.c 4.6 4.94 ./fs/nfs/sysctl.c 4.95 4.65 ./fs/nfs/sysfs.c 4.74 4.62 ./fs/nfs/unlink.c 6.69 6.94 ./fs/nfs/write.c 7.86 7.44 ./fs/nfs_common/grace.c 3.46 3.29 ./fs/nfs_common/nfsacl.c 2.98 3.17 ./fs/nls/nls_ascii.c 2.62 2.46 ./fs/nls/nls_base.c 2.48 2.59 ./fs/nls/nls_cp437.c 2.62 2.55 ./fs/nls/nls_iso8859-1.c 2.58 2.76 ./fs/nls/nls_utf8.c 2.55 2.55 ./fs/notify/dnotify/dnotify.c 3.47 3.35 ./fs/notify/fdinfo.c 3.6 3.93 ./fs/notify/fsnotify.c 2.83 2.94 ./fs/notify/group.c 3.11 3.15 ./fs/notify/inotify/inotify_fsnotify.c 2.45 2.68 ./fs/notify/inotify/inotify_user.c 3.48 3.69 ./fs/notify/mark.c 2.97 3.14 ./fs/notify/notification.c 3.65 2.93 ./fs/nsfs.c 3.4 3.45 ./fs/open.c 4.17 4.10 ./fs/pidfs.c 3.89 3.93 ./fs/pipe.c 3.5 3.68 ./fs/pnode.c 2.5 2.49 ./fs/posix_acl.c 3.73 3.61 ./fs/proc/array.c 4.19 3.76 ./fs/proc/base.c 3.97 4.18 ./fs/proc/cmdline.c 2.72 2.89 ./fs/proc/consoles.c 2.71 2.67 ./fs/proc/cpuinfo.c 2.72 2.87 ./fs/proc/devices.c 3.16 2.97 ./fs/proc/fd.c 3.48 3.51 ./fs/proc/generic.c 2.83 2.96 ./fs/proc/inode.c 2.88 2.87 ./fs/proc/interrupts.c 2.53 2.55 ./fs/proc/kcore.c 3.6 3.59 ./fs/proc/kmsg.c 2.49 2.41 ./fs/proc/loadavg.c 2.77 2.89 ./fs/proc/meminfo.c 3.57 3.47 ./fs/proc/namespaces.c 3.44 3.20 ./fs/proc/page.c 3.36 3.34 ./fs/proc/proc_net.c 3.24 3.52 ./fs/proc/proc_sysctl.c 4.65 4.76 ./fs/proc/proc_tty.c 3.11 2.98 ./fs/proc/root.c 3.28 3.16 ./fs/proc/self.c 2.74 2.77 ./fs/proc/softirqs.c 3.38 2.69 ./fs/proc/stat.c 2.65 2.55 ./fs/proc/task_mmu.c 3.99 3.91 ./fs/proc/thread_self.c 2.83 2.76 ./fs/proc/uptime.c 2.74 2.81 ./fs/proc/util.c 2.67 2.75 ./fs/proc/version.c 2.69 2.82 ./fs/proc/vmcore.c 3.38 3.33 ./fs/proc_namespace.c 3.48 3.34 ./fs/quota/dquot.c 3.76 3.75 ./fs/quota/kqid.c 2.48 2.40 ./fs/quota/netlink.c 3.82 3.86 ./fs/quota/quota.c 3.64 3.61 ./fs/quota/quota_tree.c 2.63 2.63 ./fs/quota/quota_v2.c 2.7 2.80 ./fs/ramfs/file-mmu.c 3.16 3.24 ./fs/ramfs/inode.c 3.44 3.45 ./fs/read_write.c 4.81 3.95 ./fs/readdir.c 3.85 3.78 ./fs/remap_range.c 3.59 3.71 ./fs/select.c 5.62 5.50 ./fs/seq_file.c 2.91 2.80 ./fs/signalfd.c 3.63 3.71 ./fs/splice.c 3.91 3.76 ./fs/stack.c 2.34 2.31 ./fs/stat.c 3.98 3.97 ./fs/statfs.c 3.51 3.55 ./fs/super.c 3.81 3.67 ./fs/sync.c 3.86 3.73 ./fs/sysctls.c 0.71 0.65 ./fs/sysfs/dir.c 2.33 2.46 ./fs/sysfs/file.c 2.95 2.74 ./fs/sysfs/group.c 2.64 2.40 ./fs/sysfs/mount.c 3.66 3.83 ./fs/sysfs/symlink.c 3.37 3.36 ./fs/timerfd.c 3.53 3.73 ./fs/tracefs/event_inode.c 3.4 3.67 ./fs/tracefs/inode.c 3.5 3.22 ./fs/utimes.c 3.84 3.33 ./fs/xattr.c 3.71 3.81 ./init/calibrate.c 0.81 0.76 ./init/do_mounts.c 5.43 5.37 ./init/do_mounts_initrd.c 3.6 3.80 ./init/init_task.c 3.51 3.23 ./init/initramfs.c 3.72 3.83 ./init/main.c 5.2 FAIL ./init/version-timestamp.c 0.62 0.82 ./init/version.c 0.68 0.69 ./io_uring/advise.c 3.75 3.73 ./io_uring/cancel.c 3.69 3.75 ./io_uring/epoll.c 3.79 3.59 ./io_uring/eventfd.c 3.3 2.88 ./io_uring/fdinfo.c 3.75 3.67 ./io_uring/filetable.c 3.62 3.66 ./io_uring/fs.c 3.61 3.85 ./io_uring/futex.c 3.71 3.73 ./io_uring/io-wq.c 4.17 4.81 ./io_uring/io_uring.c 6.71 6.79 ./io_uring/kbuf.c 4.24 4.48 ./io_uring/memmap.c 3.19 3.16 ./io_uring/msg_ring.c 3.5 3.62 ./io_uring/napi.c 5.68 5.42 ./io_uring/net.c 5.2 5.13 ./io_uring/nop.c 3.71 3.72 ./io_uring/notif.c 4.88 4.85 ./io_uring/opdef.c 3.58 3.64 ./io_uring/openclose.c 3.67 3.99 ./io_uring/poll.c 6.67 6.11 ./io_uring/register.c 6.22 5.94 ./io_uring/rsrc.c 3.84 4.37 ./io_uring/rw.c 4.25 3.90 ./io_uring/splice.c 3.37 3.45 ./io_uring/sqpoll.c 5.76 5.45 ./io_uring/statx.c 3.97 3.86 ./io_uring/sync.c 3.7 3.90 ./io_uring/tctx.c 3.73 3.99 ./io_uring/timeout.c 3.65 3.78 ./io_uring/truncate.c 4.19 4.14 ./io_uring/uring_cmd.c 4.9 4.95 ./io_uring/waitid.c 3.81 3.67 ./io_uring/xattr.c 3.62 3.72 ./ipc/compat.c 3.36 3.52 ./ipc/ipc_sysctl.c 2.63 2.78 ./ipc/mq_sysctl.c 1.71 1.61 ./ipc/mqueue.c 4.66 4.60 ./ipc/msg.c 4.25 3.66 ./ipc/msgutil.c 3.32 3.46 ./ipc/namespace.c 2.57 2.68 ./ipc/sem.c 3.84 3.85 ./ipc/shm.c 3.92 4.78 ./ipc/syscall.c 3.52 3.50 ./ipc/util.c 3.53 3.63 ./kernel/acct.c 3.72 3.84 ./kernel/async.c 2.64 2.61 ./kernel/audit.c 4.47 4.63 ./kernel/audit_fsnotify.c 3.74 3.59 ./kernel/audit_tree.c 3.44 3.35 ./kernel/audit_watch.c 3.87 3.99 ./kernel/auditfilter.c 4.4 4.62 ./kernel/auditsc.c 4.17 3.97 ./kernel/bpf/core.c 5.23 5.26 ./kernel/capability.c 3.27 3.59 ./kernel/cgroup/cgroup-v1.c 4.12 3.97 ./kernel/cgroup/cgroup.c 6.11 5.85 ./kernel/cgroup/cpuset.c 3.82 4.23 ./kernel/cgroup/debug.c 3.33 3.26 ./kernel/cgroup/freezer.c 3.88 4.49 ./kernel/cgroup/legacy_freezer.c 2.81 2.88 ./kernel/cgroup/misc.c 2.58 2.69 ./kernel/cgroup/namespace.c 3.32 3.31 ./kernel/cgroup/pids.c 2.71 2.64 ./kernel/cgroup/rdma.c 2.5 2.59 ./kernel/cgroup/rstat.c 3.73 3.72 ./kernel/compat.c 3.79 3.87 ./kernel/context_tracking.c 3.71 3.72 ./kernel/cpu.c 4.88 4.89 ./kernel/crash_core.c 3.24 3.17 ./kernel/crash_reserve.c 2.98 3.36 ./kernel/cred.c 3.68 3.76 ./kernel/delayacct.c 2.52 2.61 ./kernel/dma.c 2.76 2.41 ./kernel/dma/direct.c 3.69 2.90 ./kernel/dma/dummy.c 2.87 2.94 ./kernel/dma/mapping.c 3.32 3.47 ./kernel/dma/ops_helpers.c 2.91 2.93 ./kernel/dma/remap.c 3.86 3.12 ./kernel/dma/swiotlb.c 3.7 3.68 ./kernel/elfcorehdr.c 3.19 3.21 ./kernel/entry/common.c 3.86 3.72 ./kernel/entry/syscall_user_dispatch.c 2.85 2.75 ./kernel/events/callchain.c 3.49 3.71 ./kernel/events/core.c 6.28 5.95 ./kernel/events/hw_breakpoint.c 3.83 3.67 ./kernel/events/ring_buffer.c 3.55 3.84 ./kernel/events/uprobes.c 3.54 3.54 ./kernel/exec_domain.c 3.21 3.38 ./kernel/exit.c 5.53 5.51 ./kernel/extable.c 4.55 4.31 ./kernel/fork.c 6.28 5.95 ./kernel/freezer.c 3.67 3.74 ./kernel/futex/core.c 3.15 3.78 ./kernel/futex/pi.c 2.57 2.59 ./kernel/futex/requeue.c 2.39 2.57 ./kernel/futex/syscalls.c 3.66 3.57 ./kernel/futex/waitwake.c 2.62 2.66 ./kernel/groups.c 3.56 3.49 ./kernel/iomem.c 2.93 2.95 ./kernel/irq/affinity.c 2.6 2.79 ./kernel/irq/autoprobe.c 2.8 2.89 ./kernel/irq/chip.c 3.35 3.50 ./kernel/irq/cpuhotplug.c 3.54 3.49 ./kernel/irq/devres.c 2.86 2.98 ./kernel/irq/dummychip.c 2.71 2.97 ./kernel/irq/handle.c 2.88 2.92 ./kernel/irq/irqdesc.c 2.67 2.72 ./kernel/irq/irqdomain.c 3.32 3.24 ./kernel/irq/manage.c 3.62 3.61 ./kernel/irq/matrix.c 4.18 3.85 ./kernel/irq/migration.c 2.63 3.55 ./kernel/irq/msi.c 3.45 3.59 ./kernel/irq/pm.c 3.34 3.98 ./kernel/irq/proc.c 2.85 2.67 ./kernel/irq/resend.c 2.68 2.93 ./kernel/irq/spurious.c 2.96 2.92 ./kernel/irq_work.c 2.94 2.92 ./kernel/jump_label.c 2.7 2.73 ./kernel/kallsyms.c 4.42 4.29 ./kernel/kcmp.c 3.77 3.52 ./kernel/kexec.c 3.59 3.52 ./kernel/kexec_core.c 3.78 4.15 ./kernel/kprobes.c 3.8 3.82 ./kernel/ksyms_common.c 3.34 3.37 ./kernel/ksysfs.c 2.92 2.95 ./kernel/kthread.c 4.5 4.30 ./kernel/locking/mutex.c 3.81 3.47 ./kernel/locking/osq_lock.c 0.78 0.85 ./kernel/locking/percpu-rwsem.c 2.92 2.95 ./kernel/locking/qrwlock.c 2.72 2.69 ./kernel/locking/qspinlock.c 2.81 2.88 ./kernel/locking/rtmutex_api.c 2.91 2.93 ./kernel/locking/rwsem.c 2.69 2.69 ./kernel/locking/semaphore.c 2.76 3.23 ./kernel/locking/spinlock.c 0.96 0.80 ./kernel/module/kallsyms.c 3.2 3.24 ./kernel/module/kmod.c 3.77 3.81 ./kernel/module/main.c 4.19 4.30 ./kernel/module/procfs.c 2.97 2.86 ./kernel/module/strict_rwx.c 2.84 2.82 ./kernel/module/sysfs.c 2.68 2.79 ./kernel/module/tree_lookup.c 2.83 3.13 ./kernel/notifier.c 3.96 3.69 ./kernel/nsproxy.c 4.11 3.98 ./kernel/numa.c 0.81 0.12 ./kernel/padata.c 2.69 2.60 ./kernel/panic.c 3.39 3.31 ./kernel/params.c 3.36 3.46 ./kernel/pid.c 4.55 4.43 ./kernel/pid_namespace.c 3.33 3.56 ./kernel/power/console.c 3.32 3.33 ./kernel/power/hibernate.c 4.59 4.35 ./kernel/power/main.c 4.23 4.17 ./kernel/power/poweroff.c 0.81 0.97 ./kernel/power/process.c 4.33 4.56 ./kernel/power/qos.c 3.97 4.13 ./kernel/power/snapshot.c 4.27 4.75 ./kernel/power/suspend.c 4.5 4.23 ./kernel/power/swap.c 3.66 3.53 ./kernel/power/user.c 3.33 3.26 ./kernel/printk/nbcon.c 1.36 1.73 ./kernel/printk/printk.c 4.18 4.21 ./kernel/printk/printk_ringbuffer.c 0.85 0.86 ./kernel/printk/printk_safe.c 3.56 3.21 ./kernel/printk/sysctl.c 0.84 0.84 ./kernel/profile.c 3.16 3.13 ./kernel/ptrace.c 3.74 3.74 ./kernel/range.c 0.1 0.13 ./kernel/rcu/rcu_segcblist.c 2.81 2.57 ./kernel/rcu/srcutree.c 3.37 3.32 ./kernel/rcu/sync.c 0.77 0.83 ./kernel/rcu/tree.c 5.63 5.89 ./kernel/rcu/update.c 4.86 5.14 ./kernel/reboot.c 3.86 3.82 ./kernel/regset.c 2.11 1.99 ./kernel/relay.c 3.64 2.98 ./kernel/resource.c 3.51 3.50 ./kernel/rseq.c 3.51 3.54 ./kernel/sched/build_policy.c 5.84 5.72 ./kernel/sched/build_utility.c 6.7 6.23 ./kernel/sched/core.c 7.78 7.66 ./kernel/sched/fair.c 6.6 6.86 ./kernel/seccomp.c 4.96 4.70 ./kernel/signal.c 4.16 3.99 ./kernel/smp.c 3.76 4.27 ./kernel/smpboot.c 2.81 2.83 ./kernel/softirq.c 4.25 3.74 ./kernel/stacktrace.c 2.74 2.89 ./kernel/static_call.c 2.57 2.72 ./kernel/static_call_inline.c 2.51 2.63 ./kernel/stop_machine.c 3.28 2.89 ./kernel/sys.c 4.26 4.27 ./kernel/sys_ni.c 0.19 0.24 ./kernel/sysctl.c 5.92 5.44 ./kernel/task_work.c 3.22 3.40 ./kernel/taskstats.c 3.91 3.77 ./kernel/time/alarmtimer.c 3.87 3.85 ./kernel/time/clockevents.c 2.73 2.99 ./kernel/time/clocksource.c 3.79 2.93 ./kernel/time/hrtimer.c 3.97 4.40 ./kernel/time/itimer.c 3.93 3.92 ./kernel/time/jiffies.c 2.79 2.55 ./kernel/time/namespace.c 2.68 2.84 ./kernel/time/ntp.c 3.21 3.18 ./kernel/time/posix-clock.c 3.43 3.53 ./kernel/time/posix-cpu-timers.c 3.22 3.19 ./kernel/time/posix-timers.c 3.8 3.64 ./kernel/time/tick-broadcast-hrtimer.c 2.73 2.90 ./kernel/time/tick-broadcast.c 2.72 2.75 ./kernel/time/tick-common.c 4.41 4.26 ./kernel/time/tick-oneshot.c 2.7 3.85 ./kernel/time/tick-sched.c 3.48 3.31 ./kernel/time/time.c 3.83 4.13 ./kernel/time/timeconv.c 2.81 2.55 ./kernel/time/timecounter.c 0.57 0.58 ./kernel/time/timekeeping.c 3.18 3.16 ./kernel/time/timekeeping_debug.c 3.15 3.21 ./kernel/time/timer.c 4.57 4.98 ./kernel/time/timer_list.c 2.77 3.17 ./kernel/time/timer_migration.c 4.25 4.20 ./kernel/time/vsyscall.c 1.73 1.75 ./kernel/trace/blktrace.c 4.5 4.51 ./kernel/trace/error_report-traces.c 3.52 3.55 ./kernel/trace/pid_list.c 3.54 3.59 ./kernel/trace/power-traces.c 4.44 4.49 ./kernel/trace/rethook.c 2.94 2.70 ./kernel/trace/ring_buffer.c 3.92 4.19 ./kernel/trace/rpm-traces.c 3.66 4.91 ./kernel/trace/trace.c 4.38 4.85 ./kernel/trace/trace_clock.c 2.64 2.76 ./kernel/trace/trace_dynevent.c 3.75 3.94 ./kernel/trace/trace_eprobe.c 4.13 3.77 ./kernel/trace/trace_event_perf.c 3.95 3.44 ./kernel/trace/trace_events.c 4.53 5.96 ./kernel/trace/trace_events_filter.c 3.86 3.72 ./kernel/trace/trace_events_trigger.c 3.64 3.80 ./kernel/trace/trace_export.c 3.75 3.77 ./kernel/trace/trace_kprobe.c 4.71 4.88 ./kernel/trace/trace_nop.c 3.8 3.64 ./kernel/trace/trace_output.c 4.29 4.30 ./kernel/trace/trace_printk.c 3.62 3.69 ./kernel/trace/trace_probe.c 3.89 3.89 ./kernel/trace/trace_sched_switch.c 4.43 4.47 ./kernel/trace/trace_seq.c 2.58 2.66 ./kernel/trace/trace_stat.c 3.71 3.65 ./kernel/trace/trace_uprobe.c 5.16 5.34 ./kernel/tracepoint.c 2.58 2.79 ./kernel/tsacct.c 2.86 2.77 ./kernel/ucount.c 1.48 1.58 ./kernel/uid16.c 3.43 3.46 ./kernel/umh.c 3.68 3.59 ./kernel/user.c 1.65 1.58 ./kernel/utsname.c 1.93 2.12 ./kernel/utsname_sysctl.c 0.74 0.74 ./kernel/vmcore_info.c 3.16 3.26 ./kernel/workqueue.c 5.1 5.56 ./lib/argv_split.c 1.36 1.52 ./lib/asn1_decoder.c 2.65 2.66 ./lib/assoc_array.c 1.52 1.55 ./lib/base64.c 0.15 0.15 ./lib/bcd.c 0.56 0.11 ./lib/bitmap-str.c 2.81 2.79 ./lib/bitmap.c 2.74 2.67 ./lib/bitrev.c 2.46 2.38 ./lib/bsearch.c 2.92 2.92 ./lib/bucket_locks.c 2.69 2.83 ./lib/bug.c 3.81 3.13 ./lib/buildid.c 2.99 2.83 ./lib/bust_spinlocks.c 2.94 2.98 ./lib/check_signature.c 0.47 0.49 ./lib/clz_ctz.c 0.13 0.14 ./lib/clz_tab.c 0.53 0.43 ./lib/cmdline.c 0.16 0.16 ./lib/cmdline.c 0.18 0.17 ./lib/cpu_rmap.c 1.57 1.40 ./lib/cpumask.c 2.71 2.70 ./lib/crc-ccitt.c 2.47 2.55 ./lib/crc16.c 2.63 2.71 ./lib/crc32.c 3.63 3.35 ./lib/crypto/aes.c 2.72 2.62 ./lib/crypto/arc4.c 2.54 2.60 ./lib/crypto/blake2s-generic.c 0.39 0.32 ./lib/crypto/blake2s.c 2.37 2.35 ./lib/crypto/chacha.c 0.18 0.16 ./lib/crypto/gf128mul.c 2.92 2.89 ./lib/crypto/memneq.c 2.57 2.93 ./lib/crypto/mpi/ec.c 2.98 2.70 ./lib/crypto/mpi/generic_mpih-add1.c 2.93 2.87 ./lib/crypto/mpi/generic_mpih-lshift.c 2.83 2.84 ./lib/crypto/mpi/generic_mpih-mul1.c 2.83 2.77 ./lib/crypto/mpi/generic_mpih-mul2.c 2.88 2.96 ./lib/crypto/mpi/generic_mpih-mul3.c 2.83 2.86 ./lib/crypto/mpi/generic_mpih-rshift.c 2.69 2.88 ./lib/crypto/mpi/generic_mpih-sub1.c 2.82 2.73 ./lib/crypto/mpi/mpi-add.c 2.96 3.80 ./lib/crypto/mpi/mpi-bit.c 2.88 2.94 ./lib/crypto/mpi/mpi-cmp.c 2.97 2.89 ./lib/crypto/mpi/mpi-div.c 3.11 3.88 ./lib/crypto/mpi/mpi-inv.c 2.77 2.95 ./lib/crypto/mpi/mpi-mod.c 2.91 2.79 ./lib/crypto/mpi/mpi-mul.c 2.87 3.29 ./lib/crypto/mpi/mpi-pow.c 2.97 2.82 ./lib/crypto/mpi/mpi-sub-ui.c 3.52 2.91 ./lib/crypto/mpi/mpicoder.c 2.88 2.75 ./lib/crypto/mpi/mpih-cmp.c 2.84 2.88 ./lib/crypto/mpi/mpih-div.c 2.84 3.54 ./lib/crypto/mpi/mpih-mul.c 2.8 2.96 ./lib/crypto/mpi/mpiutil.c 2.92 2.86 ./lib/crypto/sha1.c 2.55 2.51 ./lib/crypto/sha256.c 2.65 2.86 ./lib/crypto/utils.c 2.64 2.64 ./lib/ctype.c 0.57 0.85 ./lib/ctype.c 0.67 0.84 ./lib/debug_locks.c 0.67 0.61 ./lib/dec_and_lock.c 0.6 0.59 ./lib/decompress.c 0.92 0.10 ./lib/decompress_bunzip2.c 2.44 2.42 ./lib/decompress_inflate.c 2.47 2.53 ./lib/decompress_unlz4.c 2.47 2.52 ./lib/decompress_unlzma.c 2.62 2.46 ./lib/decompress_unlzo.c 2.59 2.51 ./lib/decompress_unxz.c 2.44 2.53 ./lib/decompress_unzstd.c 2.58 2.52 ./lib/devres.c 2.63 2.75 ./lib/dim/dim.c 2.41 2.64 ./lib/dim/net_dim.c 3.91 4.29 ./lib/dim/rdma_dim.c 2.62 2.74 ./lib/dump_stack.c 3.13 2.80 ./lib/dynamic_queue_limits.c 4.23 3.95 ./lib/earlycpio.c 0.19 0.17 ./lib/errname.c 0.14 0.16 ./lib/errseq.c 0.3 0.31 ./lib/extable.c 2.69 2.46 ./lib/find_bit.c 0.24 0.22 ./lib/flex_proportions.c 1.34 1.47 ./lib/fonts/font_8x16.c 2.82 2.68 ./lib/fonts/fonts.c 2.55 2.75 ./lib/fw_table.c 2.89 2.98 ./lib/genalloc.c 2.92 2.81 ./lib/generic-radix-tree.c 1.54 1.67 ./lib/glob.c 2.51 2.40 ./lib/group_cpus.c 2.57 2.60 ./lib/hexdump.c 0.17 0.18 ./lib/idr.c 1.72 1.63 ./lib/interval_tree.c 0.78 0.65 ./lib/iomap.c 3.39 3.16 ./lib/iomap_copy.c 0.54 0.56 ./lib/iov_iter.c 3.14 3.11 ./lib/irq_regs.c 0.69 0.68 ./lib/is_single_threaded.c 2.34 2.14 ./lib/kasprintf.c 1.6 1.49 ./lib/kfifo.c 2.97 2.89 ./lib/klist.c 0.69 0.65 ./lib/kobject.c 1.59 1.62 ./lib/kobject_uevent.c 4.32 4.24 ./lib/kstrtox.c 1.45 1.53 ./lib/list_sort.c 0.29 0.20 ./lib/llist.c 0.34 0.28 ./lib/lockref.c 0.62 0.64 ./lib/logic_pio.c 2.86 2.74 ./lib/lwq.c 0.76 0.81 ./lib/lz4/lz4_decompress.c 2.63 2.80 ./lib/lzo/lzo1x_compress.c 2.55 2.48 ./lib/lzo/lzo1x_decompress_safe.c 2.5 2.63 ./lib/maple_tree.c 3.78 4.24 ./lib/math/div64.c 0.13 0.13 ./lib/math/gcd.c 0.13 0.12 ./lib/math/int_log.c 0.15 0.13 ./lib/math/int_pow.c 0.6 0.64 ./lib/math/int_sqrt.c 0.12 0.11 ./lib/math/lcm.c 0.57 0.59 ./lib/math/rational.c 2.51 2.47 ./lib/math/reciprocal_div.c 0.15 0.15 ./lib/memcat_p.c 1.75 1.60 ./lib/memweight.c 0.2 0.28 ./lib/net_utils.c 3.44 3.44 ./lib/nlattr.c 3.76 3.62 ./lib/nmi_backtrace.c 3.35 3.16 ./lib/objpool.c 1.53 1.61 ./lib/oid_registry.c 2.55 2.42 ./lib/once.c 2.5 2.55 ./lib/parser.c 1.45 1.48 ./lib/percpu-refcount.c 2.67 2.72 ./lib/percpu_counter.c 2.74 2.76 ./lib/plist.c 0.13 0.12 ./lib/radix-tree.c 2.85 2.87 ./lib/random32.c 1.36 1.48 ./lib/ratelimit.c 0.9 0.84 ./lib/rbtree.c 0.69 0.57 ./lib/rcuref.c 0.56 0.52 ./lib/refcount.c 0.64 0.63 ./lib/rhashtable.c 3.32 3.38 ./lib/sbitmap.c 2.63 2.63 ./lib/scatterlist.c 2.82 2.91 ./lib/seq_buf.c 2.52 2.51 ./lib/sg_pool.c 2.7 2.63 ./lib/siphash.c 0.88 0.90 ./lib/sort.c 0.68 0.70 ./lib/stackdepot.c 2.92 2.99 ./lib/string.c 0.2 0.20 ./lib/string_helpers.c 3.26 3.10 ./lib/strncpy_from_user.c 2.76 2.70 ./lib/strnlen_user.c 2.81 2.68 ./lib/syscall.c 2.67 2.67 ./lib/timerqueue.c 0.62 0.69 ./lib/ucs2_string.c 2.65 2.74 ./lib/usercopy.c 1.47 1.51 ./lib/uuid.c 0.23 0.20 ./lib/vsprintf.c 5.26 5.28 ./lib/win_minmax.c 2.63 2.54 ./lib/xarray.c 1.64 1.66 ./lib/xxhash.c 2.85 2.76 ./lib/xz/xz_dec_bcj.c 1.4 1.53 ./lib/xz/xz_dec_lzma2.c 1.4 1.48 ./lib/xz/xz_dec_stream.c 1.43 1.37 ./lib/xz/xz_dec_syms.c 2.52 2.56 ./lib/zlib_deflate/deflate.c 2.42 2.62 ./lib/zlib_deflate/deflate_syms.c 2.57 2.51 ./lib/zlib_deflate/deftree.c 0.27 0.33 ./lib/zlib_inflate/inffast.c 0.16 0.16 ./lib/zlib_inflate/inflate.c 0.2 0.24 ./lib/zlib_inflate/inflate_syms.c 2.57 2.58 ./lib/zlib_inflate/inftrees.c 0.22 0.20 ./lib/zlib_inflate/infutil.c 1.48 1.44 ./lib/zstd/common/debug.c 0.39 0.42 ./lib/zstd/common/entropy_common.c 0.11 0.12 ./lib/zstd/common/error_private.c 0.52 0.53 ./lib/zstd/common/fse_decompress.c 0.11 0.11 ./lib/zstd/common/zstd_common.c 0.15 0.21 ./lib/zstd/decompress/huf_decompress.c 0.21 0.28 ./lib/zstd/decompress/zstd_ddict.c 0.25 0.18 ./lib/zstd/decompress/zstd_decompress.c 0.35 0.23 ./lib/zstd/decompress/zstd_decompress_block.c 0.26 0.25 ./lib/zstd/zstd_common_module.c 2.58 2.61 ./lib/zstd/zstd_decompress_module.c 2.49 2.50 ./mm/backing-dev.c 4.4 4.24 ./mm/compaction.c 4.65 4.98 ./mm/debug.c 4.36 3.74 ./mm/dmapool.c 2.91 3.46 ./mm/early_ioremap.c 3.58 3.57 ./mm/execmem.c 2.81 2.73 ./mm/fadvise.c 3.61 3.73 ./mm/filemap.c 5.73 4.93 ./mm/folio-compat.c 3.5 3.62 ./mm/gup.c 4.18 3.88 ./mm/highmem.c 3.52 3.19 ./mm/hugetlb.c 4.23 4.20 ./mm/hugetlb_cgroup.c 3.49 3.38 ./mm/hugetlb_vmemmap.c 3.56 3.70 ./mm/init-mm.c 3.15 3.95 ./mm/interval_tree.c 3.32 3.12 ./mm/list_lru.c 3.44 3.54 ./mm/maccess.c 3.24 3.35 ./mm/madvise.c 4.64 3.90 ./mm/memblock.c 3.37 3.56 ./mm/memfd.c 4.17 3.71 ./mm/memory-tiers.c 3.39 3.38 ./mm/memory.c 4.81 5.18 ./mm/mempolicy.c 4.36 4.37 ./mm/mempool.c 3.87 3.30 ./mm/migrate.c 4.4 4.42 ./mm/mincore.c 3.95 3.90 ./mm/mlock.c 4.47 3.70 ./mm/mm_init.c 3.76 3.73 ./mm/mmap.c 4.57 4.62 ./mm/mmap_lock.c 3.67 3.42 ./mm/mmu_gather.c 3.51 3.60 ./mm/mmu_notifier.c 2.96 3.48 ./mm/mmzone.c 2.53 2.56 ./mm/mprotect.c 3.94 4.18 ./mm/mremap.c 4.44 3.92 ./mm/mseal.c 4.46 4.19 ./mm/msync.c 3.53 3.62 ./mm/oom_kill.c 4.61 4.48 ./mm/page-writeback.c 4.76 4.55 ./mm/page_alloc.c 4.62 4.74 ./mm/page_counter.c 0.77 0.71 ./mm/page_io.c 3.53 3.57 ./mm/page_vma_mapped.c 3.31 3.40 ./mm/pagewalk.c 3.49 3.41 ./mm/percpu.c 4.56 4.45 ./mm/pgtable-generic.c 3.43 3.72 ./mm/process_vm_access.c 3.35 3.47 ./mm/ptdump.c 2.53 2.76 ./mm/readahead.c 4.49 4.19 ./mm/rmap.c 4.42 4.15 ./mm/secretmem.c 3.71 3.87 ./mm/shmem.c 4.99 3.92 ./mm/shmem_quota.c 3.32 3.27 ./mm/show_mem.c 3.59 3.74 ./mm/shrinker.c 3.66 3.98 ./mm/slab_common.c 4.54 4.57 ./mm/slub.c 4.58 4.31 ./mm/sparse-vmemmap.c 3.12 2.96 ./mm/sparse.c 3.46 3.47 ./mm/swap.c 4.15 4.36 ./mm/swap_slots.c 3.21 3.29 ./mm/swap_state.c 3.77 3.92 ./mm/swapfile.c 4.38 4.19 ./mm/truncate.c 3.56 3.53 ./mm/util.c 3.78 3.83 ./mm/vmalloc.c 4.81 4.85 ./mm/vmscan.c 5.45 5.16 ./mm/vmstat.c 3.96 4.64 ./mm/workingset.c 3.63 3.59 ./net/9p/client.c 3.94 3.97 ./net/9p/error.c 2.73 2.52 ./net/9p/mod.c 2.6 2.56 ./net/9p/protocol.c 2.72 2.87 ./net/9p/trans_common.c 2.74 2.69 ./net/9p/trans_fd.c 4.82 4.80 ./net/9p/trans_virtio.c 4.71 4.90 ./net/compat.c 5.47 5.21 ./net/core/datagram.c 5.21 5.44 ./net/core/dev.c 8.76 8.59 ./net/core/dev_addr_lists.c 3.94 3.80 ./net/core/dev_ioctl.c 5.86 5.25 ./net/core/dst.c 5.22 5.18 ./net/core/dst_cache.c 4.91 4.65 ./net/core/failover.c 3.78 4.32 ./net/core/fib_notifier.c 4.31 4.18 ./net/core/fib_rules.c 5.31 4.98 ./net/core/filter.c 7.27 7.54 ./net/core/flow_dissector.c 5.92 6.38 ./net/core/flow_offload.c 4.52 4.29 ./net/core/gen_estimator.c 4.4 4.13 ./net/core/gen_stats.c 4.1 4.25 ./net/core/gro.c 5.96 5.72 ./net/core/gro_cells.c 4.4 4.60 ./net/core/gso.c 4.96 5.45 ./net/core/hotdata.c 4.55 4.41 ./net/core/link_watch.c 4.47 4.51 ./net/core/neighbour.c 5.26 5.20 ./net/core/net-procfs.c 4.6 4.42 ./net/core/net-sysfs.c 5.48 5.76 ./net/core/net-traces.c 7.58 7.94 ./net/core/net_namespace.c 4.69 4.51 ./net/core/netclassid_cgroup.c 4.43 4.58 ./net/core/netdev-genl-gen.c 3.73 3.43 ./net/core/netdev-genl.c 5.25 5.39 ./net/core/netevent.c 3.84 4.65 ./net/core/netpoll.c 5.87 5.95 ./net/core/netprio_cgroup.c 4.55 4.55 ./net/core/ptp_classifier.c 4.6 4.90 ./net/core/request_sock.c 4.35 4.36 ./net/core/rtnetlink.c 6.23 6.57 ./net/core/scm.c 4.61 4.72 ./net/core/secure_seq.c 5.34 5.60 ./net/core/selftests.c 5.87 5.77 ./net/core/skbuff.c 6.41 6.16 ./net/core/sock.c 6.27 6.36 ./net/core/sock_diag.c 4.72 4.69 ./net/core/sock_reuseport.c 5.81 5.24 ./net/core/stream.c 4.49 4.51 ./net/core/sysctl_net_core.c 5.57 5.63 ./net/core/tso.c 4.73 4.77 ./net/core/utils.c 4.53 4.73 ./net/core/xdp.c 5.23 5.45 ./net/devres.c 3.9 3.97 ./net/dns_resolver/dns_key.c 2.6 2.70 ./net/dns_resolver/dns_query.c 3.33 3.39 ./net/ethernet/eth.c 5.45 5.63 ./net/ethtool/bitset.c 4.54 4.49 ./net/ethtool/cabletest.c 4.55 4.44 ./net/ethtool/channels.c 4.67 4.62 ./net/ethtool/cmis_cdb.c 4.22 4.36 ./net/ethtool/cmis_fw_update.c 4.35 4.38 ./net/ethtool/coalesce.c 4.43 4.43 ./net/ethtool/common.c 4.16 4.24 ./net/ethtool/debug.c 4.36 4.26 ./net/ethtool/eee.c 4.4 4.46 ./net/ethtool/eeprom.c 4.44 4.45 ./net/ethtool/features.c 4.28 4.46 ./net/ethtool/fec.c 4.47 4.43 ./net/ethtool/ioctl.c 5.54 5.39 ./net/ethtool/linkinfo.c 4.17 4.35 ./net/ethtool/linkmodes.c 4.49 4.36 ./net/ethtool/linkstate.c 4.24 4.70 ./net/ethtool/mm.c 4.35 4.25 ./net/ethtool/module.c 4.68 4.38 ./net/ethtool/netlink.c 4.58 4.48 ./net/ethtool/pause.c 4.27 4.42 ./net/ethtool/phc_vclocks.c 4.4 4.36 ./net/ethtool/plca.c 4.49 4.43 ./net/ethtool/privflags.c 4.23 4.52 ./net/ethtool/pse-pd.c 4.25 4.53 ./net/ethtool/rings.c 4.15 4.16 ./net/ethtool/rss.c 4.43 4.36 ./net/ethtool/stats.c 4.61 4.49 ./net/ethtool/strset.c 4.35 4.51 ./net/ethtool/tsinfo.c 4.54 4.47 ./net/ethtool/tunnels.c 5.23 5.25 ./net/ethtool/wol.c 4.46 4.12 ./net/handshake/alert.c 5.77 5.68 ./net/handshake/genl.c 3.74 3.96 ./net/handshake/netlink.c 4.4 4.79 ./net/handshake/request.c 4.77 4.70 ./net/handshake/tlshd.c 4.63 4.10 ./net/handshake/trace.c 5.42 5.45 ./net/ipv4/af_inet.c 6.13 6.47 ./net/ipv4/arp.c 5.85 5.92 ./net/ipv4/cipso_ipv4.c 5.78 5.60 ./net/ipv4/datagram.c 5.26 5.33 ./net/ipv4/devinet.c 5.24 5.11 ./net/ipv4/fib_frontend.c 5.76 5.68 ./net/ipv4/fib_notifier.c 4.58 4.34 ./net/ipv4/fib_rules.c 5.54 5.84 ./net/ipv4/fib_semantics.c 5.82 5.84 ./net/ipv4/fib_trie.c 5.95 6.12 ./net/ipv4/gre_offload.c 4.96 5.18 ./net/ipv4/icmp.c 6.23 6.31 ./net/ipv4/igmp.c 5.3 5.45 ./net/ipv4/inet_connection_sock.c 6.76 5.85 ./net/ipv4/inet_fragment.c 5.4 5.72 ./net/ipv4/inet_hashtables.c 5.87 5.55 ./net/ipv4/inet_timewait_sock.c 4.91 4.87 ./net/ipv4/inetpeer.c 4.82 4.84 ./net/ipv4/ip_forward.c 5.35 5.75 ./net/ipv4/ip_fragment.c 5.17 5.19 ./net/ipv4/ip_input.c 5.8 5.16 ./net/ipv4/ip_options.c 4.68 4.77 ./net/ipv4/ip_output.c 5.31 5.49 ./net/ipv4/ip_sockglue.c 5.41 5.56 ./net/ipv4/ip_tunnel.c 5.35 5.64 ./net/ipv4/ip_tunnel_core.c 5.41 5.43 ./net/ipv4/ipconfig.c 5.32 5.14 ./net/ipv4/ipmr.c 5.41 5.55 ./net/ipv4/ipmr_base.c 5.19 4.76 ./net/ipv4/metrics.c 5.38 5.26 ./net/ipv4/netfilter.c 4.78 5.39 ./net/ipv4/netfilter/ip_tables.c 4.92 4.98 ./net/ipv4/netfilter/ipt_REJECT.c 4.81 4.90 ./net/ipv4/netfilter/iptable_filter.c 4.8 4.71 ./net/ipv4/netfilter/iptable_mangle.c 4.88 4.97 ./net/ipv4/netfilter/iptable_nat.c 5.47 4.95 ./net/ipv4/netfilter/iptable_nat.mod.c 2.47 2.81 ./net/ipv4/netfilter/nf_defrag_ipv4.c 5.14 4.59 ./net/ipv4/netfilter/nf_reject_ipv4.c 5.61 5.74 ./net/ipv4/netlink.c 4.85 4.83 ./net/ipv4/nexthop.c 4.9 5.19 ./net/ipv4/ping.c 5.32 5.11 ./net/ipv4/proc.c 5.36 5.53 ./net/ipv4/protocol.c 4.2 4.42 ./net/ipv4/raw.c 5.43 5.23 ./net/ipv4/route.c 6.22 6.68 ./net/ipv4/syncookies.c 5.45 5.51 ./net/ipv4/sysctl_net_ipv4.c 5.83 5.52 ./net/ipv4/tcp.c 7.33 7.31 ./net/ipv4/tcp_cong.c 5.91 6.76 ./net/ipv4/tcp_cubic.c 5.84 5.59 ./net/ipv4/tcp_fastopen.c 5.57 5.37 ./net/ipv4/tcp_input.c 7.24 7.52 ./net/ipv4/tcp_ipv4.c 6.54 6.71 ./net/ipv4/tcp_metrics.c 5.76 5.50 ./net/ipv4/tcp_minisocks.c 5.99 5.89 ./net/ipv4/tcp_offload.c 5.53 5.79 ./net/ipv4/tcp_output.c 6.53 6.72 ./net/ipv4/tcp_plb.c 5.47 5.77 ./net/ipv4/tcp_rate.c 5.5 5.34 ./net/ipv4/tcp_recovery.c 5.58 5.48 ./net/ipv4/tcp_sigpool.c 5.41 5.55 ./net/ipv4/tcp_timer.c 5.61 5.86 ./net/ipv4/tcp_ulp.c 5.56 5.42 ./net/ipv4/tunnel4.c 5.1 4.99 ./net/ipv4/udp.c 6.47 6.49 ./net/ipv4/udp_offload.c 4.93 4.99 ./net/ipv4/udp_tunnel_stub.c 5.13 5.67 ./net/ipv4/udplite.c 4.58 4.67 ./net/ipv4/xfrm4_input.c 5.23 5.90 ./net/ipv4/xfrm4_output.c 4.93 4.98 ./net/ipv4/xfrm4_policy.c 5.17 5.58 ./net/ipv4/xfrm4_protocol.c 5.19 4.89 ./net/ipv4/xfrm4_state.c 5.15 5.11 ./net/ipv6/addrconf.c 6.53 6.47 ./net/ipv6/addrconf_core.c 4.8 4.88 ./net/ipv6/addrlabel.c 4.67 4.51 ./net/ipv6/af_inet6.c 5.67 5.81 ./net/ipv6/ah6.c 5.1 5.22 ./net/ipv6/anycast.c 4.77 4.97 ./net/ipv6/calipso.c 5.73 5.58 ./net/ipv6/datagram.c 5.34 5.66 ./net/ipv6/esp6.c 5.65 6.13 ./net/ipv6/exthdrs.c 5.48 5.35 ./net/ipv6/exthdrs_core.c 4.37 4.53 ./net/ipv6/exthdrs_offload.c 4.29 4.51 ./net/ipv6/fib6_notifier.c 4.63 4.64 ./net/ipv6/icmp.c 5.27 5.20 ./net/ipv6/inet6_connection_sock.c 5.54 5.14 ./net/ipv6/inet6_hashtables.c 5.61 5.67 ./net/ipv6/ioam6.c 4.9 5.11 ./net/ipv6/ip6_checksum.c 4.62 4.85 ./net/ipv6/ip6_fib.c 5.29 5.14 ./net/ipv6/ip6_flowlabel.c 4.57 4.89 ./net/ipv6/ip6_icmp.c 5.16 5.23 ./net/ipv6/ip6_input.c 6.1 5.93 ./net/ipv6/ip6_offload.c 5.75 5.42 ./net/ipv6/ip6_output.c 6.8 6.76 ./net/ipv6/ipv6_sockglue.c 5.92 6.15 ./net/ipv6/mcast.c 5.81 6.16 ./net/ipv6/mcast_snoop.c 4.41 4.92 ./net/ipv6/ndisc.c 5.68 5.83 ./net/ipv6/netfilter.c 6.32 5.95 ./net/ipv6/netfilter/ip6_tables.c 5.88 5.68 ./net/ipv6/netfilter/ip6t_REJECT.c 5.68 5.50 ./net/ipv6/netfilter/ip6t_ipv6header.c 5.19 5.62 ./net/ipv6/netfilter/ip6table_filter.c 5.17 5.54 ./net/ipv6/netfilter/ip6table_mangle.c 5.58 5.45 ./net/ipv6/netfilter/nf_conntrack_reasm.c 5.5 5.63 ./net/ipv6/netfilter/nf_defrag_ipv6_hooks.c 6.12 5.73 ./net/ipv6/netfilter/nf_reject_ipv6.c 6.2 5.63 ./net/ipv6/output_core.c 4.68 4.90 ./net/ipv6/ping.c 4.97 5.10 ./net/ipv6/proc.c 5.2 5.46 ./net/ipv6/protocol.c 4.22 4.70 ./net/ipv6/raw.c 5.99 6.20 ./net/ipv6/reassembly.c 5.29 5.69 ./net/ipv6/route.c 6.75 6.42 ./net/ipv6/rpl.c 4.47 4.60 ./net/ipv6/seg6.c 4.58 4.82 ./net/ipv6/sit.c 5.25 5.52 ./net/ipv6/syncookies.c 5.52 5.79 ./net/ipv6/sysctl_net_ipv6.c 4.75 4.44 ./net/ipv6/tcp_ipv6.c 6.73 7.28 ./net/ipv6/tcpv6_offload.c 5.47 5.97 ./net/ipv6/udp.c 6.17 6.11 ./net/ipv6/udp_offload.c 4.64 4.80 ./net/ipv6/udplite.c 5.61 5.99 ./net/ipv6/xfrm6_input.c 5.71 5.72 ./net/ipv6/xfrm6_output.c 5.52 5.48 ./net/ipv6/xfrm6_policy.c 5.79 5.38 ./net/ipv6/xfrm6_protocol.c 4.98 5.23 ./net/ipv6/xfrm6_state.c 4.79 5.16 ./net/mac80211/aead_api.c 2.78 2.78 ./net/mac80211/aes_cmac.c 4.48 4.20 ./net/mac80211/aes_gmac.c 4.12 4.17 ./net/mac80211/agg-rx.c 7.85 7.68 ./net/mac80211/agg-tx.c 7.82 7.88 ./net/mac80211/airtime.c 15.32 15.78 ./net/mac80211/cfg.c 8.47 8.18 ./net/mac80211/chan.c 7.67 7.61 ./net/mac80211/driver-ops.c 7.29 7.48 ./net/mac80211/eht.c 4.66 4.92 ./net/mac80211/ethtool.c 7.67 7.62 ./net/mac80211/fils_aead.c 5.77 4.91 ./net/mac80211/he.c 4.5 4.63 ./net/mac80211/ht.c 8.24 7.89 ./net/mac80211/ibss.c 8.43 7.87 ./net/mac80211/iface.c 8.44 8.49 ./net/mac80211/key.c 8.5 8.81 ./net/mac80211/led.c 4.94 5.72 ./net/mac80211/link.c 7.69 8.88 ./net/mac80211/main.c 8.61 8.89 ./net/mac80211/michael.c 4.37 4.17 ./net/mac80211/mlme.c 9.57 8.55 ./net/mac80211/ocb.c 8.29 7.77 ./net/mac80211/offchannel.c 8.76 7.60 ./net/mac80211/parse.c 8.36 8.11 ./net/mac80211/pm.c 8.17 8.57 ./net/mac80211/rate.c 7.9 8.19 ./net/mac80211/rc80211_minstrel_ht.c 10.31 10.43 ./net/mac80211/rx.c 8.27 8.39 ./net/mac80211/s1g.c 8.65 7.83 ./net/mac80211/scan.c 8.82 8.34 ./net/mac80211/spectmgmt.c 4.83 4.79 ./net/mac80211/sta_info.c 8.2 8.21 ./net/mac80211/status.c 7.88 8.26 ./net/mac80211/tdls.c 8.22 7.58 ./net/mac80211/tkip.c 7.64 7.79 ./net/mac80211/trace.c 10.25 10.37 ./net/mac80211/tx.c 8.84 9.10 ./net/mac80211/util.c 8.73 8.61 ./net/mac80211/vht.c 8.18 8.33 ./net/mac80211/wbrf.c 4.46 4.46 ./net/mac80211/wep.c 4.51 4.32 ./net/mac80211/wme.c 5.69 5.74 ./net/mac80211/wpa.c 4.69 4.79 ./net/netfilter/core.c 5.65 5.47 ./net/netfilter/nf_conntrack_acct.c 5.38 5.93 ./net/netfilter/nf_conntrack_core.c 5.42 5.65 ./net/netfilter/nf_conntrack_expect.c 5.1 5.32 ./net/netfilter/nf_conntrack_extend.c 5.27 5.26 ./net/netfilter/nf_conntrack_ftp.c 5.85 5.78 ./net/netfilter/nf_conntrack_helper.c 5.24 5.35 ./net/netfilter/nf_conntrack_irc.c 5.14 5.23 ./net/netfilter/nf_conntrack_netlink.c 5.29 5.13 ./net/netfilter/nf_conntrack_proto.c 5.85 6.86 ./net/netfilter/nf_conntrack_proto_generic.c 4.99 4.98 ./net/netfilter/nf_conntrack_proto_icmp.c 5.89 4.81 ./net/netfilter/nf_conntrack_proto_icmpv6.c 5.72 6.29 ./net/netfilter/nf_conntrack_proto_tcp.c 6.33 6.29 ./net/netfilter/nf_conntrack_proto_udp.c 5.51 5.53 ./net/netfilter/nf_conntrack_seqadj.c 5.71 5.57 ./net/netfilter/nf_conntrack_sip.c 5.85 5.93 ./net/netfilter/nf_conntrack_standalone.c 5.15 5.30 ./net/netfilter/nf_log.c 4.4 4.72 ./net/netfilter/nf_log_syslog.c 5.74 5.65 ./net/netfilter/nf_log_syslog.mod.c 2.6 2.48 ./net/netfilter/nf_nat_core.c 5.26 5.44 ./net/netfilter/nf_nat_ftp.c 5.31 5.12 ./net/netfilter/nf_nat_helper.c 5.48 5.98 ./net/netfilter/nf_nat_irc.c 5.15 5.27 ./net/netfilter/nf_nat_masquerade.c 5.67 5.39 ./net/netfilter/nf_nat_proto.c 5.9 5.50 ./net/netfilter/nf_nat_sip.c 5.14 5.45 ./net/netfilter/nf_queue.c 5.53 5.72 ./net/netfilter/nf_sockopt.c 3.98 4.37 ./net/netfilter/nfnetlink.c 4.45 4.28 ./net/netfilter/nfnetlink_log.c 5.52 5.83 ./net/netfilter/utils.c 5.43 5.80 ./net/netfilter/x_tables.c 5.73 5.62 ./net/netfilter/xt_CONNSECMARK.c 5.32 5.43 ./net/netfilter/xt_LOG.c 5.67 5.67 ./net/netfilter/xt_LOG.mod.c 2.92 2.31 ./net/netfilter/xt_MASQUERADE.c 4.87 4.80 ./net/netfilter/xt_MASQUERADE.mod.c 2.71 2.43 ./net/netfilter/xt_NFLOG.c 3.64 3.90 ./net/netfilter/xt_SECMARK.c 3.91 4.22 ./net/netfilter/xt_TCPMSS.c 5.64 5.64 ./net/netfilter/xt_addrtype.c 5.83 6.19 ./net/netfilter/xt_addrtype.mod.c 2.71 2.79 ./net/netfilter/xt_conntrack.c 5.1 4.82 ./net/netfilter/xt_mark.c 3.77 3.90 ./net/netfilter/xt_mark.mod.c 2.57 2.65 ./net/netfilter/xt_nat.c 4.9 5.98 ./net/netfilter/xt_nat.mod.c 2.54 2.64 ./net/netfilter/xt_policy.c 5.21 5.16 ./net/netfilter/xt_state.c 5.15 5.21 ./net/netfilter/xt_tcpudp.c 5.29 5.51 ./net/netlabel/netlabel_addrlist.c 4.62 4.81 ./net/netlabel/netlabel_calipso.c 4.89 4.48 ./net/netlabel/netlabel_cipso_v4.c 4.63 4.53 ./net/netlabel/netlabel_domainhash.c 4.4 4.35 ./net/netlabel/netlabel_kapi.c 5.95 4.97 ./net/netlabel/netlabel_mgmt.c 5.16 4.99 ./net/netlabel/netlabel_unlabeled.c 4.98 4.88 ./net/netlabel/netlabel_user.c 4.42 4.51 ./net/netlink/af_netlink.c 5.12 5.57 ./net/netlink/genetlink.c 4.33 4.33 ./net/netlink/policy.c 3.53 3.87 ./net/packet/af_packet.c 5.44 6.13 ./net/rfkill/core.c 2.72 2.58 ./net/rfkill/input.c 2.9 2.96 ./net/sched/act_api.c 4.96 4.93 ./net/sched/cls_api.c 5.71 5.90 ./net/sched/cls_cgroup.c 4.73 4.84 ./net/sched/ematch.c 4.38 4.45 ./net/sched/sch_api.c 5.39 5.46 ./net/sched/sch_blackhole.c 3.95 4.30 ./net/sched/sch_fifo.c 4.31 4.22 ./net/sched/sch_frag.c 5.45 4.95 ./net/sched/sch_generic.c 5.85 5.91 ./net/sched/sch_mq.c 4.13 4.54 ./net/socket.c 5.97 6.18 ./net/sunrpc/addr.c 4.41 4.56 ./net/sunrpc/auth.c 7.6 7.44 ./net/sunrpc/auth_gss/auth_gss.c 5.62 5.38 ./net/sunrpc/auth_gss/gss_generic_token.c 3.68 3.61 ./net/sunrpc/auth_gss/gss_krb5_crypto.c 3.64 3.73 ./net/sunrpc/auth_gss/gss_krb5_keys.c 3.43 3.44 ./net/sunrpc/auth_gss/gss_krb5_mech.c 3.37 3.51 ./net/sunrpc/auth_gss/gss_krb5_seal.c 3.31 3.17 ./net/sunrpc/auth_gss/gss_krb5_unseal.c 3.59 3.32 ./net/sunrpc/auth_gss/gss_krb5_wrap.c 3.65 3.38 ./net/sunrpc/auth_gss/gss_mech_switch.c 5.32 5.50 ./net/sunrpc/auth_gss/gss_rpc_upcall.c 4.56 4.81 ./net/sunrpc/auth_gss/gss_rpc_xdr.c 4.76 4.78 ./net/sunrpc/auth_gss/svcauth_gss.c 5.7 5.33 ./net/sunrpc/auth_gss/trace.c 5.7 5.82 ./net/sunrpc/auth_null.c 4.6 4.85 ./net/sunrpc/auth_tls.c 4.66 4.63 ./net/sunrpc/auth_unix.c 4.62 4.38 ./net/sunrpc/cache.c 7.4 7.88 ./net/sunrpc/clnt.c 7.98 7.67 ./net/sunrpc/rpc_pipe.c 5.3 5.81 ./net/sunrpc/rpcb_clnt.c 7.56 7.65 ./net/sunrpc/sched.c 9.63 9.15 ./net/sunrpc/socklib.c 4.17 4.61 ./net/sunrpc/stats.c 7.93 7.61 ./net/sunrpc/sunrpc_syms.c 4.93 4.76 ./net/sunrpc/svc.c 7.38 7.75 ./net/sunrpc/svc_xprt.c 7.59 7.53 ./net/sunrpc/svcauth.c 7.52 7.60 ./net/sunrpc/svcauth_unix.c 7.56 7.65 ./net/sunrpc/svcsock.c 8.92 8.55 ./net/sunrpc/sysctl.c 3.66 3.22 ./net/sunrpc/sysfs.c 4.53 4.86 ./net/sunrpc/timer.c 4.74 4.54 ./net/sunrpc/xdr.c 8.2 7.92 ./net/sunrpc/xprt.c 7.99 7.60 ./net/sunrpc/xprtmultipath.c 4.92 4.99 ./net/sunrpc/xprtsock.c 9.24 8.97 ./net/sysctl_net.c 4.62 4.92 ./net/unix/af_unix.c 4.96 4.93 ./net/unix/garbage.c 4.78 4.25 ./net/unix/sysctl_net_unix.c 4.17 4.19 ./net/wireless/ap.c 8.52 8.46 ./net/wireless/chan.c 8.5 8.86 ./net/wireless/core.c 9.44 8.75 ./net/wireless/ethtool.c 8.63 8.48 ./net/wireless/ibss.c 8.63 8.20 ./net/wireless/mesh.c 8.79 8.46 ./net/wireless/mlme.c 8.56 9.80 ./net/wireless/nl80211.c 10.6 10.63 ./net/wireless/ocb.c 8.33 8.48 ./net/wireless/pmsr.c 8.51 8.33 ./net/wireless/radiotap.c 4.52 4.36 ./net/wireless/reg.c 9.39 9.11 ./net/wireless/scan.c 9.74 8.99 ./net/wireless/shipped-certs.c 4.45 4.28 ./net/wireless/sme.c 8.29 8.31 ./net/wireless/sysfs.c 8.46 8.24 ./net/wireless/trace.c 10.98 11.55 ./net/wireless/util.c 9.28 8.97 ./net/xfrm/xfrm_algo.c 5.53 5.48 ./net/xfrm/xfrm_device.c 5.99 5.35 ./net/xfrm/xfrm_hash.c 2.68 2.72 ./net/xfrm/xfrm_input.c 5.14 5.11 ./net/xfrm/xfrm_nat_keepalive.c 5.65 4.79 ./net/xfrm/xfrm_output.c 4.98 5.41 ./net/xfrm/xfrm_policy.c 5.73 5.49 ./net/xfrm/xfrm_replay.c 5.96 5.18 ./net/xfrm/xfrm_state.c 5.56 5.57 ./net/xfrm/xfrm_sysctl.c 5.39 4.86 ./net/xfrm/xfrm_user.c 4.98 5.35 ./scripts/kconfig/conf.c 0.16 0.13 ./scripts/kconfig/confdata.c 0.18 0.15 ./scripts/kconfig/expr.c 0.17 0.13 ./scripts/kconfig/lexer.lex.c 0.31 0.29 ./scripts/kconfig/menu.c 0.11 0.11 ./scripts/kconfig/parser.tab.c 0.15 0.14 ./scripts/kconfig/preprocess.c 0.11 0.10 ./scripts/kconfig/symbol.c 0.71 0.74 ./scripts/kconfig/util.c 0.14 0.17 ./scripts/mod/empty.c 0.39 0.42 ./scripts/mod/file2alias.c 0.25 0.24 ./scripts/mod/modpost.c 0.27 0.25 ./scripts/mod/sumversion.c 0.14 0.13 ./scripts/mod/symsearch.c 0.1 0.10 ./security/commoncap.c 3.87 4.80 ./security/device_cgroup.c 4.26 4.24 ./security/integrity/iint.c 3.6 3.40 ./security/integrity/integrity_audit.c 3.65 3.57 ./security/keys/compat.c 3.59 3.57 ./security/keys/gc.c 3.43 3.45 ./security/keys/key.c 3.46 3.43 ./security/keys/keyctl.c 3.64 3.66 ./security/keys/keyctl_pkey.c 2.87 2.83 ./security/keys/keyring.c 3.94 3.94 ./security/keys/permission.c 3.36 3.27 ./security/keys/proc.c 2.87 2.73 ./security/keys/process_keys.c 3.62 3.62 ./security/keys/request_key.c 3.42 3.36 ./security/keys/request_key_auth.c 2.89 2.99 ./security/keys/sysctl.c 2.78 2.94 ./security/keys/user_defined.c 2.88 2.67 ./security/lsm_audit.c 4.98 5.16 ./security/lsm_syscalls.c 3.75 3.87 ./security/min_addr.c 3.26 3.25 ./security/security.c 4.14 4.44 ./security/selinux/avc.c 5.53 5.25 ./security/selinux/hooks.c 6.92 7.46 ./security/selinux/netif.c 5.18 5.31 ./security/selinux/netlabel.c 5.25 5.27 ./security/selinux/netlink.c 3.73 3.52 ./security/selinux/netnode.c 5.1 5.32 ./security/selinux/netport.c 4.87 5.21 ./security/selinux/nlmsgtab.c 4.54 4.26 ./security/selinux/selinuxfs.c 5.25 5.20 ./security/selinux/ss/avtab.c 4.2 4.44 ./security/selinux/ss/conditional.c 4.59 4.21 ./security/selinux/ss/context.c 4.5 4.24 ./security/selinux/ss/ebitmap.c 4.36 4.29 ./security/selinux/ss/hashtab.c 1.61 1.68 ./security/selinux/ss/mls.c 4.51 4.61 ./security/selinux/ss/policydb.c 4.54 4.54 ./security/selinux/ss/services.c 5.65 5.72 ./security/selinux/ss/sidtab.c 4.65 4.59 ./security/selinux/ss/symtab.c 0.86 0.71 ./security/selinux/status.c 4.82 4.80 ./sound/core/control.c 3.23 3.13 ./sound/core/ctljack.c 2.75 2.56 ./sound/core/device.c 2.66 2.75 ./sound/core/hrtimer.c 2.69 2.71 ./sound/core/hwdep.c 2.84 2.82 ./sound/core/info.c 2.91 2.94 ./sound/core/init.c 3.86 2.77 ./sound/core/isadma.c 2.6 2.75 ./sound/core/jack.c 3.16 2.97 ./sound/core/memalloc.c 3.31 2.93 ./sound/core/memory.c 3.38 2.85 ./sound/core/misc.c 3.22 3.24 ./sound/core/pcm.c 3.15 3.27 ./sound/core/pcm_lib.c 3.42 3.94 ./sound/core/pcm_memory.c 2.98 3.15 ./sound/core/pcm_misc.c 3.28 3.24 ./sound/core/pcm_native.c 3.47 3.60 ./sound/core/pcm_timer.c 2.97 2.97 ./sound/core/seq/seq.c 2.8 2.89 ./sound/core/seq/seq_clientmgr.c 3.29 3.45 ./sound/core/seq/seq_dummy.c 2.81 2.72 ./sound/core/seq/seq_fifo.c 2.75 2.65 ./sound/core/seq/seq_info.c 2.72 2.71 ./sound/core/seq/seq_lock.c 2.58 2.76 ./sound/core/seq/seq_memory.c 2.98 2.89 ./sound/core/seq/seq_ports.c 2.9 2.80 ./sound/core/seq/seq_prioq.c 2.82 2.79 ./sound/core/seq/seq_queue.c 2.77 2.89 ./sound/core/seq/seq_system.c 2.55 2.67 ./sound/core/seq/seq_timer.c 2.86 2.99 ./sound/core/seq_device.c 2.77 2.71 ./sound/core/sound.c 2.83 2.77 ./sound/core/timer.c 2.82 2.86 ./sound/core/vmaster.c 2.79 2.75 ./sound/hda/array.c 3.19 3.27 ./sound/hda/hda_bus_type.c 3.14 3.31 ./sound/hda/hdac_bus.c 3.25 3.10 ./sound/hda/hdac_component.c 3.22 3.27 ./sound/hda/hdac_controller.c 3.25 3.40 ./sound/hda/hdac_device.c 3.3 3.35 ./sound/hda/hdac_i915.c 3.17 3.26 ./sound/hda/hdac_regmap.c 3.41 3.17 ./sound/hda/hdac_stream.c 3.26 3.43 ./sound/hda/hdac_sysfs.c 3.2 3.30 ./sound/hda/hdmi_chmap.c 3.25 3.34 ./sound/hda/intel-dsp-config.c 3.53 3.14 ./sound/hda/intel-nhlt.c 2.92 2.96 ./sound/hda/intel-sdw-acpi.c 3.83 3.10 ./sound/hda/trace.c 3.84 4.45 ./sound/last.c 2.75 2.61 ./sound/pci/hda/hda_auto_parser.c 3.31 3.35 ./sound/pci/hda/hda_bind.c 3.28 3.20 ./sound/pci/hda/hda_codec.c 3.38 3.36 ./sound/pci/hda/hda_controller.c 4.72 4.13 ./sound/pci/hda/hda_hwdep.c 3.37 3.15 ./sound/pci/hda/hda_intel.c 4.54 4.64 ./sound/pci/hda/hda_jack.c 3.35 3.24 ./sound/pci/hda/hda_proc.c 2.98 3.30 ./sound/pci/hda/hda_sysfs.c 2.97 2.95 ./sound/sound_core.c 1.91 2.43"},{"location":"Benchmarks/single-source-results/","title":"LLVM Single Source","text":"HighLevel with Unsupported HighLevel LLVM Binary TOTAL 1777/1831 1711/1831 725/1831 522/1831 2002-04-17-PrintfChar 0.0166 0.0212 0.0231 0.0244 2002-05-02-ArgumentTest 0.0159 0.0173 0.025 0.0274 2002-05-02-CastTest 0.0379 0.0423 0.3452 FAIL 2002-05-02-CastTest1 0.0177 0.025 0.0233 0.0262 2002-05-02-CastTest2 0.0368 0.0391 0.264 FAIL 2002-05-02-CastTest3 0.0192 0.02 0.0293 0.0225 2002-05-02-ManyArguments 0.0277 0.0306 0.0778 FAIL 2002-05-03-NotTest 0.026 0.026 0.0857 FAIL 2002-05-19-DivTest 0.024 0.0268 0.0544 0.0605 2002-08-02-CastTest 0.031 0.0261 0.0657 FAIL 2002-08-02-CastTest2 0.0205 0.018 0.0292 0.0254 2002-08-19-CodegenBug 0.0351 0.0428 0.2698 FAIL 2002-10-09-ArrayResolution 0.0333 0.0241 FAIL FAIL 2002-10-12-StructureArgs 0.032 0.0284 0.0776 FAIL 2002-10-12-StructureArgsSimple 0.0293 0.0296 0.0761 FAIL 2002-10-13-BadLoad 0.0162 0.0166 0.0215 0.0269 2002-12-13-MishaTest 0.0311 0.0297 FAIL FAIL 2003-04-22-Switch 0.0263 0.0283 FAIL FAIL 2003-05-02-DependentPHI 0.0256 0.0302 FAIL FAIL 2003-05-07-VarArgs 0.0315 0.0293 FAIL FAIL 2003-05-12-MinIntProblem 0.0281 0.0282 0.0711 FAIL 2003-05-14-AtExit 0.0404 0.0373 FAIL FAIL 2003-05-26-Shorts 0.0325 0.0382 0.2235 FAIL 2003-05-31-CastToBool 0.028 0.025 0.1013 FAIL 2003-05-31-LongShifts 0.0156 0.0207 0.0327 FAIL 2003-07-06-IntOverflow 0.0294 0.0302 0.1077 FAIL 2003-07-08-BitOpsTest 0.0244 0.0296 0.0911 FAIL 2003-07-09-LoadShorts 0.0408 0.0425 0.4349 FAIL 2003-07-09-SignedArgs 0.0361 0.0258 FAIL FAIL 2003-07-10-SignConversions 0.0278 0.0299 0.0836 FAIL 2003-08-05-CastFPToUint 0.0386 0.0466 FAIL FAIL 2003-08-11-VaListArg 0.0251 0.031 FAIL FAIL 2003-08-20-FoldBug 0.0277 0.0256 0.0722 FAIL 2003-09-18-BitFieldTest 0.0285 0.0287 0.0732 FAIL 2003-10-13-SwitchTest 0.0249 0.0294 FAIL FAIL 2003-10-29-ScalarReplBug 0.0268 0.0258 FAIL FAIL 2004-02-02-NegativeZero 0.0177 0.0161 0.0238 FAIL 2004-06-20-StaticBitfieldInit 0.03 0.0281 0.0735 FAIL 2004-11-28-GlobalBoolLayout 0.0419 0.0433 FAIL FAIL 2005-05-11-Popcount-ffs-fls 0.0327 0.0334 0.2302 FAIL 2005-05-12-Int64ToFP 0.0273 0.029 0.0733 FAIL 2005-05-13-SDivTwo 0.0255 0.0309 0.0705 FAIL 2005-07-15-Bitfield-ABI 0.0221 0.0188 FAIL FAIL 2005-07-17-INT-To-FP 0.0311 0.0248 0.0987 FAIL 2005-11-29-LongSwitch 0.0222 0.0304 FAIL FAIL 2006-01-23-UnionInit 0.0304 0.0363 FAIL FAIL 2006-01-29-SimpleIndirectCall 0.0248 0.031 FAIL FAIL 2006-02-04-DivRem 0.0268 0.0219 0.0837 FAIL 2006-12-01-float_varg 0.0269 0.0243 0.0714 FAIL 2006-12-04-DynAllocAndRestore 0.02 FAIL FAIL FAIL 2006-12-07-Compare64BitConstant 0.0225 0.0252 0.0749 FAIL 2006-12-11-LoadConstants 0.0438 0.0313 0.4323 FAIL 2007-01-04-KNR-Args 0.0262 0.0257 FAIL FAIL 2007-03-02-VaCopy 0.0261 0.025 FAIL FAIL 2007-04-10-BitfieldTest 0.0449 0.0425 0.2653 FAIL 2007-04-25-weak 0.0153 0.0165 FAIL FAIL 2008-04-18-LoopBug 0.0201 0.0206 FAIL FAIL 2008-04-20-LoopBug2 0.0173 0.018 FAIL FAIL 2008-07-13-InlineSetjmp 0.0245 0.031 FAIL FAIL 2009-04-16-BitfieldInitialization 0.025 0.0333 FAIL FAIL 2009-12-07-StructReturn 0.0161 0.0248 FAIL FAIL 2010-05-24-BitfieldTest 0.0214 0.0205 0.0197 0.0271 2010-12-08-tls 0.0317 0.0266 0.0711 FAIL 2020-01-06-coverage-001 0.0337 0.0342 FAIL FAIL 2020-01-06-coverage-002 0.0314 0.0318 FAIL FAIL 2020-01-06-coverage-003 0.028 0.0305 0.1019 FAIL 2020-01-06-coverage-004 0.0349 0.0341 FAIL FAIL 2020-01-06-coverage-005 0.0332 0.0326 FAIL FAIL 2020-01-06-coverage-006 0.0295 0.0301 0.0991 FAIL 2020-01-06-coverage-007 0.0257 0.0318 0.1061 FAIL 2020-01-06-coverage-008 0.0314 0.0274 0.1208 FAIL 2020-01-06-coverage-009 0.0267 0.0356 FAIL FAIL 2020-01-06-coverage-010 0.033 0.0318 FAIL FAIL 2mm 0.0974 0.1175 FAIL FAIL 3mm 0.1047 0.1045 FAIL FAIL AtomicOps 0.0295 0.0254 0.0898 FAIL Bubblesort 0.0434 0.0425 0.3582 FAIL DefaultInitDynArrays 0.0212 FAIL FAIL FAIL FloatMM 0.0522 0.0403 0.3498 FAIL FloatPrecision 0.0295 0.0283 0.077 FAIL GCC-C-execute-20000112-1 0.028 0.0273 FAIL FAIL GCC-C-execute-20000113-1 0.0199 0.0209 FAIL FAIL GCC-C-execute-20000121-1 0.0199 0.0191 0.0252 0.0 GCC-C-execute-20000205-1 0.0177 0.0257 0.0278 0.0 GCC-C-execute-20000217-1 0.0159 0.0131 FAIL FAIL GCC-C-execute-20000223-1 0.0186 0.0148 FAIL FAIL GCC-C-execute-20000224-1 0.017 0.0161 0.0256 0.0 GCC-C-execute-20000225-1 0.0194 0.0186 0.0274 0.0 GCC-C-execute-20000227-1 0.0188 0.0158 FAIL FAIL GCC-C-execute-20000313-1 0.0175 0.0171 0.0266 0.0 GCC-C-execute-20000314-1 0.0132 0.0195 FAIL FAIL GCC-C-execute-20000314-2 0.0231 0.0219 FAIL FAIL GCC-C-execute-20000314-3 0.0201 0.017 FAIL FAIL GCC-C-execute-20000402-1 0.032 0.026 FAIL FAIL GCC-C-execute-20000403-1 0.0183 0.0191 FAIL FAIL GCC-C-execute-20000412-1 0.0203 0.018 0.0284 0.0 GCC-C-execute-20000412-2 0.0223 0.018 0.0254 0.0 GCC-C-execute-20000412-3 0.0248 0.0235 FAIL FAIL GCC-C-execute-20000412-4 0.0205 0.0213 0.0248 0.0 GCC-C-execute-20000412-5 0.0177 0.0148 FAIL FAIL GCC-C-execute-20000412-6 0.0178 0.0197 FAIL FAIL GCC-C-execute-20000419-1 0.0162 0.0229 0.0274 0.0 GCC-C-execute-20000422-1 0.0222 0.0162 0.024 0.0 GCC-C-execute-20000503-1 0.0218 0.0207 0.0204 0.0 GCC-C-execute-20000511-1 0.0222 0.02 FAIL FAIL GCC-C-execute-20000519-1 0.0265 0.0215 FAIL FAIL GCC-C-execute-20000519-2 0.0163 0.0178 0.0267 0.0 GCC-C-execute-20000523-1 0.0227 0.0167 0.0284 0.0 GCC-C-execute-20000528-1 0.0173 0.0132 0.0244 0.0 GCC-C-execute-20000603-1 0.0191 0.02 0.0295 0.0 GCC-C-execute-20000605-1 0.0208 0.0239 0.0426 0.0 GCC-C-execute-20000605-2 0.0217 0.0199 0.0679 0.0 GCC-C-execute-20000605-3 0.0158 0.0171 FAIL FAIL GCC-C-execute-20000622-1 0.0174 0.0242 FAIL FAIL GCC-C-execute-20000703-1 0.0176 0.0199 FAIL FAIL GCC-C-execute-20000706-1 0.0181 0.0212 FAIL FAIL GCC-C-execute-20000706-2 0.02 0.0206 FAIL FAIL GCC-C-execute-20000706-3 0.017 0.0194 0.0243 0.0 GCC-C-execute-20000706-4 0.0196 0.0169 0.0265 0.0 GCC-C-execute-20000706-5 0.0278 0.0159 FAIL FAIL GCC-C-execute-20000707-1 0.0181 0.0107 0.028 0.0 GCC-C-execute-20000715-1 0.023 0.0242 0.0381 0.0 GCC-C-execute-20000715-2 0.0187 0.0133 0.032 0.0 GCC-C-execute-20000717-1 0.0207 0.0196 FAIL FAIL GCC-C-execute-20000717-2 0.0161 0.0185 0.0245 0.0 GCC-C-execute-20000717-3 0.0174 0.0192 0.0297 0.0 GCC-C-execute-20000717-4 0.0211 0.0185 0.0246 0.0 GCC-C-execute-20000717-5 0.0189 0.0207 FAIL FAIL GCC-C-execute-20000722-1 0.0236 0.0166 FAIL FAIL GCC-C-execute-20000726-1 0.0206 0.0199 FAIL FAIL GCC-C-execute-20000731-1 0.021 0.0203 FAIL FAIL GCC-C-execute-20000731-2 0.0184 0.0139 0.0205 0.0 GCC-C-execute-20000801-1 0.0214 0.0235 FAIL FAIL GCC-C-execute-20000801-2 0.0185 0.0198 FAIL FAIL GCC-C-execute-20000801-3 0.0248 0.0216 0.0274 0.0 GCC-C-execute-20000801-4 0.0236 0.0211 FAIL FAIL GCC-C-execute-20000808-1 0.02 0.0168 FAIL FAIL GCC-C-execute-20000815-1 0.021 0.0223 FAIL FAIL GCC-C-execute-20000818-1 0.0224 0.0206 FAIL FAIL GCC-C-execute-20000819-1 0.0185 0.0186 FAIL FAIL GCC-C-execute-20000910-1 0.0381 0.0412 FAIL FAIL GCC-C-execute-20000910-2 0.0414 0.0423 0.2128 FAIL GCC-C-execute-20000914-1 0.0213 0.019 FAIL FAIL GCC-C-execute-20000917-1 0.0162 0.0199 FAIL FAIL GCC-C-execute-20001009-1 0.0171 0.0179 0.0216 0.0 GCC-C-execute-20001009-2 0.0207 0.0167 FAIL FAIL GCC-C-execute-20001011-1 0.0131 0.0189 0.0214 0.0 GCC-C-execute-20001013-1 0.0209 0.0224 0.0251 0.0 GCC-C-execute-20001017-1 0.016 0.0138 0.0295 0.0 GCC-C-execute-20001017-2 0.0217 0.0255 FAIL FAIL GCC-C-execute-20001024-1 0.0169 0.0151 FAIL FAIL GCC-C-execute-20001026-1 0.0184 0.0226 FAIL FAIL GCC-C-execute-20001027-1 0.0238 0.0226 0.0243 0.0 GCC-C-execute-20001031-1 0.0194 0.0203 0.0203 0.0 GCC-C-execute-20001101 0.0176 0.0155 FAIL FAIL GCC-C-execute-20001108-1 0.0176 0.0231 0.0234 0.0 GCC-C-execute-20001111-1 0.0239 0.0235 FAIL FAIL GCC-C-execute-20001112-1 0.0135 0.0205 0.0217 0.0 GCC-C-execute-20001124-1 0.0213 0.0216 FAIL FAIL GCC-C-execute-20001130-1 0.0214 0.0207 0.0255 0.0 GCC-C-execute-20001130-2 0.0212 0.0181 FAIL FAIL GCC-C-execute-20001203-1 0.0176 0.0183 FAIL FAIL GCC-C-execute-20001203-2 0.0226 0.0191 FAIL FAIL GCC-C-execute-20001221-1 0.0197 0.0179 0.0205 0.0 GCC-C-execute-20001228-1 0.0191 0.0186 FAIL FAIL GCC-C-execute-20001229-1 0.0147 0.0199 FAIL FAIL GCC-C-execute-20010106-1 0.021 0.0137 FAIL FAIL GCC-C-execute-20010114-1 0.0188 0.0228 0.0239 0.0 GCC-C-execute-20010116-1 0.0226 0.0169 FAIL FAIL GCC-C-execute-20010118-1 0.0206 0.0197 0.0323 0.0 GCC-C-execute-20010119-1 0.0182 0.0137 0.0186 FAIL GCC-C-execute-20010123-1 0.0167 0.0179 FAIL FAIL GCC-C-execute-20010129-1 0.0216 0.0161 FAIL FAIL GCC-C-execute-20010206-1 0.0172 0.0161 0.0292 0.0 GCC-C-execute-20010221-1 0.016 0.0166 0.0276 0.0 GCC-C-execute-20010222-1 0.0204 0.0191 0.0288 0.0 GCC-C-execute-20010224-1 0.0163 0.0163 FAIL FAIL GCC-C-execute-20010325-1 0.0206 0.0178 FAIL FAIL GCC-C-execute-20010329-1 0.018 0.0153 FAIL FAIL GCC-C-execute-20010403-1 0.0189 0.0175 FAIL FAIL GCC-C-execute-20010409-1 0.0217 0.019 FAIL FAIL GCC-C-execute-20010422-1 0.0151 0.0204 0.03 0.0 GCC-C-execute-20010518-1 0.018 0.0216 0.0301 0.0 GCC-C-execute-20010518-2 0.0204 0.0205 FAIL FAIL GCC-C-execute-20010520-1 0.018 0.0159 0.0266 0.0 GCC-C-execute-20010604-1 0.0189 0.0173 FAIL FAIL GCC-C-execute-20010605-2 0.018 0.0246 FAIL FAIL GCC-C-execute-20010711-1 0.0201 0.0216 0.0268 0.0 GCC-C-execute-20010717-1 0.0144 0.018 0.023 0.0 GCC-C-execute-20010723-1 0.0186 0.0196 FAIL FAIL GCC-C-execute-20010904-1 0.0171 0.0192 FAIL FAIL GCC-C-execute-20010904-2 0.016 0.0172 FAIL FAIL GCC-C-execute-20010910-1 0.024 0.0198 0.0336 0.0 GCC-C-execute-20010915-1 0.0199 0.0162 FAIL FAIL GCC-C-execute-20010924-1 0.023 0.0227 FAIL FAIL GCC-C-execute-20010925-1 0.0185 0.0228 FAIL FAIL GCC-C-execute-20011008-3 0.0206 0.0195 FAIL FAIL GCC-C-execute-20011019-1 0.0209 0.0195 FAIL FAIL GCC-C-execute-20011024-1 0.0204 0.0225 0.0312 0.0 GCC-C-execute-20011109-1 0.019 0.0167 FAIL FAIL GCC-C-execute-20011109-2 0.0187 0.0171 0.0273 0.0 GCC-C-execute-20011113-1 0.0187 0.0191 FAIL FAIL GCC-C-execute-20011114-1 0.0159 0.0186 FAIL FAIL GCC-C-execute-20011115-1 0.0202 0.0206 FAIL FAIL GCC-C-execute-20011121-1 0.016 0.0196 0.018 FAIL GCC-C-execute-20011126-1 0.0143 0.021 0.0241 0.0 GCC-C-execute-20011126-2 0.0166 0.0248 FAIL FAIL GCC-C-execute-20011128-1 0.0209 0.016 FAIL FAIL GCC-C-execute-20011217-1 0.021 0.0172 FAIL FAIL GCC-C-execute-20011219-1 0.0161 0.0208 FAIL FAIL GCC-C-execute-20011223-1 0.0131 0.0167 FAIL FAIL GCC-C-execute-20020103-1 0.0232 0.0196 0.0223 0.0 GCC-C-execute-20020108-1 0.0517 0.0534 0.4302 0.0 GCC-C-execute-20020118-1 0.0204 0.0155 FAIL FAIL GCC-C-execute-20020127-1 0.0153 0.0157 0.0287 0.0 GCC-C-execute-20020129-1 0.0157 0.0151 FAIL FAIL GCC-C-execute-20020201-1 0.022 0.0191 0.0344 0.0 GCC-C-execute-20020206-1 0.0126 0.0228 FAIL FAIL GCC-C-execute-20020206-2 0.0248 0.0205 FAIL FAIL GCC-C-execute-20020213-1 0.0165 0.0189 FAIL FAIL GCC-C-execute-20020215-1 0.0169 0.0188 FAIL FAIL GCC-C-execute-20020216-1 0.0135 0.0209 FAIL FAIL GCC-C-execute-20020219-1 0.0194 0.0197 0.0267 0.0 GCC-C-execute-20020225-1 0.0219 0.0157 0.0189 0.0 GCC-C-execute-20020225-2 0.0172 0.0198 FAIL FAIL GCC-C-execute-20020226-1 0.0247 0.0319 0.1108 FAIL GCC-C-execute-20020227-1 0.0177 0.0177 FAIL FAIL GCC-C-execute-20020307-1 0.0269 0.0187 0.0941 0.0 GCC-C-execute-20020314-1 0.0132 0.016 FAIL FAIL GCC-C-execute-20020320-1 0.0221 0.0179 FAIL FAIL GCC-C-execute-20020321-1 0.0189 0.019 0.026 0.0 GCC-C-execute-20020328-1 0.0219 0.0164 FAIL FAIL GCC-C-execute-20020402-1 0.0177 0.0245 0.0286 0.0 GCC-C-execute-20020402-2 0.0237 0.0236 0.063 0.0 GCC-C-execute-20020402-3 0.0163 0.0242 0.036 0.0 GCC-C-execute-20020404-1 0.0184 0.0211 FAIL FAIL GCC-C-execute-20020406-1 0.0227 0.0212 0.0581 0.0 GCC-C-execute-20020411-1 0.0182 0.0209 FAIL FAIL GCC-C-execute-20020413-1 0.0199 0.0191 FAIL FAIL GCC-C-execute-20020418-1 0.0108 0.0185 FAIL FAIL GCC-C-execute-20020423-1 0.0206 0.0218 0.0333 0.0 GCC-C-execute-20020503-1 0.0201 0.0149 FAIL FAIL GCC-C-execute-20020506-1 0.034 0.0249 FAIL FAIL GCC-C-execute-20020508-1 0.0313 0.0262 0.1112 FAIL GCC-C-execute-20020508-2 0.0297 0.035 0.1126 FAIL GCC-C-execute-20020508-3 0.0321 0.0283 0.1156 FAIL GCC-C-execute-20020510-1 0.024 0.0235 0.0405 0.0 GCC-C-execute-20020529-1 0.0203 0.0222 FAIL FAIL GCC-C-execute-20020611-1 0.0138 0.0208 FAIL FAIL GCC-C-execute-20020614-1 0.0206 0.0198 0.0325 0.0 GCC-C-execute-20020615-1 0.017 0.0208 FAIL FAIL GCC-C-execute-20020619-1 0.0173 0.0215 FAIL FAIL GCC-C-execute-20020716-1 0.0146 0.0237 FAIL FAIL GCC-C-execute-20020720-1 0.0248 0.0186 FAIL 0.0 GCC-C-execute-20020805-1 0.0196 0.0229 0.0247 0.0 GCC-C-execute-20020810-1 0.0158 0.0204 FAIL FAIL GCC-C-execute-20020819-1 0.013 0.0184 0.026 0.0 GCC-C-execute-20020904-1 0.0187 0.0183 0.0275 0.0 GCC-C-execute-20020911-1 0.016 0.024 0.027 0.0 GCC-C-execute-20020916-1 0.0169 0.0211 0.0279 0.0 GCC-C-execute-20020920-1 0.0187 0.0222 FAIL FAIL GCC-C-execute-20021010-1 0.0176 0.0163 FAIL FAIL GCC-C-execute-20021010-2 0.0282 0.0425 FAIL FAIL GCC-C-execute-20021011-1 0.018 0.0233 FAIL FAIL GCC-C-execute-20021015-1 0.0178 0.0248 FAIL FAIL GCC-C-execute-20021024-1 0.0163 0.026 FAIL FAIL GCC-C-execute-20021111-1 0.0182 0.0218 FAIL FAIL GCC-C-execute-20021113-1 0.0188 0.0164 FAIL FAIL GCC-C-execute-20021118-1 0.0144 0.0245 0.0308 0.0 GCC-C-execute-20021118-2 0.013 0.0178 FAIL FAIL GCC-C-execute-20021118-3 0.0179 0.0203 0.0278 0.0 GCC-C-execute-20021119-1 0.0133 0.0176 0.0267 0.0 GCC-C-execute-20021120-1 0.0329 0.028 FAIL FAIL GCC-C-execute-20021120-2 0.0244 0.0204 0.0263 0.0 GCC-C-execute-20021120-3 0.0222 0.0183 0.0297 0.0 GCC-C-execute-20021204-1 0.0188 0.0203 FAIL FAIL GCC-C-execute-20021219-1 0.017 0.0237 FAIL FAIL GCC-C-execute-20030105-1 0.015 0.0188 0.0246 FAIL GCC-C-execute-20030109-1 0.0152 0.0181 FAIL FAIL GCC-C-execute-20030117-1 0.0202 0.0212 FAIL FAIL GCC-C-execute-20030120-1 0.0201 0.0205 FAIL FAIL GCC-C-execute-20030120-2 0.0164 0.0159 0.0237 0.0 GCC-C-execute-20030125-1 0.0187 0.0221 FAIL FAIL GCC-C-execute-20030128-1 0.0195 0.0135 FAIL FAIL GCC-C-execute-20030203-1 0.0195 0.0181 FAIL FAIL GCC-C-execute-20030209-1 0.0203 0.0208 0.0194 0.0 GCC-C-execute-20030216-1 0.0146 0.0139 0.0235 0.0 GCC-C-execute-20030218-1 0.0162 0.0138 FAIL FAIL GCC-C-execute-20030221-1 0.0197 0.0213 FAIL FAIL GCC-C-execute-20030222-1 0.0163 0.0215 FAIL FAIL GCC-C-execute-20030224-2 0.021 0.0191 FAIL FAIL GCC-C-execute-20030307-1 0.0154 0.0166 FAIL FAIL GCC-C-execute-20030313-1 0.0178 0.0196 FAIL FAIL GCC-C-execute-20030316-1 0.0196 0.0189 0.021 0.0 GCC-C-execute-20030323-1 0.0177 0.0268 FAIL FAIL GCC-C-execute-20030330-1 0.0127 0.015 FAIL FAIL GCC-C-execute-20030401-1 0.017 0.0154 0.0301 0.0 GCC-C-execute-20030403-1 0.0237 0.0152 0.0235 0.0 GCC-C-execute-20030404-1 0.0163 0.0182 0.0278 0.0 GCC-C-execute-20030408-1 0.018 0.0181 FAIL FAIL GCC-C-execute-20030606-1 0.0206 0.0182 FAIL FAIL GCC-C-execute-20030613-1 0.0203 0.0216 FAIL FAIL GCC-C-execute-20030626-1 0.0201 0.0208 0.0182 0.0 GCC-C-execute-20030626-2 0.0148 0.0128 0.0241 FAIL GCC-C-execute-20030714-1 0.0229 0.0189 FAIL FAIL GCC-C-execute-20030715-1 0.0182 0.012 FAIL FAIL GCC-C-execute-20030717-1 0.0178 0.017 0.0307 FAIL GCC-C-execute-20030718-1 0.0155 0.0175 FAIL FAIL GCC-C-execute-20030811-1 0.018 0.0189 0.0254 FAIL GCC-C-execute-20030821-1 0.0181 0.0185 0.0237 0.0 GCC-C-execute-20030828-1 0.0159 0.0187 0.0278 0.0 GCC-C-execute-20030828-2 0.0149 0.015 FAIL FAIL GCC-C-execute-20030903-1 0.0163 0.0202 FAIL FAIL GCC-C-execute-20030909-1 0.0145 0.0187 FAIL FAIL GCC-C-execute-20030910-1 0.0157 0.0219 FAIL FAIL GCC-C-execute-20030913-1 0.0166 0.0235 0.0261 0.0 GCC-C-execute-20030914-1 0.0161 0.0169 FAIL FAIL GCC-C-execute-20030914-2 0.0156 0.0118 0.0282 0.0 GCC-C-execute-20030916-1 0.0196 0.0162 FAIL FAIL GCC-C-execute-20030920-1 0.0167 0.0198 FAIL FAIL GCC-C-execute-20030928-1 0.019 0.0203 FAIL FAIL GCC-C-execute-20031010-1 0.0171 0.0173 FAIL FAIL GCC-C-execute-20031011-1 0.0169 0.0211 0.0323 0.0 GCC-C-execute-20031012-1 0.0187 0.0157 0.0227 0.0 GCC-C-execute-20031020-1 0.0197 0.0168 0.0302 0.0 GCC-C-execute-20031201-1 0.0205 0.0215 FAIL FAIL GCC-C-execute-20031204-1 0.0227 0.0226 FAIL FAIL GCC-C-execute-20031211-1 0.02 0.018 0.0247 FAIL GCC-C-execute-20031211-2 0.0205 0.0157 FAIL FAIL GCC-C-execute-20031214-1 0.0168 0.0208 0.0281 0.0 GCC-C-execute-20031215-1 0.0172 0.0188 FAIL FAIL GCC-C-execute-20031216-1 0.017 0.0203 0.0277 0.0 GCC-C-execute-20040208-1 0.0194 0.0201 0.027 0.0 GCC-C-execute-20040218-1 0.0175 0.0223 FAIL FAIL GCC-C-execute-20040223-1 0.0314 0.0322 0.18 FAIL GCC-C-execute-20040302-1 0.0149 0.0144 FAIL FAIL GCC-C-execute-20040307-1 0.0208 0.0158 FAIL FAIL GCC-C-execute-20040309-1 0.0158 0.0233 0.0304 0.0 GCC-C-execute-20040311-1 0.017 0.0204 0.0364 0.0 GCC-C-execute-20040313-1 0.0193 0.0209 0.0253 0.0 GCC-C-execute-20040319-1 0.0154 0.0196 0.026 0.0 GCC-C-execute-20040331-1 0.0142 0.0192 FAIL FAIL GCC-C-execute-20040409-1 0.0243 0.0227 0.0374 0.0 GCC-C-execute-20040409-1w 0.0214 0.0178 0.0323 0.0 GCC-C-execute-20040409-2 0.026 0.0227 0.06 0.0 GCC-C-execute-20040409-2w 0.022 0.0222 0.0372 0.0 GCC-C-execute-20040409-3 0.0226 0.0214 0.0328 0.0 GCC-C-execute-20040409-3w 0.0266 0.0255 0.0295 0.0 GCC-C-execute-20040411-1 0.0217 0.0166 FAIL FAIL GCC-C-execute-20040625-1 0.0135 0.0186 0.0287 0.0 GCC-C-execute-20040629-1 0.0643 0.0698 FAIL FAIL GCC-C-execute-20040703-1 0.023 0.0265 FAIL FAIL GCC-C-execute-20040704-1 0.0187 0.0202 FAIL FAIL GCC-C-execute-20040705-1 0.0631 0.0691 FAIL FAIL GCC-C-execute-20040705-2 0.0697 0.0769 FAIL FAIL GCC-C-execute-20040706-1 0.0195 0.0246 0.0228 0.0 GCC-C-execute-20040707-1 0.018 0.013 FAIL FAIL GCC-C-execute-20040709-1 0.0986 0.0988 FAIL FAIL GCC-C-execute-20040709-2 0.0967 0.1001 FAIL FAIL GCC-C-execute-20040709-3 0.0902 0.0943 FAIL FAIL GCC-C-execute-20040805-1 0.0202 0.0207 0.0308 0.0 GCC-C-execute-20040811-1 0.0157 0.0159 FAIL FAIL GCC-C-execute-20040820-1 0.023 0.0266 0.0263 0.0 GCC-C-execute-20040823-1 0.0374 0.0488 FAIL FAIL GCC-C-execute-20040831-1 0.0182 0.0228 0.0244 0.0 GCC-C-execute-20040917-1 0.0201 0.0242 FAIL FAIL GCC-C-execute-20041011-1 0.0564 0.0592 FAIL FAIL GCC-C-execute-20041019-1 0.0202 0.0223 0.0211 0.0 GCC-C-execute-20041112-1 0.0175 0.0182 0.0231 0.0 GCC-C-execute-20041113-1 0.0184 0.025 FAIL FAIL GCC-C-execute-20041114-1 0.0198 0.0239 FAIL 0.0 GCC-C-execute-20041124-1 0.0207 0.0254 FAIL FAIL GCC-C-execute-20041126-1 0.0232 0.0206 0.0269 0.0 GCC-C-execute-20041201-1 0.0197 0.0167 FAIL FAIL GCC-C-execute-20041210-1 0.0224 0.0235 0.0275 0.0 GCC-C-execute-20041212-1 0.0197 0.0187 FAIL FAIL GCC-C-execute-20041213-2 0.0174 0.0175 0.0292 0.0 GCC-C-execute-20041214-1 0.0179 0.0192 FAIL FAIL GCC-C-execute-20041218-1 0.0204 0.0216 FAIL FAIL GCC-C-execute-20050104-1 0.0175 0.0261 0.0291 0.0 GCC-C-execute-20050106-1 0.0204 0.0168 FAIL FAIL GCC-C-execute-20050107-1 0.0155 0.0194 0.0225 0.0 GCC-C-execute-20050111-1 0.0155 0.0204 0.0227 0.0 GCC-C-execute-20050119-1 0.0231 0.0195 0.0304 0.0 GCC-C-execute-20050119-2 0.0168 0.0204 0.0274 0.0 GCC-C-execute-20050121-1 0.0288 0.0268 FAIL FAIL GCC-C-execute-20050124-1 0.0202 0.017 0.0262 0.0 GCC-C-execute-20050125-1 0.0426 0.0341 FAIL FAIL GCC-C-execute-20050131-1 0.044 0.0366 0.2677 FAIL GCC-C-execute-20050203-1 0.0365 0.0337 FAIL FAIL GCC-C-execute-20050215-1 0.019 0.0194 FAIL FAIL GCC-C-execute-20050218-1 0.0198 0.0218 FAIL FAIL GCC-C-execute-20050224-1 0.0189 0.0238 FAIL FAIL GCC-C-execute-20050316-1 0.0209 0.0208 FAIL FAIL GCC-C-execute-20050316-2 0.0247 0.022 FAIL FAIL GCC-C-execute-20050316-3 0.0197 0.0137 FAIL FAIL GCC-C-execute-20050410-1 0.0219 0.0208 0.0224 0.0 GCC-C-execute-20050502-1 0.0181 0.0251 FAIL FAIL GCC-C-execute-20050502-2 0.018 0.0197 FAIL FAIL GCC-C-execute-20050604-1 0.0191 FAIL FAIL FAIL GCC-C-execute-20050607-1 0.0157 0.0177 FAIL FAIL GCC-C-execute-20050613-1 0.016 0.0153 FAIL FAIL GCC-C-execute-20050713-1 0.0187 0.0201 FAIL FAIL GCC-C-execute-20050826-1 0.0151 0.0223 0.0291 0.0 GCC-C-execute-20050826-2 0.0196 0.0215 FAIL FAIL GCC-C-execute-20050929-1 0.0169 0.02 FAIL FAIL GCC-C-execute-20051012-1 0.0208 0.0198 0.0239 0.0 GCC-C-execute-20051021-1 0.0207 0.0201 0.025 0.0 GCC-C-execute-20051104-1 0.02 0.0149 FAIL FAIL GCC-C-execute-20051110-1 0.0178 0.0228 FAIL FAIL GCC-C-execute-20051110-2 0.017 0.0178 FAIL FAIL GCC-C-execute-20051113-1 0.022 0.0183 FAIL FAIL GCC-C-execute-20051215-1 0.0177 0.0159 FAIL FAIL GCC-C-execute-20060102-1 0.019 0.0195 0.0267 0.0 GCC-C-execute-20060110-1 0.0167 0.0129 0.0199 0.0 GCC-C-execute-20060110-2 0.0174 0.0197 0.0273 0.0 GCC-C-execute-20060127-1 0.0159 0.0148 0.0241 0.0 GCC-C-execute-20060412-1 0.0155 0.0151 FAIL FAIL GCC-C-execute-20060420-1 0.0262 FAIL FAIL FAIL GCC-C-execute-20060905-1 0.0188 0.0143 0.024 0.0 GCC-C-execute-20060910-1 0.0197 0.0228 FAIL FAIL GCC-C-execute-20060929-1 0.0198 0.023 FAIL FAIL GCC-C-execute-20060930-1 0.017 0.02 FAIL FAIL GCC-C-execute-20060930-2 0.0188 0.0229 0.0307 FAIL GCC-C-execute-20061031-1 0.0184 0.0202 FAIL FAIL GCC-C-execute-20061101-1 0.0233 0.0186 0.0273 0.0 GCC-C-execute-20061101-2 0.0208 0.0188 0.024 0.0 GCC-C-execute-20070201-1 0.0197 0.0202 FAIL FAIL GCC-C-execute-20070212-1 0.0224 0.0157 0.0202 0.0 GCC-C-execute-20070212-2 0.0199 0.0243 0.0208 0.0 GCC-C-execute-20070212-3 0.0221 0.0207 0.0261 0.0 GCC-C-execute-20070424-1 0.0195 0.0238 FAIL FAIL GCC-C-execute-20070517-1 0.0245 0.0213 FAIL FAIL GCC-C-execute-20070614-1 0.018 0.0164 FAIL FAIL GCC-C-execute-20070623-1 0.0204 0.0179 0.0438 0.0 GCC-C-execute-20070724-1 0.0234 0.0212 FAIL FAIL GCC-C-execute-20070824-1 0.0162 0.0144 FAIL FAIL GCC-C-execute-20071011-1 0.0196 0.0208 0.0316 0.0 GCC-C-execute-20071018-1 0.0198 0.0229 0.0221 FAIL GCC-C-execute-20071029-1 0.0222 0.0202 FAIL FAIL GCC-C-execute-20071030-1 0.0217 0.0213 FAIL FAIL GCC-C-execute-20071108-1 0.0233 0.0207 FAIL FAIL GCC-C-execute-20071120-1 0.0253 0.0196 FAIL FAIL GCC-C-execute-20071202-1 0.02 0.0214 FAIL FAIL GCC-C-execute-20071205-1 0.0156 0.0236 0.0218 0.0 GCC-C-execute-20071210-1 0.022 0.0187 FAIL FAIL GCC-C-execute-20071211-1 0.0178 0.0154 FAIL FAIL GCC-C-execute-20071213-1 0.0186 0.0176 FAIL FAIL GCC-C-execute-20071216-1 0.021 0.0211 0.0291 0.0 GCC-C-execute-20071219-1 0.0249 0.014 0.0372 0.0 GCC-C-execute-20071220-1 0.0153 0.0146 FAIL FAIL GCC-C-execute-20071220-2 0.025 0.013 FAIL FAIL GCC-C-execute-20080117-1 0.0197 0.0179 FAIL FAIL GCC-C-execute-20080122-1 0.0193 0.0223 FAIL FAIL GCC-C-execute-20080222-1 0.02 0.0169 0.0274 0.0 GCC-C-execute-20080408-1 0.0231 0.018 0.0198 0.0 GCC-C-execute-20080424-1 0.0164 0.0199 0.0328 0.0 GCC-C-execute-20080502-1 0.0181 0.0162 FAIL FAIL GCC-C-execute-20080506-1 0.0209 0.0224 0.0258 0.0 GCC-C-execute-20080506-2 0.0212 0.0129 0.0257 0.0 GCC-C-execute-20080519-1 0.0158 0.026 FAIL FAIL GCC-C-execute-20080522-1 0.0168 0.0221 0.0246 0.0 GCC-C-execute-20080529-1 0.0219 0.0203 0.0226 0.0 GCC-C-execute-20080604-1 0.0224 0.0157 FAIL FAIL GCC-C-execute-20080719-1 0.0171 0.023 FAIL FAIL GCC-C-execute-20080813-1 0.0169 0.0185 0.023 0.0 GCC-C-execute-20081103-1 0.0185 0.0232 FAIL FAIL GCC-C-execute-20081112-1 0.0208 0.0207 0.0246 0.0 GCC-C-execute-20081117-1 0.0167 0.0254 FAIL FAIL GCC-C-execute-20081218-1 0.0217 0.0218 0.0345 FAIL GCC-C-execute-20090113-1 0.0192 0.0168 FAIL FAIL GCC-C-execute-20090113-2 0.0249 0.0208 FAIL FAIL GCC-C-execute-20090113-3 0.021 0.0219 FAIL FAIL GCC-C-execute-20090207-1 0.0178 0.0151 0.0272 0.0 GCC-C-execute-20090527-1 0.0185 0.0162 FAIL FAIL GCC-C-execute-20090623-1 0.0169 0.0159 FAIL FAIL GCC-C-execute-20090711-1 0.0184 0.0219 0.0292 0.0 GCC-C-execute-20090814-1 0.0169 0.016 0.0233 0.0 GCC-C-execute-20091229-1 0.0217 0.0147 0.0311 0.0 GCC-C-execute-20100209-1 0.0184 0.0156 0.0237 0.0 GCC-C-execute-20100316-1 0.0195 0.0222 0.0291 0.0 GCC-C-execute-20100416-1 0.019 0.0162 0.0305 0.0 GCC-C-execute-20100430-1 0.0257 0.0183 0.0283 0.0 GCC-C-execute-20100708-1 0.0176 0.0139 FAIL FAIL GCC-C-execute-20100805-1 0.0192 0.0223 0.027 0.0 GCC-C-execute-20100827-1 0.0171 0.0166 FAIL FAIL GCC-C-execute-20101013-1 0.0176 0.0203 0.0285 0.0 GCC-C-execute-20101025-1 0.019 0.0141 FAIL FAIL GCC-C-execute-20110418-1 0.0216 0.027 FAIL FAIL GCC-C-execute-20111208-1 0.0207 0.0225 FAIL FAIL GCC-C-execute-20111212-1 0.0186 0.0266 FAIL FAIL GCC-C-execute-20111227-1 0.0195 0.0228 0.026 0.0 GCC-C-execute-20120105-1 0.0157 0.0217 FAIL FAIL GCC-C-execute-20120111-1 0.0363 0.0375 FAIL FAIL GCC-C-execute-20120207-1 0.0149 0.0209 FAIL FAIL GCC-C-execute-20120427-1 0.0224 0.0172 0.0366 0.0 GCC-C-execute-20120427-2 0.0186 0.0196 0.035 0.0 GCC-C-execute-20120615-1 0.0248 0.022 0.0282 0.0 GCC-C-execute-20120808-1 0.021 0.0183 FAIL FAIL GCC-C-execute-20120817-1 0.0193 0.0208 FAIL FAIL GCC-C-execute-20120919-1 0.0173 0.0205 FAIL FAIL GCC-C-execute-20121108-1 0.0225 0.0198 FAIL FAIL GCC-C-execute-20131127-1 0.0207 0.0151 FAIL FAIL GCC-C-execute-20140212-1 0.0164 0.0151 FAIL FAIL GCC-C-execute-20140212-2 0.0187 0.0186 FAIL FAIL GCC-C-execute-20140326-1 0.0169 0.0191 0.0259 0.0 GCC-C-execute-20140425-1 0.0169 0.0157 0.0267 0.0 GCC-C-execute-20140622-1 0.0173 0.0219 0.0266 0.0 GCC-C-execute-20140828-1 0.0179 0.017 FAIL FAIL GCC-C-execute-20141022-1 0.0179 0.0161 FAIL FAIL GCC-C-execute-20141107-1 0.0171 0.0211 FAIL FAIL GCC-C-execute-20141125-1 0.0169 0.0168 FAIL FAIL GCC-C-execute-20150611-1 0.0119 0.0174 0.0254 0.0 GCC-C-execute-20170111-1 0.0183 0.015 FAIL FAIL GCC-C-execute-20170401-1 0.0195 0.0178 FAIL FAIL GCC-C-execute-20170401-2 0.0193 0.0229 FAIL FAIL GCC-C-execute-20170419-1 0.02 0.0188 0.0277 0.0 GCC-C-execute-20171008-1 0.0218 0.0124 FAIL FAIL GCC-C-execute-20180112-1 0.0216 0.0205 FAIL FAIL GCC-C-execute-20180131-1 0.0157 0.0227 FAIL FAIL GCC-C-execute-20180226-1 0.0176 0.0212 FAIL FAIL GCC-C-execute-20180921-1 0.0204 0.0243 FAIL FAIL GCC-C-execute-20181120-1 0.0188 0.0155 0.0292 FAIL GCC-C-execute-20190228-1 0.0178 0.0192 0.029 0.0 GCC-C-execute-20190820-1 0.0211 0.0259 FAIL FAIL GCC-C-execute-900409-1 0.0201 0.0143 FAIL FAIL GCC-C-execute-920202-1 0.0199 0.0185 FAIL FAIL GCC-C-execute-920302-1 0.0189 0.0164 FAIL FAIL GCC-C-execute-920409-1 0.0187 0.019 0.0271 0.0 GCC-C-execute-920410-1 0.0174 0.019 0.0255 0.0 GCC-C-execute-920411-1 0.0181 0.0177 0.0218 0.0 GCC-C-execute-920428-1 0.0148 0.0186 FAIL FAIL GCC-C-execute-920429-1 0.0178 0.016 FAIL FAIL GCC-C-execute-920501-1 0.0228 0.0174 FAIL FAIL GCC-C-execute-920501-2 0.0248 0.0187 FAIL FAIL GCC-C-execute-920501-3 0.0192 0.0179 FAIL FAIL GCC-C-execute-920501-4 0.0181 0.0233 FAIL FAIL GCC-C-execute-920501-5 0.0192 0.0208 FAIL FAIL GCC-C-execute-920501-6 0.0286 0.0323 FAIL FAIL GCC-C-execute-920501-8 0.0259 0.0277 FAIL FAIL GCC-C-execute-920501-9 0.0282 0.0322 FAIL FAIL GCC-C-execute-920506-1 0.0193 0.0136 FAIL FAIL GCC-C-execute-920520-1 0.022 0.0193 FAIL FAIL GCC-C-execute-920603-1 0.0147 0.0178 FAIL FAIL GCC-C-execute-920604-1 0.0167 0.0195 0.0216 0.0 GCC-C-execute-920612-1 0.0227 0.0216 0.018 0.0 GCC-C-execute-920618-1 0.0216 0.0196 0.0256 0.0 GCC-C-execute-920625-1 0.024 0.0157 FAIL FAIL GCC-C-execute-920710-1 0.0211 0.0176 0.0252 0.0 GCC-C-execute-920711-1 0.0208 0.0192 0.0243 0.0 GCC-C-execute-920721-1 0.0204 0.0176 0.0254 0.0 GCC-C-execute-920721-2 0.0165 0.0218 FAIL FAIL GCC-C-execute-920721-3 0.0207 0.0163 FAIL FAIL GCC-C-execute-920726-1 0.0311 0.0291 FAIL FAIL GCC-C-execute-920728-1 0.0116 0.0208 FAIL FAIL GCC-C-execute-920730-1 0.0179 0.018 0.0332 0.0 GCC-C-execute-920731-1 0.0191 0.0166 FAIL FAIL GCC-C-execute-920810-1 0.0493 0.0441 FAIL FAIL GCC-C-execute-920812-1 0.0189 0.017 FAIL FAIL GCC-C-execute-920829-1 0.019 0.0205 0.0231 0.0 GCC-C-execute-920908-1 0.0122 0.0131 FAIL FAIL GCC-C-execute-920908-2 0.0172 0.0188 FAIL FAIL GCC-C-execute-920909-1 0.0146 0.0208 FAIL FAIL GCC-C-execute-920922-1 0.0145 0.0181 FAIL FAIL GCC-C-execute-920929-1 0.0221 0.019 FAIL FAIL GCC-C-execute-921006-1 0.0164 0.0166 FAIL FAIL GCC-C-execute-921007-1 0.0127 0.0214 0.029 FAIL GCC-C-execute-921013-1 0.0128 0.0216 FAIL FAIL GCC-C-execute-921016-1 0.0227 0.0228 FAIL FAIL GCC-C-execute-921019-1 0.0193 0.0221 FAIL FAIL GCC-C-execute-921019-2 0.0174 0.0187 0.0228 0.0 GCC-C-execute-921029-1 0.0154 0.0179 FAIL FAIL GCC-C-execute-921104-1 0.0173 0.0169 0.02 0.0 GCC-C-execute-921110-1 0.0178 0.0192 FAIL FAIL GCC-C-execute-921112-1 0.014 0.0158 FAIL FAIL GCC-C-execute-921113-1 0.0207 0.0177 FAIL FAIL GCC-C-execute-921117-1 0.0184 0.0218 0.03 0.0 GCC-C-execute-921123-1 0.0154 0.0202 0.0231 0.0 GCC-C-execute-921123-2 0.0216 0.0208 0.0312 0.0 GCC-C-execute-921124-1 0.0191 0.0145 FAIL FAIL GCC-C-execute-921202-2 0.0183 0.0217 FAIL FAIL GCC-C-execute-921204-1 0.0149 0.0188 FAIL FAIL GCC-C-execute-921207-1 0.0239 0.0189 0.0254 0.0 GCC-C-execute-921208-1 0.0179 0.0165 FAIL FAIL GCC-C-execute-921208-2 0.0186 0.0201 FAIL FAIL GCC-C-execute-921218-1 0.0125 0.0142 0.0266 0.0 GCC-C-execute-921218-2 0.024 0.0194 0.0284 0.0 GCC-C-execute-930106-1 0.0189 0.0162 0.0247 0.0 GCC-C-execute-930111-1 0.0152 0.0206 FAIL FAIL GCC-C-execute-930123-1 0.0206 0.0189 FAIL FAIL GCC-C-execute-930126-1 0.0186 0.0151 FAIL FAIL GCC-C-execute-930208-1 0.0198 0.0155 FAIL FAIL GCC-C-execute-930406-1 0.0157 0.0193 FAIL FAIL GCC-C-execute-930408-1 0.0166 0.0183 FAIL FAIL GCC-C-execute-930429-1 0.02 0.0182 FAIL FAIL GCC-C-execute-930429-2 0.0157 0.0157 0.029 0.0 GCC-C-execute-930513-1 0.0251 0.0292 FAIL FAIL GCC-C-execute-930513-2 0.0157 0.014 FAIL FAIL GCC-C-execute-930518-1 0.0182 0.0177 FAIL FAIL GCC-C-execute-930527-1 0.0157 0.0172 0.0265 0.0 GCC-C-execute-930529-1 0.0207 0.0126 0.0388 0.0 GCC-C-execute-930603-1 0.017 0.0169 FAIL FAIL GCC-C-execute-930603-2 0.0163 0.0199 FAIL FAIL GCC-C-execute-930603-3 0.0202 0.019 FAIL FAIL GCC-C-execute-930608-1 0.0223 0.0195 FAIL FAIL GCC-C-execute-930614-1 0.0175 0.021 FAIL FAIL GCC-C-execute-930614-2 0.0171 0.0188 0.0307 0.0 GCC-C-execute-930621-1 0.0147 0.0176 FAIL FAIL GCC-C-execute-930622-1 0.0162 0.0149 FAIL FAIL GCC-C-execute-930622-2 0.0166 0.0202 FAIL FAIL GCC-C-execute-930628-1 0.0208 0.0204 FAIL FAIL GCC-C-execute-930630-1 0.0197 0.0177 FAIL FAIL GCC-C-execute-930702-1 0.0155 0.0199 FAIL FAIL GCC-C-execute-930713-1 0.0159 0.0168 0.0319 0.0 GCC-C-execute-930718-1 0.0212 0.0169 0.0299 0.0 GCC-C-execute-930719-1 0.0207 0.0169 FAIL FAIL GCC-C-execute-930725-1 0.0146 0.0162 FAIL FAIL GCC-C-execute-930818-1 0.0207 0.0153 0.0248 0.0 GCC-C-execute-930916-1 0.023 0.0129 FAIL FAIL GCC-C-execute-930921-1 0.0199 0.0186 0.0245 0.0 GCC-C-execute-930929-1 0.0189 0.0191 0.0274 0.0 GCC-C-execute-930930-1 0.018 0.0225 FAIL FAIL GCC-C-execute-930930-2 0.0205 0.0194 FAIL FAIL GCC-C-execute-931004-1 0.0194 0.0232 FAIL FAIL GCC-C-execute-931004-10 0.0162 0.0224 FAIL FAIL GCC-C-execute-931004-11 0.0174 0.0166 FAIL FAIL GCC-C-execute-931004-12 0.0164 0.0186 FAIL FAIL GCC-C-execute-931004-13 0.022 0.0217 FAIL FAIL GCC-C-execute-931004-14 0.0198 0.0179 FAIL FAIL GCC-C-execute-931004-2 0.0254 0.0197 FAIL FAIL GCC-C-execute-931004-3 0.0231 0.0183 FAIL FAIL GCC-C-execute-931004-4 0.0216 0.0231 FAIL FAIL GCC-C-execute-931004-5 0.0181 0.017 FAIL FAIL GCC-C-execute-931004-6 0.0108 0.0149 FAIL FAIL GCC-C-execute-931004-7 0.0184 0.016 FAIL FAIL GCC-C-execute-931004-8 0.0227 0.023 FAIL FAIL GCC-C-execute-931004-9 0.02 0.0219 FAIL FAIL GCC-C-execute-931005-1 0.0148 0.0133 0.0246 0.0 GCC-C-execute-931009-1 0.0178 0.016 FAIL FAIL GCC-C-execute-931012-1 0.02 0.0168 FAIL FAIL GCC-C-execute-931017-1 0.0158 0.019 FAIL FAIL GCC-C-execute-931018-1 0.0151 0.0182 FAIL FAIL GCC-C-execute-931031-1 0.0154 0.0188 0.0238 0.0 GCC-C-execute-931102-1 0.0263 0.0179 FAIL FAIL GCC-C-execute-931102-2 0.0167 0.0176 FAIL FAIL GCC-C-execute-931110-1 0.0151 0.0211 0.0195 0.0 GCC-C-execute-931110-2 0.0149 0.0176 FAIL FAIL GCC-C-execute-931208-1 0.0218 0.0244 0.029 0.0 GCC-C-execute-931228-1 0.019 0.0163 0.0261 0.0 GCC-C-execute-940115-1 0.0167 0.0189 0.0238 0.0 GCC-C-execute-940122-1 0.0189 0.016 FAIL FAIL GCC-C-execute-941014-1 0.0181 0.0277 FAIL FAIL GCC-C-execute-941014-2 0.0414 0.0376 0.2958 FAIL GCC-C-execute-941015-1 0.0183 0.0148 FAIL FAIL GCC-C-execute-941021-1 0.0196 0.0173 FAIL FAIL GCC-C-execute-941025-1 0.0202 0.0183 0.0298 0.0 GCC-C-execute-941031-1 0.0152 0.0205 0.0221 0.0 GCC-C-execute-941101-1 0.025 0.0162 0.0228 0.0 GCC-C-execute-941110-1 0.0223 0.0202 0.0278 0.0 GCC-C-execute-941202-1 0.0199 0.0167 FAIL FAIL GCC-C-execute-950221-1 0.0201 0.024 FAIL FAIL GCC-C-execute-950322-1 0.0163 0.0205 0.0197 0.0 GCC-C-execute-950426-1 0.0171 0.0183 FAIL FAIL GCC-C-execute-950426-2 0.015 0.0216 0.0289 0.0 GCC-C-execute-950503-1 0.0189 0.0222 0.0231 0.0 GCC-C-execute-950511-1 0.0195 0.0177 0.0245 0.0 GCC-C-execute-950512-1 0.0171 0.0203 0.0294 0.0 GCC-C-execute-950605-1 0.0174 0.0196 FAIL FAIL GCC-C-execute-950607-1 0.0201 0.0145 FAIL FAIL GCC-C-execute-950607-2 0.024 0.0148 FAIL FAIL GCC-C-execute-950612-1 0.0159 0.0178 0.0418 0.0 GCC-C-execute-950621-1 0.0201 0.0187 FAIL FAIL GCC-C-execute-950628-1 0.0181 0.0156 FAIL FAIL GCC-C-execute-950704-1 0.0206 0.0166 0.0309 0.0 GCC-C-execute-950706-1 0.0189 0.0187 0.0295 0.0 GCC-C-execute-950710-1 0.0156 0.0218 FAIL FAIL GCC-C-execute-950714-1 0.0229 0.0166 FAIL FAIL GCC-C-execute-950809-1 0.0195 0.0173 FAIL FAIL GCC-C-execute-950906-1 0.0175 0.0196 FAIL FAIL GCC-C-execute-950915-1 0.0203 0.014 0.0232 0.0 GCC-C-execute-950929-1 0.0224 0.0178 FAIL FAIL GCC-C-execute-951003-1 0.0185 0.0163 0.0277 0.0 GCC-C-execute-951115-1 0.0157 0.0211 FAIL FAIL GCC-C-execute-951204-1 0.0166 0.0178 FAIL FAIL GCC-C-execute-960116-1 0.015 0.0162 0.0243 0.0 GCC-C-execute-960117-1 0.0201 0.0155 FAIL FAIL GCC-C-execute-960209-1 0.0233 0.0214 FAIL FAIL GCC-C-execute-960215-1 0.0191 0.0227 0.033 0.0 GCC-C-execute-960218-1 0.0175 0.018 FAIL FAIL GCC-C-execute-960219-1 0.015 0.0169 FAIL FAIL GCC-C-execute-960301-1 0.0154 0.0197 0.0245 0.0 GCC-C-execute-960302-1 0.0193 0.0184 FAIL FAIL GCC-C-execute-960311-1 0.0295 0.0282 FAIL FAIL GCC-C-execute-960311-2 0.0269 0.0245 FAIL FAIL GCC-C-execute-960311-3 0.0282 0.0271 FAIL FAIL GCC-C-execute-960312-1 0.0216 0.0171 FAIL FAIL GCC-C-execute-960317-1 0.0172 0.0172 FAIL FAIL GCC-C-execute-960321-1 0.0214 0.0136 FAIL FAIL GCC-C-execute-960326-1 0.017 0.0217 FAIL FAIL GCC-C-execute-960327-1 0.0263 0.0269 FAIL FAIL GCC-C-execute-960402-1 0.0175 0.0167 0.0169 0.0 GCC-C-execute-960405-1 0.0306 0.0267 0.025 0.0 GCC-C-execute-960416-1 0.0199 0.0203 FAIL FAIL GCC-C-execute-960419-1 0.0192 0.0173 0.0185 0.0 GCC-C-execute-960419-2 0.0199 0.0197 0.0237 FAIL GCC-C-execute-960512-1 0.02 0.0132 FAIL FAIL GCC-C-execute-960513-1 0.0207 0.0237 FAIL FAIL GCC-C-execute-960521-1 0.0309 0.0322 FAIL FAIL GCC-C-execute-960608-1 0.0221 0.0164 FAIL FAIL GCC-C-execute-960801-1 0.0165 0.0173 0.0222 0.0 GCC-C-execute-960802-1 0.0168 0.0194 0.0246 0.0 GCC-C-execute-960830-1 0.0205 0.0159 0.0243 0.0 GCC-C-execute-960909-1 0.0136 0.0141 FAIL FAIL GCC-C-execute-961004-1 0.0197 0.0189 0.0253 0.0 GCC-C-execute-961017-1 0.0149 0.0226 0.0234 0.0 GCC-C-execute-961017-2 0.0182 0.0187 FAIL FAIL GCC-C-execute-961026-1 0.0188 0.0148 0.0302 0.0 GCC-C-execute-961112-1 0.02 0.0175 0.0255 0.0 GCC-C-execute-961122-1 0.0196 0.0156 FAIL FAIL GCC-C-execute-961122-2 0.0172 0.0151 FAIL FAIL GCC-C-execute-961125-1 0.0194 0.0176 FAIL FAIL GCC-C-execute-961206-1 0.0185 0.0176 FAIL FAIL GCC-C-execute-961213-1 0.0135 0.0219 0.0309 FAIL GCC-C-execute-970214-1 0.0187 0.0237 0.0214 0.0 GCC-C-execute-970214-2 0.0185 0.0162 0.0171 0.0 GCC-C-execute-970217-1 0.0156 0.0172 0.0268 FAIL GCC-C-execute-970923-1 0.0181 0.0227 FAIL FAIL GCC-C-execute-980205 0.0172 0.0216 FAIL FAIL GCC-C-execute-980223 0.0197 0.0211 FAIL FAIL GCC-C-execute-980424-1 0.0171 0.0129 0.0306 0.0 GCC-C-execute-980505-1 0.0178 0.0235 FAIL FAIL GCC-C-execute-980505-2 0.0171 0.022 0.0262 0.0 GCC-C-execute-980506-1 0.0183 0.0195 FAIL FAIL GCC-C-execute-980506-2 0.0164 0.019 FAIL FAIL GCC-C-execute-980506-3 0.0184 0.017 0.0279 0.0 GCC-C-execute-980526-1 0.0227 0.0209 FAIL FAIL GCC-C-execute-980526-2 0.0221 0.0187 0.0395 0.0 GCC-C-execute-980526-3 0.0213 0.0188 FAIL FAIL GCC-C-execute-980602-1 0.0177 0.0188 0.0281 0.0 GCC-C-execute-980602-2 0.0164 0.0163 0.0264 0.0 GCC-C-execute-980604-1 0.0212 0.017 FAIL FAIL GCC-C-execute-980605-1 0.0278 0.0355 FAIL FAIL GCC-C-execute-980612-1 0.0186 0.0163 FAIL FAIL GCC-C-execute-980617-1 0.0163 0.0174 0.0248 0.0 GCC-C-execute-980618-1 0.0158 0.0226 FAIL FAIL GCC-C-execute-980701-1 0.0173 0.0191 FAIL FAIL GCC-C-execute-980707-1 0.0373 0.0375 FAIL FAIL GCC-C-execute-980709-1 0.0443 0.0468 0.1273 0.0 GCC-C-execute-980716-1 0.0143 0.0189 FAIL FAIL GCC-C-execute-980929-1 0.0241 0.0214 0.023 0.0 GCC-C-execute-981001-1 0.022 0.0244 FAIL FAIL GCC-C-execute-981019-1 0.0188 0.0163 FAIL FAIL GCC-C-execute-981130-1 0.0179 0.0219 0.0261 0.0 GCC-C-execute-981206-1 0.0203 0.02 0.0303 0.0 GCC-C-execute-990106-1 0.0204 0.0221 FAIL FAIL GCC-C-execute-990106-2 0.0213 0.0215 FAIL FAIL GCC-C-execute-990117-1 0.0157 0.0161 0.0217 0.0 GCC-C-execute-990127-1 0.0255 0.0214 FAIL FAIL GCC-C-execute-990127-2 0.0204 0.0188 0.0265 0.0 GCC-C-execute-990128-1 0.0179 0.0209 FAIL FAIL GCC-C-execute-990130-1 0.0175 0.0188 FAIL FAIL GCC-C-execute-990211-1 0.0176 0.0198 0.0429 0.0 GCC-C-execute-990222-1 0.0165 0.0192 FAIL FAIL GCC-C-execute-990324-1 0.0217 0.0182 0.0247 0.0 GCC-C-execute-990326-1 0.0271 0.0296 0.1542 0.0 GCC-C-execute-990404-1 0.0176 0.0199 FAIL FAIL GCC-C-execute-990413-2 0.0203 0.0231 FAIL FAIL GCC-C-execute-990513-1 0.0281 0.0249 FAIL FAIL GCC-C-execute-990524-1 0.0177 0.0211 FAIL FAIL GCC-C-execute-990525-1 0.0197 0.0188 0.0252 0.0 GCC-C-execute-990525-2 0.0186 0.0215 FAIL FAIL GCC-C-execute-990527-1 0.0194 0.0197 0.0268 0.0 GCC-C-execute-990531-1 0.02 0.0217 FAIL FAIL GCC-C-execute-990604-1 0.0198 0.0203 0.026 0.0 GCC-C-execute-990628-1 0.033 0.0352 FAIL FAIL GCC-C-execute-990804-1 0.0147 0.0139 0.0258 0.0 GCC-C-execute-990811-1 0.0189 0.0206 FAIL FAIL GCC-C-execute-990826-0 0.0522 0.0545 0.1939 FAIL GCC-C-execute-990827-1 0.0188 0.0162 0.0207 0.0 GCC-C-execute-990829-1 0.0186 0.0191 0.0218 0.0 GCC-C-execute-990923-1 0.0257 0.0214 0.0213 0.0 GCC-C-execute-991016-1 0.0172 0.0234 FAIL FAIL GCC-C-execute-991019-1 0.0147 0.0207 0.0238 0.0 GCC-C-execute-991023-1 0.0188 0.0237 0.0256 0.0 GCC-C-execute-991030-1 0.0202 0.0177 0.0228 0.0 GCC-C-execute-991112-1 0.0195 0.0189 FAIL FAIL GCC-C-execute-991118-1 0.0196 0.024 FAIL FAIL GCC-C-execute-991201-1 0.0256 0.0184 FAIL FAIL GCC-C-execute-991202-1 0.0164 0.0164 0.0245 0.0 GCC-C-execute-991202-2 0.0209 0.0227 0.0294 0.0 GCC-C-execute-991202-3 0.0161 0.0207 0.0291 0.0 GCC-C-execute-991216-1 0.022 0.0203 FAIL FAIL GCC-C-execute-991216-2 0.0208 0.0167 FAIL FAIL GCC-C-execute-991216-4 0.0233 0.0182 0.0261 0.0 GCC-C-execute-991221-1 0.0159 0.017 0.0276 0.0 GCC-C-execute-991227-1 0.0169 0.018 FAIL FAIL GCC-C-execute-991228-1 0.0122 0.016 FAIL FAIL GCC-C-execute-alias-2 0.0166 0.0174 0.0168 FAIL GCC-C-execute-alias-3 0.0148 0.0203 FAIL FAIL GCC-C-execute-alias-4 0.0208 0.0242 FAIL FAIL GCC-C-execute-alias-access-path-1 0.0193 0.0171 0.0212 FAIL GCC-C-execute-align-1 0.0178 0.0171 0.0197 0.0 GCC-C-execute-align-2 0.0216 0.0175 0.048 0.0 GCC-C-execute-align-3 0.0214 0.0221 FAIL FAIL GCC-C-execute-alloca-1 0.0181 0.0198 FAIL FAIL GCC-C-execute-anon-1 0.019 0.0188 FAIL FAIL GCC-C-execute-arith-1 0.02 0.0205 0.0265 0.0 GCC-C-execute-arith-rand 0.0223 0.023 FAIL FAIL GCC-C-execute-arith-rand-ll 0.0266 0.0253 FAIL FAIL GCC-C-execute-ashldi-1 0.0283 0.0238 FAIL FAIL GCC-C-execute-ashrdi-1 0.0259 0.0275 FAIL FAIL GCC-C-execute-bf-layout-1 0.0178 0.0206 0.026 0.0 GCC-C-execute-bf-pack-1 0.0189 0.0167 FAIL FAIL GCC-C-execute-bf-sign-1 0.0204 0.0202 FAIL FAIL GCC-C-execute-bf-sign-2 0.0237 0.0145 0.0316 0.0 GCC-C-execute-bf64-1 0.0179 0.021 FAIL FAIL GCC-C-execute-bitfld-1 0.0196 0.0195 FAIL FAIL GCC-C-execute-bitfld-2 0.0195 0.0168 0.0252 0.0 GCC-C-execute-bitfld-4 0.0134 0.0152 0.0206 0.0 GCC-C-execute-bitfld-6 0.0156 0.0187 0.023 0.0 GCC-C-execute-bitfld-7 0.0179 0.013 0.0228 0.0 GCC-C-execute-bswap-1 0.0218 0.0184 FAIL FAIL GCC-C-execute-bswap-2 0.0219 0.0237 FAIL FAIL GCC-C-execute-built-in-setjmp 0.0206 0.0192 0.0335 FAIL GCC-C-execute-builtin-bitops-1 0.035 0.0405 FAIL FAIL GCC-C-execute-builtin-constant 0.0155 0.024 0.0279 FAIL GCC-C-execute-builtin-prefetch-1 0.0193 0.0166 0.0323 FAIL GCC-C-execute-builtin-prefetch-2 0.0227 0.0267 FAIL FAIL GCC-C-execute-builtin-prefetch-3 0.0241 0.0235 FAIL FAIL GCC-C-execute-builtin-prefetch-4 0.021 0.0232 FAIL FAIL GCC-C-execute-builtin-prefetch-5 0.0197 0.0198 FAIL FAIL GCC-C-execute-builtin-prefetch-6 0.0203 0.0172 0.033 FAIL GCC-C-execute-builtin-types-compatible-p 0.0216 0.0192 FAIL FAIL GCC-C-execute-call-trap-1 0.0235 0.0202 FAIL FAIL GCC-C-execute-cbrt 0.0228 0.0209 FAIL FAIL GCC-C-execute-cmpdi-1 0.0279 0.0224 FAIL FAIL GCC-C-execute-cmpsf-1 0.0237 0.026 FAIL FAIL GCC-C-execute-cmpsi-1 0.0215 0.0187 FAIL FAIL GCC-C-execute-cmpsi-2 0.0229 0.0222 FAIL FAIL GCC-C-execute-comp-goto-1 0.046 0.0347 FAIL FAIL GCC-C-execute-compare-1 0.0192 0.0214 FAIL FAIL GCC-C-execute-compare-2 0.0124 0.0135 0.0226 0.0 GCC-C-execute-compare-3 0.0183 0.0207 FAIL 0.0 GCC-C-execute-complex-1 0.0124 0.017 FAIL FAIL GCC-C-execute-complex-2 0.0194 0.0226 FAIL FAIL GCC-C-execute-complex-3 0.0187 0.0164 0.0267 0.0 GCC-C-execute-complex-4 0.0168 0.0231 FAIL FAIL GCC-C-execute-complex-5 0.019 0.0255 FAIL FAIL GCC-C-execute-complex-6 0.0342 0.0414 FAIL FAIL GCC-C-execute-complex-7 0.0165 0.023 FAIL FAIL GCC-C-execute-compndlit-1 0.0163 0.0223 FAIL FAIL GCC-C-execute-const-addr-expr-1 0.0361 0.0424 FAIL FAIL GCC-C-execute-conversion 0.0371 0.034 FAIL FAIL GCC-C-execute-cvt-1 0.0178 0.0234 0.0223 0.0 GCC-C-execute-dbra-1 0.0202 0.0209 0.0357 0.0 GCC-C-execute-divcmp-1 0.027 0.0264 0.0913 0.0 GCC-C-execute-divcmp-2 0.0228 0.0232 0.0315 0.0 GCC-C-execute-divcmp-3 0.0188 0.0165 0.0336 0.0 GCC-C-execute-divcmp-4 0.0217 0.0244 0.0582 0.0 GCC-C-execute-divcmp-5 0.0221 0.021 FAIL FAIL GCC-C-execute-divconst-1 0.02 0.0176 FAIL FAIL GCC-C-execute-divconst-2 0.0148 0.0209 0.0341 0.0 GCC-C-execute-divconst-3 0.0191 0.0197 0.0258 0.0 GCC-C-execute-divmod-1 0.0276 0.021 0.0351 0.0 GCC-C-execute-doloop-1 0.0131 0.0199 0.022 0.0 GCC-C-execute-doloop-2 0.0181 0.0197 0.0315 0.0 GCC-C-execute-enum-1 0.0199 0.0187 FAIL FAIL GCC-C-execute-enum-2 0.016 0.0172 0.0212 0.0 GCC-C-execute-enum-3 0.0248 0.0281 0.0746 FAIL GCC-C-execute-extzvsi 0.0188 0.0161 0.0227 0.0 GCC-C-execute-ffs-1 0.0204 0.0189 0.0184 FAIL GCC-C-execute-ffs-2 0.02 0.0164 0.0235 FAIL GCC-C-execute-float-floor 0.0196 0.024 0.0254 0.0 GCC-C-execute-floatunsisf-1 0.0207 0.0185 0.0261 0.0 GCC-C-execute-fprintf-1 0.0444 0.0361 FAIL FAIL GCC-C-execute-fprintf-2 0.0507 0.0471 FAIL FAIL GCC-C-execute-func-ptr-1 0.0198 0.0176 FAIL FAIL GCC-C-execute-gofast 0.0346 0.0373 FAIL FAIL GCC-C-execute-ieee-20000320-1 0.0235 0.0168 0.0326 0.0 GCC-C-execute-ieee-20001122-1 0.0146 0.023 0.0261 0.0 GCC-C-execute-ieee-20010114-2 0.0181 0.0217 0.0232 FAIL GCC-C-execute-ieee-20010226-1 0.0178 0.021 0.0237 0.0 GCC-C-execute-ieee-20011123-1 0.0168 0.0174 0.0224 0.0 GCC-C-execute-ieee-20030331-1 0.0184 0.0164 0.0279 FAIL GCC-C-execute-ieee-20041213-1 0.0145 0.0149 0.0278 0.0 GCC-C-execute-ieee-920518-1 0.0176 0.0204 0.0249 0.0 GCC-C-execute-ieee-920810-1 0.0327 0.0271 0.0769 FAIL GCC-C-execute-ieee-930529-1 0.0178 0.0224 FAIL FAIL GCC-C-execute-ieee-980619-1 0.0185 0.0187 FAIL FAIL GCC-C-execute-ieee-acc1 0.0165 0.0213 FAIL FAIL GCC-C-execute-ieee-acc2 0.0229 0.0167 FAIL FAIL GCC-C-execute-ieee-builtin-nan-1 0.0148 0.0274 FAIL FAIL GCC-C-execute-ieee-compare-fp-1 0.0272 0.0382 FAIL FAIL GCC-C-execute-ieee-compare-fp-2 0.0181 0.0242 0.0235 0.0 GCC-C-execute-ieee-compare-fp-3 0.018 0.0235 FAIL FAIL GCC-C-execute-ieee-compare-fp-4 0.0297 0.0271 FAIL FAIL GCC-C-execute-ieee-copysign1 0.0437 0.0498 FAIL FAIL GCC-C-execute-ieee-copysign2 0.0403 0.0498 FAIL FAIL GCC-C-execute-ieee-fp-cmp-1 0.0236 0.0283 FAIL FAIL GCC-C-execute-ieee-fp-cmp-2 0.0338 0.0287 FAIL FAIL GCC-C-execute-ieee-fp-cmp-3 0.0337 0.0381 FAIL FAIL GCC-C-execute-ieee-fp-cmp-4 0.0212 0.0163 FAIL FAIL GCC-C-execute-ieee-fp-cmp-4e 0.0178 0.0196 0.0205 0.0 GCC-C-execute-ieee-fp-cmp-4f 0.0219 0.0327 FAIL FAIL GCC-C-execute-ieee-fp-cmp-4l 0.0264 0.0261 FAIL FAIL GCC-C-execute-ieee-fp-cmp-5 0.0179 0.0223 FAIL FAIL GCC-C-execute-ieee-fp-cmp-6 0.0241 0.0169 FAIL FAIL GCC-C-execute-ieee-fp-cmp-8 0.0284 0.0283 FAIL FAIL GCC-C-execute-ieee-fp-cmp-8e 0.0154 0.0181 0.0244 0.0 GCC-C-execute-ieee-fp-cmp-8f 0.0261 0.0257 FAIL FAIL GCC-C-execute-ieee-fp-cmp-8l 0.0225 0.0235 FAIL FAIL GCC-C-execute-ieee-hugeval 0.0513 0.05 0.1269 FAIL GCC-C-execute-ieee-inf-1 0.0203 0.0222 FAIL FAIL GCC-C-execute-ieee-inf-2 0.0194 0.0207 FAIL FAIL GCC-C-execute-ieee-inf-3 0.0182 0.024 FAIL FAIL GCC-C-execute-ieee-minuszero 0.021 0.0211 FAIL FAIL GCC-C-execute-ieee-mul-subnormal-single-1 0.022 0.0222 0.0299 0.0 GCC-C-execute-ieee-mzero2 0.0133 0.0233 0.0369 FAIL GCC-C-execute-ieee-mzero3 0.0225 0.021 FAIL FAIL GCC-C-execute-ieee-mzero4 0.025 0.0207 FAIL FAIL GCC-C-execute-ieee-mzero5 0.0144 0.0217 FAIL FAIL GCC-C-execute-ieee-mzero6 0.012 0.0193 FAIL FAIL GCC-C-execute-ieee-pr28634 0.0167 0.0186 0.0299 0.0 GCC-C-execute-ieee-pr29302-1 0.0196 0.0236 0.0296 0.0 GCC-C-execute-ieee-pr30704 0.0233 0.0238 FAIL FAIL GCC-C-execute-ieee-pr36332 0.0185 0.0248 FAIL FAIL GCC-C-execute-ieee-pr38016 0.0275 0.022 FAIL FAIL GCC-C-execute-ieee-pr50310 0.0278 0.0296 FAIL FAIL GCC-C-execute-ieee-pr67218 0.022 0.0193 0.0251 0.0 GCC-C-execute-ieee-pr72824 0.0249 0.0137 0.0267 FAIL GCC-C-execute-ieee-pr72824-2 0.0161 0.0171 FAIL FAIL GCC-C-execute-ieee-pr84235 0.0212 0.019 0.0218 FAIL GCC-C-execute-ieee-rbug 0.0169 0.0205 0.0248 0.0 GCC-C-execute-ieee-unsafe-fp-assoc 0.0222 0.0164 0.0218 0.0 GCC-C-execute-ieee-unsafe-fp-assoc-1 0.0221 0.0225 0.0282 FAIL GCC-C-execute-ifcvt-onecmpl-abs-1 0.0256 0.0175 0.0252 0.0 GCC-C-execute-index-1 0.0148 0.0174 0.0274 0.0 GCC-C-execute-inst-check 0.0176 0.0231 0.026 0.0 GCC-C-execute-int-compare 0.0224 0.0217 FAIL FAIL GCC-C-execute-ipa-sra-1 0.0171 0.0166 0.0203 0.0 GCC-C-execute-ipa-sra-2 0.0176 0.0134 0.0313 0.0 GCC-C-execute-longlong 0.0185 0.0194 0.0274 0.0 GCC-C-execute-loop-1 0.0206 0.0199 0.026 0.0 GCC-C-execute-loop-10 0.0173 0.0236 0.0238 0.0 GCC-C-execute-loop-11 0.0158 0.0138 0.0211 0.0 GCC-C-execute-loop-12 0.0189 0.0215 FAIL FAIL GCC-C-execute-loop-13 0.0168 0.0186 FAIL FAIL GCC-C-execute-loop-14 0.0224 0.0201 0.0285 FAIL GCC-C-execute-loop-15 0.0181 0.016 FAIL FAIL GCC-C-execute-loop-2 0.0183 0.0197 FAIL FAIL GCC-C-execute-loop-2b 0.0152 0.0199 FAIL FAIL GCC-C-execute-loop-2d 0.0192 0.0196 FAIL FAIL GCC-C-execute-loop-2e 0.0222 0.02 FAIL FAIL GCC-C-execute-loop-2f 0.0318 0.0328 FAIL FAIL GCC-C-execute-loop-2g 0.0303 0.0267 FAIL FAIL GCC-C-execute-loop-3 0.0207 0.0187 FAIL FAIL GCC-C-execute-loop-3b 0.0198 0.0244 FAIL FAIL GCC-C-execute-loop-3c 0.0226 0.0262 FAIL FAIL GCC-C-execute-loop-4 0.0149 0.0158 0.0223 0.0 GCC-C-execute-loop-4b 0.0183 0.0175 0.0278 0.0 GCC-C-execute-loop-5 0.017 0.0195 FAIL FAIL GCC-C-execute-loop-6 0.0141 0.0175 0.0282 0.0 GCC-C-execute-loop-7 0.0175 0.0196 0.0254 0.0 GCC-C-execute-loop-8 0.0136 0.0148 FAIL FAIL GCC-C-execute-loop-9 0.0177 0.0203 0.0226 0.0 GCC-C-execute-loop-ivopts-1 0.0213 0.0199 FAIL FAIL GCC-C-execute-loop-ivopts-2 0.0154 0.0184 0.025 0.0 GCC-C-execute-lshrdi-1 0.0241 0.0284 FAIL FAIL GCC-C-execute-lto-tbaa-1 0.021 0.0108 FAIL FAIL GCC-C-execute-mayalias-1 0.0191 0.0179 0.0251 0.0 GCC-C-execute-mayalias-2 0.0196 0.0195 0.0271 0.0 GCC-C-execute-mayalias-3 0.018 0.0203 FAIL FAIL GCC-C-execute-memchr-1 0.0386 0.0304 FAIL FAIL GCC-C-execute-memcpy-1 0.026 0.0255 FAIL FAIL GCC-C-execute-memcpy-2 0.021 0.0237 FAIL FAIL GCC-C-execute-memcpy-bi 0.0371 0.033 0.2373 0.0 GCC-C-execute-memset-1 0.0273 0.0248 FAIL FAIL GCC-C-execute-memset-2 0.0325 0.0326 FAIL FAIL GCC-C-execute-memset-3 0.0228 0.0295 FAIL FAIL GCC-C-execute-memset-4 0.0212 0.0145 FAIL FAIL GCC-C-execute-mod-1 0.0209 0.0161 FAIL FAIL GCC-C-execute-mode-dependent-address 0.0385 0.046 0.3213 FAIL GCC-C-execute-multdi-1 0.0174 0.0188 0.0195 0.0 GCC-C-execute-multi-ix 0.0282 0.0237 FAIL FAIL GCC-C-execute-nestfunc-4 0.0182 0.0155 FAIL FAIL GCC-C-execute-packed-1 0.0194 0.0207 FAIL FAIL GCC-C-execute-packed-2 0.0188 0.0148 0.0181 0.0 GCC-C-execute-pending-4 0.0224 0.0155 0.0269 0.0 GCC-C-execute-postmod-1 0.0183 0.0225 FAIL FAIL GCC-C-execute-pr15262 0.019 0.0171 0.0297 0.0 GCC-C-execute-pr15262-1 0.0188 0.0221 0.0261 0.0 GCC-C-execute-pr15262-2 0.0197 0.0189 FAIL FAIL GCC-C-execute-pr15296 0.018 0.0242 FAIL FAIL GCC-C-execute-pr16790-1 0.0211 0.0206 0.0332 0.0 GCC-C-execute-pr17078-1 0.017 0.0136 FAIL FAIL GCC-C-execute-pr17133 0.0179 0.0193 FAIL FAIL GCC-C-execute-pr17252 0.0191 0.0246 0.0262 0.0 GCC-C-execute-pr17377 0.0164 0.0161 FAIL FAIL GCC-C-execute-pr19005 0.015 0.019 FAIL FAIL GCC-C-execute-pr19449 0.0177 0.0196 FAIL FAIL GCC-C-execute-pr19515 0.0232 0.0195 FAIL FAIL GCC-C-execute-pr19606 0.0204 0.0188 0.0239 0.0 GCC-C-execute-pr19689 0.0174 0.0145 0.0266 0.0 GCC-C-execute-pr20100-1 0.025 0.0195 FAIL FAIL GCC-C-execute-pr20187-1 0.0201 0.0222 0.0243 0.0 GCC-C-execute-pr20466-1 0.0187 0.017 FAIL FAIL GCC-C-execute-pr20527-1 0.0177 0.0208 FAIL FAIL GCC-C-execute-pr20601-1 0.0228 0.0179 FAIL FAIL GCC-C-execute-pr20621-1 0.0172 0.0173 0.024 0.0 GCC-C-execute-pr21173 0.0189 0.015 FAIL FAIL GCC-C-execute-pr21331 0.022 0.0172 0.0242 0.0 GCC-C-execute-pr21964-1 0.0204 0.0166 0.023 0.0 GCC-C-execute-pr22061-1 0.0157 0.0205 FAIL FAIL GCC-C-execute-pr22061-2 0.0177 0.018 FAIL FAIL GCC-C-execute-pr22098-1 0.0165 0.0128 FAIL FAIL GCC-C-execute-pr22098-2 0.02 0.0206 FAIL FAIL GCC-C-execute-pr22098-3 0.0181 0.0195 FAIL FAIL GCC-C-execute-pr22141-1 0.0204 0.019 FAIL FAIL GCC-C-execute-pr22141-2 0.0237 0.0174 FAIL FAIL GCC-C-execute-pr22348 0.0209 0.0159 0.0293 0.0 GCC-C-execute-pr22429 0.019 0.018 0.0325 0.0 GCC-C-execute-pr22493-1 0.0216 0.0228 0.0259 0.0 GCC-C-execute-pr22630 0.0214 0.0183 FAIL FAIL GCC-C-execute-pr23047 0.0167 0.019 0.0273 0.0 GCC-C-execute-pr23135 0.0249 FAIL FAIL FAIL GCC-C-execute-pr23324 0.0247 0.0217 FAIL FAIL GCC-C-execute-pr23467 0.0209 0.0173 0.0252 0.0 GCC-C-execute-pr23604 0.0189 0.0178 0.027 0.0 GCC-C-execute-pr23941 0.0173 0.0234 0.0256 0.0 GCC-C-execute-pr24141 0.0206 0.0165 0.0216 0.0 GCC-C-execute-pr24142 0.0191 0.0206 0.0219 0.0 GCC-C-execute-pr24716 0.0206 0.0199 FAIL FAIL GCC-C-execute-pr24851 0.0147 0.0185 0.029 0.0 GCC-C-execute-pr25125 0.023 0.0179 FAIL FAIL GCC-C-execute-pr25737 0.0156 0.0197 0.0219 0.0 GCC-C-execute-pr27073 0.0239 0.0133 FAIL FAIL GCC-C-execute-pr27260 0.0158 0.0186 0.0308 0.0 GCC-C-execute-pr27285 0.0157 0.023 FAIL FAIL GCC-C-execute-pr27364 0.0188 0.0196 0.0233 0.0 GCC-C-execute-pr27671-1 0.0192 0.023 FAIL FAIL GCC-C-execute-pr28289 0.021 0.0177 FAIL FAIL GCC-C-execute-pr28403 0.0253 0.0161 FAIL FAIL GCC-C-execute-pr28651 0.0188 0.0214 0.0286 0.0 GCC-C-execute-pr28778 0.0165 0.0217 FAIL FAIL GCC-C-execute-pr28982a 0.0264 0.0241 FAIL FAIL GCC-C-execute-pr28982b 0.0243 0.0269 FAIL FAIL GCC-C-execute-pr29006 0.0189 0.016 0.023 0.0 GCC-C-execute-pr29156 0.0253 0.0195 0.0221 0.0 GCC-C-execute-pr29695-1 0.0202 0.0171 0.0384 0.0 GCC-C-execute-pr29695-2 0.0179 0.0185 0.037 0.0 GCC-C-execute-pr29797-1 0.016 0.0201 0.0258 FAIL GCC-C-execute-pr29797-2 0.0158 0.0149 0.0263 FAIL GCC-C-execute-pr29798 0.0208 0.0195 0.0248 0.0 GCC-C-execute-pr30185 0.0185 0.0203 FAIL FAIL GCC-C-execute-pr30778 0.0182 0.0211 FAIL FAIL GCC-C-execute-pr31072 0.0186 0.0158 FAIL FAIL GCC-C-execute-pr31136 0.0179 0.0206 0.0304 FAIL GCC-C-execute-pr31169 0.0176 0.0151 0.0324 0.0 GCC-C-execute-pr31448 0.0143 0.0196 0.03 FAIL GCC-C-execute-pr31448-2 0.0169 0.0196 0.0267 FAIL GCC-C-execute-pr31605 0.0193 0.0206 0.0218 0.0 GCC-C-execute-pr32500 0.0184 0.0206 FAIL FAIL GCC-C-execute-pr33142 0.0204 0.0199 0.0241 0.0 GCC-C-execute-pr33382 0.0178 0.0178 FAIL FAIL GCC-C-execute-pr33631 0.0162 0.0199 FAIL FAIL GCC-C-execute-pr33669 0.0209 0.02 FAIL FAIL GCC-C-execute-pr33779-1 0.0191 0.0195 0.0324 0.0 GCC-C-execute-pr33779-2 0.0139 0.0196 0.0222 0.0 GCC-C-execute-pr33870 0.0149 0.02 FAIL FAIL GCC-C-execute-pr33870-1 0.0193 0.026 FAIL FAIL GCC-C-execute-pr33992 0.0148 0.0178 FAIL FAIL GCC-C-execute-pr34070-1 0.0195 0.0126 0.0201 0.0 GCC-C-execute-pr34070-2 0.0209 0.0173 0.0264 0.0 GCC-C-execute-pr34099 0.0212 0.0201 FAIL FAIL GCC-C-execute-pr34099-2 0.0156 0.0182 FAIL FAIL GCC-C-execute-pr34130 0.0106 0.0219 0.021 FAIL GCC-C-execute-pr34154 0.0179 0.0186 FAIL FAIL GCC-C-execute-pr34176 0.0202 0.0188 FAIL FAIL GCC-C-execute-pr34415 0.0182 0.0226 FAIL FAIL GCC-C-execute-pr34456 0.0316 0.0261 FAIL FAIL GCC-C-execute-pr34768-1 0.02 0.0222 FAIL FAIL GCC-C-execute-pr34768-2 0.0203 0.0184 FAIL FAIL GCC-C-execute-pr34982 0.0178 0.0149 FAIL FAIL GCC-C-execute-pr35163 0.0149 0.0197 0.0255 0.0 GCC-C-execute-pr35231 0.019 0.022 0.0247 0.0 GCC-C-execute-pr35390 0.0152 0.0199 0.0203 0.0 GCC-C-execute-pr35456 0.016 0.0179 FAIL FAIL GCC-C-execute-pr35472 0.02 0.0207 0.0239 0.0 GCC-C-execute-pr35800 0.0228 0.0233 FAIL FAIL GCC-C-execute-pr36034-1 0.0175 0.0191 0.0492 0.0 GCC-C-execute-pr36034-2 0.0208 0.0198 0.0395 0.0 GCC-C-execute-pr36038 0.02 0.016 FAIL FAIL GCC-C-execute-pr36077 0.0209 0.0219 0.0214 0.0 GCC-C-execute-pr36321 0.0152 0.0211 FAIL FAIL GCC-C-execute-pr36339 0.0181 0.0184 FAIL FAIL GCC-C-execute-pr36343 0.0186 0.0229 0.0256 0.0 GCC-C-execute-pr36691 0.0146 0.0224 FAIL FAIL GCC-C-execute-pr36765 0.0176 0.0176 0.0227 FAIL GCC-C-execute-pr37102 0.0197 0.0184 0.0257 FAIL GCC-C-execute-pr37125 0.0241 0.0215 FAIL FAIL GCC-C-execute-pr37573 0.0248 0.0252 FAIL FAIL GCC-C-execute-pr37780 0.0212 0.0227 FAIL FAIL GCC-C-execute-pr37882 0.0117 0.0159 0.0214 0.0 GCC-C-execute-pr37924 0.0227 0.0204 0.0387 0.0 GCC-C-execute-pr37931 0.0177 0.0179 0.0251 0.0 GCC-C-execute-pr38048-1 0.0152 0.0193 0.028 0.0 GCC-C-execute-pr38048-2 0.0156 0.0149 0.0297 0.0 GCC-C-execute-pr38051 0.0307 0.0276 FAIL FAIL GCC-C-execute-pr38151 0.0179 0.0174 FAIL FAIL GCC-C-execute-pr38236 0.0157 0.0178 0.0282 0.0 GCC-C-execute-pr38422 0.0215 0.0185 0.0281 0.0 GCC-C-execute-pr38533 0.0309 0.0329 FAIL FAIL GCC-C-execute-pr38819 0.018 0.0205 0.0274 0.0 GCC-C-execute-pr38969 0.0121 0.0176 FAIL FAIL GCC-C-execute-pr39100 0.0177 0.0159 FAIL FAIL GCC-C-execute-pr39120 0.0198 0.0217 FAIL FAIL GCC-C-execute-pr39233 0.0135 0.0202 0.025 0.0 GCC-C-execute-pr39240 0.0186 0.0214 0.0378 0.0 GCC-C-execute-pr39339 0.0219 0.0215 0.0395 FAIL GCC-C-execute-pr39501 0.0239 0.0273 FAIL FAIL GCC-C-execute-pr40022 0.0222 0.0191 FAIL FAIL GCC-C-execute-pr40057 0.0211 0.0178 0.0234 0.0 GCC-C-execute-pr40386 0.0343 0.0265 0.1104 FAIL GCC-C-execute-pr40404 0.0205 0.0225 0.0281 0.0 GCC-C-execute-pr40493 0.0207 0.0144 0.0316 FAIL GCC-C-execute-pr40579 0.0141 0.0167 0.0266 0.0 GCC-C-execute-pr40657 0.022 0.0222 FAIL FAIL GCC-C-execute-pr40668 0.019 0.019 FAIL FAIL GCC-C-execute-pr40747 0.0171 0.0198 0.0241 0.0 GCC-C-execute-pr41239 0.0172 0.0186 FAIL FAIL GCC-C-execute-pr41317 0.0207 0.0228 0.0277 0.0 GCC-C-execute-pr41395-1 0.0159 0.018 0.0243 0.0 GCC-C-execute-pr41395-2 0.0169 0.0225 0.0294 0.0 GCC-C-execute-pr41463 0.027 0.0286 FAIL FAIL GCC-C-execute-pr41750 0.0211 0.0195 FAIL FAIL GCC-C-execute-pr41917 0.0176 0.0175 0.0283 0.0 GCC-C-execute-pr41919 0.017 0.0181 0.0267 0.0 GCC-C-execute-pr42006 0.0193 0.021 0.0298 0.0 GCC-C-execute-pr42142 0.0235 0.0174 0.0274 0.0 GCC-C-execute-pr42154 0.0185 0.0182 0.0224 0.0 GCC-C-execute-pr42231 0.0181 0.0207 FAIL FAIL GCC-C-execute-pr42248 0.0167 0.0217 FAIL FAIL GCC-C-execute-pr42269-2 0.0185 0.0243 0.0192 0.0 GCC-C-execute-pr42512 0.0188 0.0136 FAIL FAIL GCC-C-execute-pr42544 0.0205 0.0136 0.0266 0.0 GCC-C-execute-pr42570 0.021 0.0172 0.0259 FAIL GCC-C-execute-pr42614 0.0188 0.0218 FAIL FAIL GCC-C-execute-pr42691 0.0186 0.019 FAIL FAIL GCC-C-execute-pr42721 0.0154 0.0187 FAIL FAIL GCC-C-execute-pr42833 0.0254 0.0274 FAIL FAIL GCC-C-execute-pr43008 0.0194 0.0193 0.074 FAIL GCC-C-execute-pr43220 0.0147 0.0199 FAIL FAIL GCC-C-execute-pr43236 0.017 0.0195 FAIL FAIL GCC-C-execute-pr43269 0.0221 0.0185 FAIL FAIL GCC-C-execute-pr43385 0.0166 0.0119 FAIL FAIL GCC-C-execute-pr43438 0.0136 0.0168 FAIL FAIL GCC-C-execute-pr43560 0.0166 0.0163 FAIL FAIL GCC-C-execute-pr43629 0.0195 0.0212 0.0289 0.0 GCC-C-execute-pr43784 0.0185 0.0151 FAIL FAIL GCC-C-execute-pr43835 0.015 0.0198 FAIL FAIL GCC-C-execute-pr43987 0.0202 0.0165 0.0292 0.0 GCC-C-execute-pr44164 0.018 0.0198 FAIL FAIL GCC-C-execute-pr44202-1 0.0195 0.0196 FAIL FAIL GCC-C-execute-pr44468 0.0178 0.0247 FAIL FAIL GCC-C-execute-pr44555 0.0165 0.0177 FAIL FAIL GCC-C-execute-pr44575 0.0174 0.0179 FAIL FAIL GCC-C-execute-pr44683 0.0175 0.0219 FAIL FAIL GCC-C-execute-pr44828 0.0149 0.0198 0.0227 0.0 GCC-C-execute-pr44852 0.0218 0.0143 FAIL FAIL GCC-C-execute-pr44858 0.0183 0.0189 0.0248 0.0 GCC-C-execute-pr44942 0.0182 0.0178 FAIL FAIL GCC-C-execute-pr45034 0.0193 0.0192 FAIL FAIL GCC-C-execute-pr45070 0.0212 0.0189 FAIL FAIL GCC-C-execute-pr45262 0.0171 0.021 0.0324 0.0 GCC-C-execute-pr45695 0.0177 0.0169 FAIL FAIL GCC-C-execute-pr46019 0.0213 0.0168 0.0276 0.0 GCC-C-execute-pr46309 0.0168 0.016 FAIL FAIL GCC-C-execute-pr46316 0.0187 0.0192 0.0247 0.0 GCC-C-execute-pr46909-1 0.0137 0.0173 FAIL FAIL GCC-C-execute-pr46909-2 0.0169 0.0172 FAIL FAIL GCC-C-execute-pr47148 0.0221 0.0174 FAIL FAIL GCC-C-execute-pr47155 0.0179 0.017 0.0279 0.0 GCC-C-execute-pr47299 0.0154 0.016 0.0234 0.0 GCC-C-execute-pr47337 0.0183 0.0176 FAIL FAIL GCC-C-execute-pr47538 0.0217 0.0213 FAIL FAIL GCC-C-execute-pr47925 0.0195 0.0216 FAIL FAIL GCC-C-execute-pr48197 0.0179 0.0198 0.0315 0.0 GCC-C-execute-pr48571-1 0.0188 0.0178 FAIL FAIL GCC-C-execute-pr48717 0.0187 0.0205 0.0271 0.0 GCC-C-execute-pr48809 0.0208 0.0141 FAIL FAIL GCC-C-execute-pr48814-1 0.019 0.0158 0.0244 0.0 GCC-C-execute-pr48814-2 0.0145 0.0137 0.0202 0.0 GCC-C-execute-pr48973-1 0.0223 0.0149 0.0263 FAIL GCC-C-execute-pr48973-2 0.0138 0.0159 0.0246 FAIL GCC-C-execute-pr49039 0.0179 0.0192 0.0251 0.0 GCC-C-execute-pr49073 0.0188 0.0176 0.0294 0.0 GCC-C-execute-pr49123 0.0236 0.0198 0.024 FAIL GCC-C-execute-pr49161 0.0163 0.0175 FAIL FAIL GCC-C-execute-pr49186 0.0181 0.016 0.0196 0.0 GCC-C-execute-pr49218 0.0198 0.0198 FAIL FAIL GCC-C-execute-pr49279 0.0194 0.0171 FAIL FAIL GCC-C-execute-pr49281 0.0229 0.0206 FAIL FAIL GCC-C-execute-pr49390 0.0182 0.0182 FAIL FAIL GCC-C-execute-pr49419 0.0226 0.0189 FAIL FAIL GCC-C-execute-pr49644 0.0178 0.0178 FAIL FAIL GCC-C-execute-pr49712 0.0165 0.0161 0.0299 0.0 GCC-C-execute-pr49768 0.0122 0.0166 FAIL FAIL GCC-C-execute-pr49886 0.0242 0.0183 FAIL FAIL GCC-C-execute-pr50865 0.017 0.0148 0.0272 0.0 GCC-C-execute-pr51023 0.0153 0.0174 0.0218 0.0 GCC-C-execute-pr51323 0.0181 0.0204 FAIL FAIL GCC-C-execute-pr51466 0.0201 0.0197 FAIL FAIL GCC-C-execute-pr51581-1 0.0345 0.0289 FAIL FAIL GCC-C-execute-pr51581-2 0.0228 0.0231 FAIL FAIL GCC-C-execute-pr51877 0.0177 0.0234 FAIL FAIL GCC-C-execute-pr51933 0.0242 0.022 FAIL FAIL GCC-C-execute-pr52129 0.0222 0.0167 FAIL FAIL GCC-C-execute-pr52209 0.017 0.0202 0.0262 0.0 GCC-C-execute-pr52286 0.019 0.0175 FAIL FAIL GCC-C-execute-pr52760 0.0231 0.0146 FAIL FAIL GCC-C-execute-pr52979-1 0.0208 0.017 FAIL FAIL GCC-C-execute-pr52979-2 0.0239 0.0145 FAIL FAIL GCC-C-execute-pr53084 0.019 0.0185 FAIL FAIL GCC-C-execute-pr53160 0.019 0.0193 0.0328 0.0 GCC-C-execute-pr53465 0.0204 0.0246 0.0312 0.0 GCC-C-execute-pr53645 FAIL FAIL FAIL FAIL GCC-C-execute-pr53645-2 FAIL FAIL FAIL FAIL GCC-C-execute-pr53688 0.0198 0.0246 FAIL FAIL GCC-C-execute-pr54471 0.0183 0.0193 FAIL FAIL GCC-C-execute-pr54937 0.0233 0.0156 FAIL FAIL GCC-C-execute-pr54985 0.014 0.0208 FAIL FAIL GCC-C-execute-pr55137 0.0181 0.018 0.0221 0.0 GCC-C-execute-pr55750 0.0219 0.0168 FAIL FAIL GCC-C-execute-pr55875 0.0162 0.018 FAIL FAIL GCC-C-execute-pr56051 0.0201 0.023 0.0304 0.0 GCC-C-execute-pr56205 0.0256 0.0239 FAIL FAIL GCC-C-execute-pr56250 0.0219 0.0225 0.0254 0.0 GCC-C-execute-pr56799 0.025 0.0262 FAIL FAIL GCC-C-execute-pr56837 0.0164 0.015 FAIL FAIL GCC-C-execute-pr56866 0.0221 0.0215 FAIL FAIL GCC-C-execute-pr56899 0.0164 0.0152 0.0304 FAIL GCC-C-execute-pr56962 0.0207 0.0166 0.0254 0.0 GCC-C-execute-pr56982 0.0214 0.0197 FAIL FAIL GCC-C-execute-pr57124 0.0178 0.0186 0.0291 0.0 GCC-C-execute-pr57130 0.0215 0.0206 FAIL FAIL GCC-C-execute-pr57131 0.021 0.019 0.0259 0.0 GCC-C-execute-pr57144 0.0199 0.0156 0.0218 0.0 GCC-C-execute-pr57281 0.0171 0.0177 0.03 0.0 GCC-C-execute-pr57321 0.0157 0.0198 0.0241 0.0 GCC-C-execute-pr57344-1 0.0166 0.0197 FAIL FAIL GCC-C-execute-pr57344-2 0.018 0.021 FAIL FAIL GCC-C-execute-pr57344-3 0.0197 0.0125 FAIL FAIL GCC-C-execute-pr57344-4 0.0177 0.0164 FAIL FAIL GCC-C-execute-pr57568 0.0188 0.0128 FAIL FAIL GCC-C-execute-pr57829 0.0228 0.0148 FAIL FAIL GCC-C-execute-pr57860 0.0223 0.02 FAIL FAIL GCC-C-execute-pr57861 0.0169 0.0201 0.0873 0.0 GCC-C-execute-pr57875 0.0141 0.0189 FAIL FAIL GCC-C-execute-pr57876 0.0169 0.0172 0.0312 0.0 GCC-C-execute-pr57877 0.0179 0.0178 0.0295 0.0 GCC-C-execute-pr58209 0.0147 0.015 FAIL FAIL GCC-C-execute-pr58277-1 0.026 0.0168 FAIL FAIL GCC-C-execute-pr58277-2 0.0164 0.0178 FAIL FAIL GCC-C-execute-pr58364 0.0158 0.0189 0.0278 FAIL GCC-C-execute-pr58365 0.0165 0.0235 FAIL FAIL GCC-C-execute-pr58385 0.0177 0.0168 FAIL FAIL GCC-C-execute-pr58387 0.0225 0.0144 0.0246 0.0 GCC-C-execute-pr58419 0.0197 0.0174 FAIL FAIL GCC-C-execute-pr58431 0.0169 0.0156 FAIL FAIL GCC-C-execute-pr58564 0.0218 0.0174 FAIL FAIL GCC-C-execute-pr58570 0.0169 0.0157 0.0316 FAIL GCC-C-execute-pr58574 0.04 0.0418 FAIL FAIL GCC-C-execute-pr58640 0.0204 0.0173 0.0288 0.0 GCC-C-execute-pr58640-2 0.0155 0.0198 0.0283 0.0 GCC-C-execute-pr58662 0.0171 0.0191 FAIL FAIL GCC-C-execute-pr58726 0.0222 0.022 0.0328 FAIL GCC-C-execute-pr58831 0.0217 0.0164 0.0346 0.0 GCC-C-execute-pr58943 0.0237 0.0156 0.0251 FAIL GCC-C-execute-pr58984 0.0195 0.0235 FAIL FAIL GCC-C-execute-pr59014 0.0193 0.0178 FAIL FAIL GCC-C-execute-pr59014-2 0.0192 0.0169 0.032 0.0 GCC-C-execute-pr59101 0.0141 0.0165 0.0252 0.0 GCC-C-execute-pr59221 0.0227 0.0196 0.0281 FAIL GCC-C-execute-pr59229 0.0174 0.0186 0.029 FAIL GCC-C-execute-pr59358 0.0177 0.0231 0.031 FAIL GCC-C-execute-pr59387 0.014 0.0159 FAIL FAIL GCC-C-execute-pr59388 0.0152 0.019 0.0242 0.0 GCC-C-execute-pr59413 0.017 0.0167 0.0251 0.0 GCC-C-execute-pr59643 0.0193 0.0177 0.0374 FAIL GCC-C-execute-pr59747 0.0223 0.0166 0.0326 0.0 GCC-C-execute-pr60017 0.0263 0.0167 FAIL FAIL GCC-C-execute-pr60062 0.0239 0.0187 0.0273 FAIL GCC-C-execute-pr60072 0.0197 0.0225 0.023 0.0 GCC-C-execute-pr60454 0.0238 0.0197 0.0276 0.0 GCC-C-execute-pr60822 0.0195 0.0184 0.0289 0.0 GCC-C-execute-pr60960 0.0181 FAIL FAIL FAIL GCC-C-execute-pr61306-1 0.02 0.0134 0.0292 0.0 GCC-C-execute-pr61306-2 0.0222 0.0196 0.0252 0.0 GCC-C-execute-pr61306-3 0.0162 0.021 0.0297 FAIL GCC-C-execute-pr61375 0.0144 0.017 FAIL FAIL GCC-C-execute-pr61517 0.02 0.0212 0.0241 FAIL GCC-C-execute-pr61673 0.0171 0.0197 FAIL FAIL GCC-C-execute-pr61682 0.0175 0.0187 0.0256 FAIL GCC-C-execute-pr61725 0.0204 0.0229 0.0264 FAIL GCC-C-execute-pr62151 0.021 0.0198 FAIL FAIL GCC-C-execute-pr63209 0.0195 0.0202 0.0321 0.0 GCC-C-execute-pr63302 0.0204 0.0179 FAIL FAIL GCC-C-execute-pr63641 0.0248 0.0199 FAIL FAIL GCC-C-execute-pr63659 0.0212 0.0154 0.029 FAIL GCC-C-execute-pr63843 0.0178 FAIL FAIL FAIL GCC-C-execute-pr64006 0.0208 0.0192 0.0336 FAIL GCC-C-execute-pr64255 0.0149 0.014 0.0311 FAIL GCC-C-execute-pr64260 0.0221 0.0237 0.0263 FAIL GCC-C-execute-pr64682 0.0157 0.0187 0.0277 FAIL GCC-C-execute-pr64718 0.0238 0.0192 0.0311 0.0 GCC-C-execute-pr64756 0.0232 0.0161 0.0315 FAIL GCC-C-execute-pr64957 0.02 0.0185 0.0233 0.0 GCC-C-execute-pr64979 0.019 0.0217 FAIL FAIL GCC-C-execute-pr65053-1 0.0208 0.019 FAIL FAIL GCC-C-execute-pr65053-2 0.0178 0.0207 FAIL FAIL GCC-C-execute-pr65170 0.0185 0.0179 FAIL FAIL GCC-C-execute-pr65215-1 0.0232 0.02 FAIL FAIL GCC-C-execute-pr65215-2 0.0184 0.016 FAIL FAIL GCC-C-execute-pr65215-3 0.0223 0.0181 FAIL FAIL GCC-C-execute-pr65215-4 0.0191 0.0155 FAIL FAIL GCC-C-execute-pr65215-5 0.0191 0.021 0.0277 0.0 GCC-C-execute-pr65216 0.0215 0.0182 0.0266 0.0 GCC-C-execute-pr65369 0.0243 0.0266 FAIL FAIL GCC-C-execute-pr65401 0.0208 0.0251 0.0416 FAIL GCC-C-execute-pr65418-1 0.0208 0.0226 FAIL FAIL GCC-C-execute-pr65418-2 0.0226 0.0191 FAIL FAIL GCC-C-execute-pr65427 0.0169 0.0199 FAIL FAIL GCC-C-execute-pr65648 0.0196 0.0212 FAIL FAIL GCC-C-execute-pr65956 0.0205 0.0234 FAIL FAIL GCC-C-execute-pr66187 0.0162 0.0234 0.0239 FAIL GCC-C-execute-pr66233 0.0206 0.0213 0.0224 0.0 GCC-C-execute-pr66556 0.0238 0.0218 0.031 0.0 GCC-C-execute-pr66757 0.0226 0.0177 0.0241 FAIL GCC-C-execute-pr66940 0.0214 0.0154 0.0217 0.0 GCC-C-execute-pr67037 0.0225 0.0186 FAIL FAIL GCC-C-execute-pr67226 0.0228 0.0158 0.0278 FAIL GCC-C-execute-pr67714 0.0158 0.0206 0.0264 0.0 GCC-C-execute-pr67781 0.0179 0.0221 0.0287 FAIL GCC-C-execute-pr67929_1 0.0159 0.0178 0.0211 0.0 GCC-C-execute-pr68143_1 0.0198 0.016 0.0186 FAIL GCC-C-execute-pr68185 0.0187 0.0217 0.0306 FAIL GCC-C-execute-pr68249 0.0213 0.0218 FAIL FAIL GCC-C-execute-pr68250 0.0132 0.0177 FAIL FAIL GCC-C-execute-pr68321 0.0191 0.0178 FAIL FAIL GCC-C-execute-pr68328 0.0167 0.0204 FAIL FAIL GCC-C-execute-pr68376-1 0.0235 0.0179 0.0246 FAIL GCC-C-execute-pr68376-2 0.019 0.023 FAIL FAIL GCC-C-execute-pr68381 0.0221 0.02 0.0197 FAIL GCC-C-execute-pr68390 0.0202 0.0236 FAIL FAIL GCC-C-execute-pr68506 0.0209 0.0186 FAIL FAIL GCC-C-execute-pr68532 0.0171 0.0155 FAIL FAIL GCC-C-execute-pr68624 0.0156 0.0219 FAIL FAIL GCC-C-execute-pr68648 0.0174 0.0129 FAIL FAIL GCC-C-execute-pr68841 0.0208 0.0195 0.0278 FAIL GCC-C-execute-pr68911 0.0136 0.0173 FAIL FAIL GCC-C-execute-pr69097-1 0.0174 0.0197 0.0258 0.0 GCC-C-execute-pr69097-2 0.0199 0.0219 FAIL FAIL GCC-C-execute-pr69320-1 0.0331 0.0343 0.1892 FAIL GCC-C-execute-pr69320-2 0.0326 0.0351 FAIL FAIL GCC-C-execute-pr69320-3 0.0342 0.035 0.1792 FAIL GCC-C-execute-pr69320-4 0.034 0.0359 0.1903 FAIL GCC-C-execute-pr69403 0.0189 0.0181 0.0263 FAIL GCC-C-execute-pr69447 0.0171 0.0174 FAIL FAIL GCC-C-execute-pr69691 0.0214 0.0161 FAIL FAIL GCC-C-execute-pr70005 0.018 0.0161 0.0239 FAIL GCC-C-execute-pr70127 0.0216 0.0203 0.0264 FAIL GCC-C-execute-pr70222-1 0.0205 0.0166 0.0326 FAIL GCC-C-execute-pr70222-2 0.0187 0.018 FAIL FAIL GCC-C-execute-pr70429 0.0157 0.0148 FAIL FAIL GCC-C-execute-pr70460 0.0225 0.0206 FAIL FAIL GCC-C-execute-pr70566 0.0165 0.0167 0.0294 0.0 GCC-C-execute-pr70586 0.0167 0.0157 0.0232 0.0 GCC-C-execute-pr70602 0.0181 0.016 0.029 0.0 GCC-C-execute-pr70903 0.0146 0.0145 FAIL FAIL GCC-C-execute-pr71083 0.0177 0.0138 0.0276 0.0 GCC-C-execute-pr71335 0.0157 0.0191 0.0215 0.0 GCC-C-execute-pr71550 0.021 0.0219 0.0208 0.0 GCC-C-execute-pr71554 0.02 0.0131 0.0296 FAIL GCC-C-execute-pr71626-1 0.0176 0.0176 FAIL FAIL GCC-C-execute-pr71626-2 0.016 0.0198 FAIL FAIL GCC-C-execute-pr71631 0.0216 0.0205 FAIL FAIL GCC-C-execute-pr71700 0.0193 0.0192 0.0232 0.0 GCC-C-execute-pr7284-1 0.0127 0.017 0.0253 0.0 GCC-C-execute-pr77718 0.0197 0.0149 0.0248 FAIL GCC-C-execute-pr77766 0.0206 0.0204 FAIL FAIL GCC-C-execute-pr77767 0.0156 0.0159 0.0245 FAIL GCC-C-execute-pr78170 0.0199 0.0198 0.0298 0.0 GCC-C-execute-pr78378 0.0227 0.0183 FAIL FAIL GCC-C-execute-pr78436 0.0222 0.019 0.0235 0.0 GCC-C-execute-pr78438 0.0179 0.0177 FAIL FAIL GCC-C-execute-pr78477 0.0186 0.0167 FAIL FAIL GCC-C-execute-pr78559 0.0168 0.0207 FAIL FAIL GCC-C-execute-pr78586 0.0186 0.0181 0.0243 FAIL GCC-C-execute-pr78617 0.0172 0.0184 0.026 FAIL GCC-C-execute-pr78622 0.0165 0.0198 FAIL FAIL GCC-C-execute-pr78675 0.0155 0.0188 0.0578 0.0 GCC-C-execute-pr78720 0.0169 0.0195 FAIL FAIL GCC-C-execute-pr78726 0.018 0.0182 FAIL FAIL GCC-C-execute-pr78791 0.0172 0.0171 0.0233 0.0 GCC-C-execute-pr78856 0.0169 0.0157 0.0286 0.0 GCC-C-execute-pr79121 0.0174 0.014 0.0295 0.0 GCC-C-execute-pr79286 0.0156 0.0158 0.0211 FAIL GCC-C-execute-pr79327 0.0182 0.0202 0.0348 FAIL GCC-C-execute-pr79354 0.0148 0.017 FAIL FAIL GCC-C-execute-pr79388 0.0189 0.0239 0.0265 FAIL GCC-C-execute-pr79450 0.0167 0.0227 FAIL FAIL GCC-C-execute-pr79737-1 0.0172 0.0169 0.0266 0.0 GCC-C-execute-pr79737-2 0.0198 0.0147 FAIL FAIL GCC-C-execute-pr80153 0.0139 0.0198 FAIL FAIL GCC-C-execute-pr80421 0.0224 0.0256 FAIL FAIL GCC-C-execute-pr80501 0.0176 0.0226 0.0247 0.0 GCC-C-execute-pr81281 0.0153 0.0184 0.0299 FAIL GCC-C-execute-pr81423 0.016 0.0149 0.0294 0.0 GCC-C-execute-pr81503 0.0194 0.0204 0.026 0.0 GCC-C-execute-pr81555 0.0166 0.0198 0.0284 FAIL GCC-C-execute-pr81556 0.0249 0.0163 0.0266 FAIL GCC-C-execute-pr81588 0.0199 0.016 FAIL FAIL GCC-C-execute-pr81913 0.0169 0.0193 0.0267 FAIL GCC-C-execute-pr82192 0.0192 0.016 0.0279 FAIL GCC-C-execute-pr82387 0.0174 0.0232 0.0295 0.0 GCC-C-execute-pr82388 0.0174 0.021 FAIL FAIL GCC-C-execute-pr82524 0.0234 0.0211 FAIL FAIL GCC-C-execute-pr82954 0.0156 0.0205 FAIL FAIL GCC-C-execute-pr83269 0.014 0.0142 0.0186 0.0 GCC-C-execute-pr83298 0.0224 0.0202 0.024 FAIL GCC-C-execute-pr83362 0.0199 0.0202 0.0268 FAIL GCC-C-execute-pr83383 0.0162 0.016 0.0284 FAIL GCC-C-execute-pr83477 0.0186 0.0178 0.0248 FAIL GCC-C-execute-pr84339 0.0178 0.0195 FAIL FAIL GCC-C-execute-pr84478 0.0463 0.0463 FAIL FAIL GCC-C-execute-pr84521 0.021 0.0245 FAIL FAIL GCC-C-execute-pr84524 0.0203 0.0169 FAIL FAIL GCC-C-execute-pr84748 0.022 0.0196 0.0262 FAIL GCC-C-execute-pr85095 0.0175 0.0246 FAIL FAIL GCC-C-execute-pr85156 0.0167 0.0157 FAIL FAIL GCC-C-execute-pr85169 0.0149 0.0201 FAIL FAIL GCC-C-execute-pr85529-1 0.022 0.0218 FAIL FAIL GCC-C-execute-pr85529-2 0.0155 0.016 0.0227 0.0 GCC-C-execute-pr85582-1 0.0149 0.0144 FAIL FAIL GCC-C-execute-pr85582-2 0.0186 0.0228 FAIL FAIL GCC-C-execute-pr85582-3 0.0262 0.0176 FAIL FAIL GCC-C-execute-pr85756 0.022 0.0177 FAIL FAIL GCC-C-execute-pr86231 0.0177 0.0189 FAIL FAIL GCC-C-execute-pr86492 0.0198 0.0232 FAIL FAIL GCC-C-execute-pr86528 0.0231 0.016 FAIL FAIL GCC-C-execute-pr86714 0.0182 0.019 FAIL FAIL GCC-C-execute-pr86844 0.0206 0.0155 FAIL FAIL GCC-C-execute-pr87053 0.0189 0.0181 FAIL FAIL GCC-C-execute-pr87290 0.0189 0.0185 0.0368 FAIL GCC-C-execute-pr87623 0.0192 0.0159 0.0327 0.0 GCC-C-execute-pr88693 0.0239 0.0171 FAIL FAIL GCC-C-execute-pr88714 0.0205 0.024 FAIL FAIL GCC-C-execute-pr88739 0.019 0.0184 FAIL FAIL GCC-C-execute-pr88904 0.0208 0.0182 FAIL FAIL GCC-C-execute-pr89195 0.0137 0.0137 0.0218 0.0 GCC-C-execute-pr89369 0.0234 0.0274 FAIL FAIL GCC-C-execute-pr89434 0.0202 0.0176 0.0241 FAIL GCC-C-execute-pr89634 0.0209 0.0179 FAIL FAIL GCC-C-execute-pr89826 0.0199 0.015 0.0272 FAIL GCC-C-execute-pr90025 0.0188 0.0177 0.03 FAIL GCC-C-execute-pr90949 0.0206 0.0168 0.0276 0.0 GCC-C-execute-pr91137 0.0158 0.0178 0.039 0.0 GCC-C-execute-printf-1 0.0438 0.0366 FAIL FAIL GCC-C-execute-printf-2 0.043 0.045 FAIL FAIL GCC-C-execute-pta-field-1 0.0158 0.0168 0.0278 0.0 GCC-C-execute-pta-field-2 0.0162 0.0168 FAIL FAIL GCC-C-execute-ptr-arith-1 0.0237 0.0199 FAIL FAIL GCC-C-execute-pure-1 0.0165 0.02 FAIL FAIL GCC-C-execute-pushpop_macro 0.0185 0.015 0.0206 0.0 GCC-C-execute-regstack-1 0.0175 0.0233 FAIL FAIL GCC-C-execute-return-addr 0.0247 0.0181 FAIL FAIL GCC-C-execute-scal-to-vec1 FAIL FAIL FAIL FAIL GCC-C-execute-scal-to-vec2 0.0244 FAIL FAIL FAIL GCC-C-execute-scal-to-vec3 0.027 FAIL FAIL FAIL GCC-C-execute-scope-1 0.02 0.0205 FAIL FAIL GCC-C-execute-shiftdi 0.0173 0.0168 0.0298 0.0 GCC-C-execute-shiftdi-2 0.0191 0.0156 FAIL FAIL GCC-C-execute-shiftopt-1 0.0206 0.0187 FAIL 0.0 GCC-C-execute-simd-1 0.0222 FAIL FAIL FAIL GCC-C-execute-simd-2 0.0198 FAIL FAIL FAIL GCC-C-execute-simd-4 0.023 0.021 FAIL FAIL GCC-C-execute-simd-5 0.0175 FAIL FAIL FAIL GCC-C-execute-simd-6 0.0195 FAIL FAIL FAIL GCC-C-execute-ssad-run 0.0179 0.0214 FAIL FAIL GCC-C-execute-stdarg-1 0.0241 0.0281 FAIL FAIL GCC-C-execute-stdarg-2 0.0179 0.0204 FAIL FAIL GCC-C-execute-stdarg-3 0.0235 0.0197 FAIL FAIL GCC-C-execute-stdarg-4 0.0248 0.0198 FAIL FAIL GCC-C-execute-stkalign 0.0158 0.019 FAIL FAIL GCC-C-execute-strcmp-1 0.0232 0.0286 FAIL FAIL GCC-C-execute-strcpy-1 0.0298 0.0228 FAIL FAIL GCC-C-execute-strcpy-2 0.0198 0.018 FAIL FAIL GCC-C-execute-strct-pack-1 0.0173 0.0259 0.0262 0.0 GCC-C-execute-strct-pack-2 0.0114 0.0176 0.0275 0.0 GCC-C-execute-strct-pack-3 0.0177 0.0177 FAIL FAIL GCC-C-execute-strct-pack-4 0.0185 0.0197 0.0237 0.0 GCC-C-execute-strct-stdarg-1 0.0178 0.0234 FAIL FAIL GCC-C-execute-strct-varg-1 0.016 0.0175 FAIL FAIL GCC-C-execute-string-opt-17 0.0208 0.0174 FAIL FAIL GCC-C-execute-string-opt-18 0.021 0.0216 FAIL FAIL GCC-C-execute-string-opt-5 0.017 0.0284 FAIL FAIL GCC-C-execute-strlen-1 0.0193 0.027 FAIL FAIL GCC-C-execute-strlen-2 0.0482 0.0476 FAIL FAIL GCC-C-execute-strlen-3 0.0352 0.0458 FAIL FAIL GCC-C-execute-strlen-4 0.0655 0.0648 FAIL FAIL GCC-C-execute-strlen-5 0.1401 0.1477 FAIL FAIL GCC-C-execute-strlen-6 0.0367 0.0298 FAIL FAIL GCC-C-execute-strlen-7 0.022 0.0182 0.0262 FAIL GCC-C-execute-strncmp-1 0.0298 0.0225 FAIL FAIL GCC-C-execute-struct-aliasing-1 0.0208 0.0173 0.0243 0.0 GCC-C-execute-struct-cpy-1 0.0164 0.0194 FAIL FAIL GCC-C-execute-struct-ini-1 0.0223 0.0198 FAIL FAIL GCC-C-execute-struct-ini-2 0.0151 0.016 0.0216 FAIL GCC-C-execute-struct-ini-3 0.0129 0.0205 0.0257 0.0 GCC-C-execute-struct-ini-4 0.0117 0.0199 0.0201 0.0 GCC-C-execute-struct-ret-1 0.028 0.0357 FAIL FAIL GCC-C-execute-struct-ret-2 0.0181 0.0138 0.0242 0.0 GCC-C-execute-switch-1 0.0178 0.0258 FAIL FAIL GCC-C-execute-tstdi-1 0.02 0.0237 FAIL FAIL GCC-C-execute-usad-run 0.0201 0.0234 FAIL FAIL GCC-C-execute-user-printf 0.0473 0.0384 FAIL FAIL GCC-C-execute-usmul 0.0242 0.0191 0.0291 0.0 GCC-C-execute-va-arg-1 0.0194 0.0182 FAIL FAIL GCC-C-execute-va-arg-10 0.0259 0.0274 FAIL FAIL GCC-C-execute-va-arg-11 0.0167 0.0222 FAIL FAIL GCC-C-execute-va-arg-12 0.0192 0.0248 FAIL FAIL GCC-C-execute-va-arg-13 0.0224 0.0199 FAIL FAIL GCC-C-execute-va-arg-14 0.0149 0.0218 FAIL FAIL GCC-C-execute-va-arg-15 0.0212 0.0228 FAIL FAIL GCC-C-execute-va-arg-16 0.0201 0.0258 FAIL FAIL GCC-C-execute-va-arg-17 0.0213 0.0205 FAIL FAIL GCC-C-execute-va-arg-18 0.0206 0.0188 FAIL FAIL GCC-C-execute-va-arg-19 0.0187 0.0172 FAIL FAIL GCC-C-execute-va-arg-2 0.0294 0.035 FAIL FAIL GCC-C-execute-va-arg-20 0.0213 0.0189 FAIL FAIL GCC-C-execute-va-arg-21 0.04 0.0379 FAIL FAIL GCC-C-execute-va-arg-22 0.0325 0.0326 FAIL FAIL GCC-C-execute-va-arg-23 0.0186 0.0188 FAIL FAIL GCC-C-execute-va-arg-24 0.0411 0.0518 FAIL FAIL GCC-C-execute-va-arg-26 0.0247 0.0229 FAIL FAIL GCC-C-execute-va-arg-4 0.0213 0.0211 FAIL FAIL GCC-C-execute-va-arg-5 0.0186 0.0149 FAIL FAIL GCC-C-execute-va-arg-6 0.0223 0.0227 FAIL FAIL GCC-C-execute-va-arg-9 0.0282 0.0224 FAIL FAIL GCC-C-execute-va-arg-trap-1 0.0161 0.0184 FAIL FAIL GCC-C-execute-vfprintf-1 0.0382 0.0415 FAIL FAIL GCC-C-execute-vla-dealloc-1 0.0199 0.0157 FAIL FAIL GCC-C-execute-vprintf-1 0.0387 0.0433 FAIL FAIL GCC-C-execute-vrp-1 0.0205 0.0177 0.0315 0.0 GCC-C-execute-vrp-2 0.0189 0.0214 0.0274 0.0 GCC-C-execute-vrp-3 0.0161 0.0198 0.0217 0.0 GCC-C-execute-vrp-4 0.0185 0.0161 0.0291 0.0 GCC-C-execute-vrp-5 0.023 0.0187 0.0269 0.0 GCC-C-execute-vrp-6 0.016 0.0216 0.0337 0.0 GCC-C-execute-vrp-7 0.0185 0.026 0.0255 0.0 GCC-C-execute-wchar_t-1 0.0176 0.0189 FAIL FAIL GCC-C-execute-widechar-1 0.0196 0.0193 0.0236 0.0 GCC-C-execute-widechar-2 0.0149 0.0171 FAIL FAIL GCC-C-execute-widechar-3 0.0167 0.0201 FAIL FAIL GCC-C-execute-zero-struct-1 0.0198 0.0219 FAIL FAIL GCC-C-execute-zero-struct-2 0.022 0.0189 FAIL FAIL GCC-C-execute-zerolen-1 0.0186 0.0175 FAIL FAIL GCC-C-execute-zerolen-2 0.0162 0.0207 FAIL FAIL IntMM 0.0424 0.0382 0.341 FAIL Oscar 0.0441 0.0501 FAIL FAIL Perm 0.0479 0.0405 0.3351 FAIL Puzzle 0.0473 0.0509 0.7293 FAIL Queens 0.0421 0.0384 FAIL FAIL Quicksort 0.0449 0.0438 0.3806 FAIL RealMM 0.0357 0.0403 0.3663 FAIL ReedSolomon 0.0851 0.0803 FAIL FAIL Regression-C++-2003-05-14-array-init 0.0217 FAIL FAIL FAIL Regression-C++-2003-05-14-expr_stmt 0.014 FAIL FAIL FAIL Regression-C++-2003-06-08-BaseType 0.0208 FAIL 0.0202 FAIL Regression-C++-2003-06-08-VirtualFunctions 0.0204 FAIL 0.022 FAIL Regression-C++-2003-06-13-Crasher 0.0189 FAIL FAIL FAIL Regression-C++-2003-08-20-EnumSizeProblem 0.0176 0.0109 0.0197 0.0 Regression-C++-2003-09-29-NonPODsByValue 0.0233 FAIL FAIL FAIL Regression-C++-2008-01-29-ParamAliasesReturn 0.0256 FAIL FAIL FAIL Regression-C++-2011-03-28-Bitfield 0.0226 FAIL FAIL FAIL Regression-C++-BuiltinTypeInfo 0.0244 FAIL FAIL FAIL Regression-C++-ConditionalExpr 0.0279 FAIL FAIL FAIL Regression-C++-class_hierarchy FAIL FAIL FAIL FAIL Regression-C++-ctor_dtor_count 0.0281 FAIL FAIL FAIL Regression-C++-ctor_dtor_count-2 0.017 FAIL FAIL FAIL Regression-C++-custom_section_members 0.0208 FAIL FAIL FAIL Regression-C++-dead_try_block 0.0248 FAIL 0.0266 FAIL Regression-C++-exception_spec_test FAIL FAIL FAIL FAIL Regression-C++-fixups 0.0352 FAIL FAIL FAIL Regression-C++-function_try_block 0.0254 FAIL FAIL FAIL Regression-C++-global_ctor 0.0271 FAIL FAIL FAIL Regression-C++-global_type 0.0217 0.0258 FAIL FAIL Regression-C++-inlined_cleanup 0.0268 FAIL FAIL FAIL Regression-C++-ofstream_ctor FAIL FAIL FAIL FAIL Regression-C++-pointer_member FAIL FAIL FAIL FAIL Regression-C++-pointer_method 0.0254 FAIL FAIL FAIL Regression-C++-pointer_method2 0.0256 FAIL FAIL FAIL Regression-C++-recursive-throw 0.0383 FAIL FAIL FAIL Regression-C++-short_circuit_dtor 0.029 FAIL FAIL FAIL Regression-C++-simple_rethrow 0.0228 FAIL FAIL FAIL Regression-C++-simple_throw 0.0218 FAIL FAIL FAIL Regression-C++-throw_rethrow_test 0.0138 FAIL FAIL FAIL Regression-C-2003-05-14-initialize-string 0.0214 0.0175 FAIL FAIL Regression-C-2003-05-21-BitfieldHandling 0.0242 0.0181 FAIL FAIL Regression-C-2003-05-21-UnionBitfields 0.0527 0.0533 FAIL FAIL Regression-C-2003-05-21-UnionTest 0.0268 0.0335 FAIL FAIL Regression-C-2003-05-22-LocalTypeTest 0.0229 0.0305 FAIL FAIL Regression-C-2003-05-22-VarSizeArray 0.0246 0.0324 FAIL FAIL Regression-C-2003-05-23-TransparentUnion 0.0177 0.0265 FAIL FAIL Regression-C-2003-06-16-InvalidInitializer 0.0173 0.0186 0.0208 0.0 Regression-C-2003-06-16-VolatileError 0.0188 0.0147 0.0207 0.0 Regression-C-2003-10-12-GlobalVarInitializers 0.0234 0.0296 FAIL FAIL Regression-C-2004-02-03-AggregateCopy 0.0284 0.0263 0.0798 FAIL Regression-C-2004-03-15-IndirectGoto 0.0223 0.0304 FAIL FAIL Regression-C-2004-08-12-InlinerAndAllocas 0.0249 0.0282 0.0791 FAIL Regression-C-2005-05-06-LongLongSignedShift 0.0208 0.0271 0.021 0.0 Regression-C-2008-01-07-LongDouble 0.0209 0.0281 0.065 FAIL Regression-C-ConstructorDestructorAttributes 0.0217 FAIL 0.0631 FAIL Regression-C-DuffsDevice 0.0289 0.03 FAIL FAIL Regression-C-PR10189 0.0206 0.0225 FAIL FAIL Regression-C-PR1386 0.0246 0.0283 FAIL FAIL Regression-C-PR491 0.0292 0.0294 FAIL FAIL Regression-C-PR640 0.0317 0.0289 FAIL FAIL Regression-C-badidx 0.0438 0.0364 0.2761 FAIL Regression-C-bigstack 0.0389 0.0444 0.3402 FAIL Regression-C-callargs 0.0273 0.0312 0.0872 FAIL Regression-C-casts 0.0459 0.0499 FAIL FAIL Regression-C-compare 0.0332 0.0446 FAIL FAIL Regression-C-float16-smoke 0.0227 0.0244 0.0753 FAIL Regression-C-globalrefs 0.0346 0.0331 FAIL FAIL Regression-C-matrixTranspose 0.0228 0.0223 FAIL FAIL Regression-C-pointer_arithmetic 0.016 0.0171 0.0253 0.0 Regression-C-sumarray 0.0367 0.0376 0.291 FAIL Regression-C-sumarray2d 0.0374 0.0419 0.2952 FAIL Regression-C-sumarraymalloc 0.0401 0.04 FAIL FAIL Regression-C-test_indvars 0.0277 0.0309 0.1011 FAIL Regression-C-testtrace 0.0316 0.0349 0.1151 FAIL Regression-C-uint64_to_float 0.0382 0.0338 FAIL FAIL Shootout-C++-ackermann FAIL FAIL FAIL FAIL Shootout-C++-ary FAIL FAIL FAIL FAIL Shootout-C++-ary2 FAIL FAIL FAIL FAIL Shootout-C++-ary3 FAIL FAIL FAIL FAIL Shootout-C++-except FAIL FAIL FAIL FAIL Shootout-C++-fibo FAIL FAIL FAIL FAIL Shootout-C++-hash FAIL FAIL FAIL FAIL Shootout-C++-hash2 FAIL FAIL FAIL FAIL Shootout-C++-heapsort FAIL FAIL FAIL FAIL Shootout-C++-hello FAIL FAIL FAIL FAIL Shootout-C++-lists FAIL FAIL FAIL FAIL Shootout-C++-lists1 FAIL FAIL FAIL FAIL Shootout-C++-matrix FAIL FAIL FAIL FAIL Shootout-C++-methcall FAIL FAIL FAIL FAIL Shootout-C++-moments FAIL FAIL FAIL FAIL Shootout-C++-nestedloop FAIL FAIL FAIL FAIL Shootout-C++-objinst FAIL FAIL FAIL FAIL Shootout-C++-random FAIL FAIL FAIL FAIL Shootout-C++-reversefile FAIL FAIL FAIL FAIL Shootout-C++-sieve FAIL FAIL FAIL FAIL Shootout-C++-spellcheck FAIL FAIL FAIL FAIL Shootout-C++-strcat FAIL FAIL FAIL FAIL Shootout-C++-sumcol FAIL FAIL FAIL FAIL Shootout-C++-wc FAIL FAIL FAIL FAIL Shootout-C++-wordfreq FAIL FAIL FAIL FAIL Shootout-ackermann 0.0442 0.0448 0.2823 FAIL Shootout-ary3 0.0396 0.0452 0.3086 FAIL Shootout-fib2 0.0279 0.0274 FAIL FAIL Shootout-hash 0.0571 0.0484 FAIL FAIL Shootout-heapsort 0.0696 0.0642 FAIL FAIL Shootout-hello 0.0234 0.0306 0.0656 FAIL Shootout-lists 0.0511 0.0523 FAIL FAIL Shootout-matrix 0.0461 0.0444 0.3499 FAIL Shootout-methcall 0.0436 0.0437 FAIL FAIL Shootout-nestedloop 0.0363 0.0456 0.2818 FAIL Shootout-objinst 0.0431 0.0446 FAIL FAIL Shootout-random 0.0666 0.0698 0.5088 FAIL Shootout-sieve 0.0392 0.0402 0.2922 FAIL Shootout-strcat 0.0435 0.0378 FAIL FAIL StructModifyTest 0.0145 0.0169 0.0246 0.0359 TestLoop 0.022 0.0277 0.0824 FAIL Towers 0.0458 0.0431 0.4122 FAIL Treesort 0.0384 0.0421 0.4054 FAIL Vector-build 0.033 FAIL FAIL FAIL Vector-build2 0.0355 FAIL FAIL FAIL Vector-constpool 0.3337 FAIL FAIL FAIL Vector-divides 0.0368 FAIL FAIL FAIL Vector-multiplies 0.0412 FAIL FAIL FAIL Vector-simple 0.0242 FAIL FAIL FAIL Vector-sse.expandfft 0.1406 FAIL FAIL FAIL Vector-sse.isamax 0.1106 FAIL FAIL FAIL Vector-sse.shift 0.1004 FAIL FAIL FAIL Vector-sse.stepfft 0.1304 FAIL FAIL FAIL Vector-sumarray 0.0311 FAIL FAIL FAIL Vector-sumarray-dbl 0.0333 FAIL FAIL FAIL adi 0.0961 0.1142 FAIL FAIL almabench 0.0796 0.0787 FAIL FAIL atax 0.1037 0.0921 FAIL FAIL bicg 0.0989 0.1054 FAIL FAIL bigfib FAIL FAIL FAIL FAIL block-byref-cxxobj-test 0.0213 0.0188 0.0226 0.0226 block-byref-test 0.019 0.0176 0.02 0.0242 block-call-r7674133 0.0139 0.0204 0.0244 0.0242 block-copied-in-cxxobj 0.0172 0.0241 0.0228 0.0216 block-copied-in-cxxobj-1 0.0127 0.0165 0.0235 0.0229 blockstret 0.0155 0.0139 0.0243 0.022 byval-alignment 0.0213 0.0303 FAIL FAIL cast 0.0646 FAIL FAIL FAIL cast-bug 0.0179 0.0197 0.0247 0.0325 cast2 0.0218 FAIL FAIL FAIL ccc 0.0349 0.0418 FAIL FAIL cholesky 0.1078 0.1034 FAIL FAIL chomp 0.0497 0.0496 FAIL FAIL classify 2.6541 2.6051 FAIL FAIL conditional-gnu-ext 0.0188 0.0185 FAIL FAIL conditional-gnu-ext-cxx FAIL FAIL FAIL FAIL correlation 0.097 0.0905 FAIL FAIL covariance 0.0959 0.0912 FAIL FAIL deriche 0.1041 0.1063 FAIL FAIL div 0.0357 0.0385 FAIL FAIL doitgen 0.1043 0.1135 FAIL FAIL dry 0.0453 0.0474 FAIL FAIL dt 0.0719 0.0626 0.5255 FAIL durbin 0.1002 0.1136 FAIL FAIL evalloop 0.0374 0.0379 FAIL FAIL exptree 0.0467 0.0445 FAIL FAIL factor 0.0388 0.0472 FAIL FAIL fannkuch 0.0448 0.0387 FAIL FAIL fasta 0.0456 0.0506 FAIL FAIL fbench 0.0755 0.0845 FAIL FAIL fdtd-2d 0.1027 0.1017 FAIL FAIL ffbench 0.0744 0.0742 FAIL FAIL fftbench FAIL FAIL FAIL FAIL fldry 0.0589 0.0502 FAIL FAIL flops 0.0823 0.0769 FAIL FAIL flops-1 0.0568 0.0556 0.2489 FAIL flops-2 0.0574 0.0565 0.2372 FAIL flops-3 0.062 0.0563 0.2449 FAIL flops-4 0.0638 0.0577 0.271 FAIL flops-5 0.0575 0.0631 0.2799 FAIL flops-6 0.0552 0.0571 0.2683 FAIL flops-7 0.052 0.0502 0.2452 FAIL flops-8 0.0603 0.0649 0.2841 FAIL floyd-warshall 0.0975 0.0979 FAIL FAIL fp-convert 0.034 0.0456 0.2934 FAIL functionobjects FAIL FAIL FAIL FAIL gcc-loops FAIL FAIL FAIL FAIL gemm 0.109 0.0908 FAIL FAIL gemver 0.0812 0.0916 FAIL FAIL gesummv 0.0978 0.1029 FAIL FAIL gramschmidt 0.0961 0.1046 FAIL FAIL heat-3d 0.1074 0.1196 FAIL FAIL himenobmtxpa 0.0678 0.0612 FAIL FAIL huffbench 0.079 0.0777 FAIL FAIL index-select FAIL FAIL FAIL FAIL initp1 0.0341 FAIL FAIL FAIL jacobi-1d 0.0989 0.0984 FAIL FAIL jacobi-2d 0.1025 0.1065 FAIL FAIL linpack-pc 0.0948 0.0933 FAIL FAIL loop_unroll FAIL FAIL FAIL FAIL lowercase 0.0339 0.0363 FAIL FAIL lpbench 0.0756 0.0724 0.9335 FAIL lu 0.0961 0.1083 FAIL FAIL ludcmp 0.1107 0.1082 FAIL FAIL mandel 0.0558 0.0536 FAIL FAIL mandel-2 0.0508 0.0407 FAIL FAIL mandel-text 0.0304 FAIL FAIL FAIL matmul_f64_4x4 0.0392 0.0356 FAIL FAIL matrix-types-spec 0.0257 0.019 0.0182 FAIL member-function-pointers 0.0216 FAIL FAIL FAIL misr 0.0514 0.0491 FAIL FAIL ms_struct-bitfield 0.0231 FAIL FAIL FAIL ms_struct-bitfield-1 0.0213 FAIL FAIL FAIL ms_struct-bitfield-init 0.0365 FAIL FAIL FAIL ms_struct-bitfield-init-1 0.0334 FAIL FAIL FAIL ms_struct_pack_layout 0.0312 FAIL FAIL FAIL ms_struct_pack_layout-1 0.0204 FAIL 0.0238 0.0254 mvt 0.1042 0.0989 FAIL FAIL n-body 0.0696 0.0803 0.7125 FAIL nsieve-bits 0.0389 0.0497 FAIL FAIL nussinov 0.1028 0.1034 FAIL FAIL oopack_v1p8 FAIL FAIL FAIL FAIL oourafft 0.1084 0.1096 FAIL FAIL outer-loop-vect FAIL FAIL FAIL FAIL partialsums 0.0599 FAIL FAIL FAIL perlin 0.0602 0.0617 FAIL FAIL pi 0.0278 0.022 0.1075 FAIL printargs 0.0255 0.0282 FAIL FAIL puzzle 0.039 0.0383 FAIL FAIL queens 0.0523 0.047 FAIL FAIL ray FAIL FAIL FAIL FAIL recurrences FAIL FAIL FAIL FAIL recursive 0.0294 0.0348 0.1158 FAIL rem 0.0679 0.0701 FAIL FAIL revertBits 0.0474 0.0408 FAIL FAIL richards_benchmark 0.0448 0.0547 FAIL FAIL runtime-checks FAIL FAIL FAIL FAIL salsa20 0.0522 0.0574 0.8094 FAIL seidel-2d 0.1077 0.0994 FAIL FAIL shr 0.0283 0.0293 0.1463 FAIL simple_types_constant_folding FAIL FAIL FAIL FAIL simple_types_loop_invariant FAIL FAIL FAIL FAIL smallpt FAIL FAIL FAIL FAIL spectral-norm 0.0639 0.067 FAIL FAIL sphereflake FAIL FAIL FAIL FAIL spirit FAIL FAIL FAIL FAIL stdthreadbug FAIL FAIL FAIL FAIL stepanov_abstraction FAIL FAIL FAIL FAIL stepanov_container FAIL FAIL FAIL FAIL stepanov_v1p2 FAIL FAIL FAIL FAIL stepanov_vector FAIL FAIL FAIL FAIL stmtexpr 0.0235 FAIL FAIL FAIL symm 0.0988 0.0975 FAIL FAIL syr2k 0.0993 0.1025 FAIL FAIL syrk 0.1073 0.1054 FAIL FAIL testcase-CGExprConstant 0.027 0.0263 FAIL FAIL testcase-Expr-1 0.0273 0.0253 0.0988 FAIL testcase-ExprConstant-1 0.0332 0.0301 FAIL FAIL testcase-ExprConstant-2 0.0239 0.0271 FAIL FAIL testcase-InstCombine-1 0.0337 0.0244 0.097 FAIL testcase-Value-1 0.0326 0.0339 FAIL FAIL tls 0.0371 0.0503 FAIL FAIL trisolv 0.0972 0.098 FAIL FAIL trmm 0.1027 0.1125 FAIL FAIL vla 0.0316 0.0287 FAIL FAIL whetstone 0.0891 0.0768 FAIL FAIL x86-dyn_stack_alloc_realign 0.0384 FAIL FAIL FAIL x86-dyn_stack_alloc_realign2 0.0418 FAIL FAIL FAIL"},{"location":"Benchmarks/sv-comp-results/","title":"SV-Comp","text":"HighLevel with Unsupported HighLevel Total 22632/23498 22632/23498 sv-benchmarks/c/array-cav19 13/13 13/13 sv-benchmarks/c/array-crafted 43/43 43/43 sv-benchmarks/c/array-examples 96/96 96/96 sv-benchmarks/c/array-fpi 138/138 138/138 sv-benchmarks/c/array-industry-pattern 17/17 17/17 sv-benchmarks/c/array-lopstr16 11/11 11/11 sv-benchmarks/c/array-memsafety-realloc 3/3 3/3 sv-benchmarks/c/array-memsafety 65/65 65/65 sv-benchmarks/c/array-multidimensional 20/20 20/20 sv-benchmarks/c/array-patterns 30/30 30/30 sv-benchmarks/c/array-programs 16/16 16/16 sv-benchmarks/c/array-tiling 29/29 29/29 sv-benchmarks/c/aws-c-common 344/344 344/344 sv-benchmarks/c/bitvector-loops 3/3 3/3 sv-benchmarks/c/bitvector-regression 10/10 10/10 sv-benchmarks/c/bitvector 70/70 70/70 sv-benchmarks/c/busybox-1.22.0-todo 16/16 16/16 sv-benchmarks/c/busybox-1.22.0 79/79 79/79 sv-benchmarks/c/combinations 671/671 671/671 sv-benchmarks/c/coreutils-v8.31 0/120 0/120 sv-benchmarks/c/ddv-machzwd 13/13 13/13 sv-benchmarks/c/eca-programs 106/106 106/106 sv-benchmarks/c/eca-rers2012 1140/1140 1140/1140 sv-benchmarks/c/eca-rers2018 9/9 9/9 sv-benchmarks/c/float-benchs 82/82 82/82 sv-benchmarks/c/float-newlib 265/265 265/265 sv-benchmarks/c/floats-cbmc-regression 31/31 31/31 sv-benchmarks/c/floats-cdfpl 40/40 40/40 sv-benchmarks/c/floats-esbmc-regression 44/44 44/44 sv-benchmarks/c/floats-nonlinear 15/15 15/15 sv-benchmarks/c/forester-heap 40/40 40/40 sv-benchmarks/c/fuzzle-programs 15/15 15/15 sv-benchmarks/c/goblint-coreutils 0/21 0/21 sv-benchmarks/c/goblint-regression 220/220 220/220 sv-benchmarks/c/hardness-nfm22 4012/4012 4012/4012 sv-benchmarks/c/hardware-verification-array 12/12 12/12 sv-benchmarks/c/hardware-verification-bv 2436/2436 2436/2436 sv-benchmarks/c/heap-data 10/10 10/10 sv-benchmarks/c/heap-manipulation 13/13 13/13 sv-benchmarks/c/intel-tdx-module 290/290 290/290 sv-benchmarks/c/ldv-challenges-todo 2/2 2/2 sv-benchmarks/c/ldv-challenges 178/199 178/199 sv-benchmarks/c/ldv-commit-tester-todo 1/1 1/1 sv-benchmarks/c/ldv-commit-tester 19/33 19/33 sv-benchmarks/c/ldv-consumption 144/161 144/161 sv-benchmarks/c/ldv-linux-3.0-todo 1/1 1/1 sv-benchmarks/c/ldv-linux-3.0 34/38 34/38 sv-benchmarks/c/ldv-linux-3.12-rc1-todo 4/4 4/4 sv-benchmarks/c/ldv-linux-3.12-rc1 30/33 30/33 sv-benchmarks/c/ldv-linux-3.14-races 6/6 6/6 sv-benchmarks/c/ldv-linux-3.14-todo 0/1 0/1 sv-benchmarks/c/ldv-linux-3.14 308/320 308/320 sv-benchmarks/c/ldv-linux-3.16-rc1-todo 57/63 57/63 sv-benchmarks/c/ldv-linux-3.16-rc1 84/93 84/93 sv-benchmarks/c/ldv-linux-3.4-simple 1089/1157 1089/1157 sv-benchmarks/c/ldv-linux-3.7.3 11/11 11/11 sv-benchmarks/c/ldv-linux-4.0-rc1-mav-todo 14/23 14/23 sv-benchmarks/c/ldv-linux-4.0-rc1-mav 61/76 61/76 sv-benchmarks/c/ldv-linux-4.2-rc1-todo 2/4 2/4 sv-benchmarks/c/ldv-linux-4.2-rc1 303/422 303/422 sv-benchmarks/c/ldv-memsafety-bitfields 10/10 10/10 sv-benchmarks/c/ldv-memsafety 95/95 95/95 sv-benchmarks/c/ldv-multiproperty-todo 0/1 0/1 sv-benchmarks/c/ldv-multiproperty 75/98 75/98 sv-benchmarks/c/ldv-races 19/19 19/19 sv-benchmarks/c/ldv-regression 88/88 88/88 sv-benchmarks/c/ldv-sets 8/8 8/8 sv-benchmarks/c/ldv-validator-v0.6-todo 9/10 9/10 sv-benchmarks/c/ldv-validator-v0.6 9/11 9/11 sv-benchmarks/c/ldv-validator-v0.8-todo 5/6 5/6 sv-benchmarks/c/ldv-validator-v0.8 15/17 15/17 sv-benchmarks/c/libvsync 19/19 19/19 sv-benchmarks/c/list-ext-properties 21/21 21/21 sv-benchmarks/c/list-ext2-properties 6/6 6/6 sv-benchmarks/c/list-ext3-properties 16/16 16/16 sv-benchmarks/c/list-properties 13/13 13/13 sv-benchmarks/c/list-simple 40/40 40/40 sv-benchmarks/c/locks 13/13 13/13 sv-benchmarks/c/longjmp 37/37 37/37 sv-benchmarks/c/loop-acceleration 44/44 44/44 sv-benchmarks/c/loop-crafted 9/9 9/9 sv-benchmarks/c/loop-floats-scientific-comp 7/7 7/7 sv-benchmarks/c/loop-industry-pattern 18/18 18/18 sv-benchmarks/c/loop-invariants 10/10 10/10 sv-benchmarks/c/loop-invariants64 1/1 1/1 sv-benchmarks/c/loop-invgen 29/29 29/29 sv-benchmarks/c/loop-lit 33/33 33/33 sv-benchmarks/c/loop-new 11/11 11/11 sv-benchmarks/c/loop-simple 8/8 8/8 sv-benchmarks/c/loop-zilu 58/58 58/58 sv-benchmarks/c/loops-crafted-1 55/55 55/55 sv-benchmarks/c/loops 0/0 0/0 sv-benchmarks/c/loops/todo 77/77 77/77 sv-benchmarks/c/memory-alloca 1/1 1/1 sv-benchmarks/c/memory-model 2/2 2/2 sv-benchmarks/c/memsafety-bftpd 3/3 3/3 sv-benchmarks/c/memsafety-broom 31/31 31/31 sv-benchmarks/c/memsafety-ext 8/8 8/8 sv-benchmarks/c/memsafety-ext2 10/10 10/10 sv-benchmarks/c/memsafety-ext3 18/18 18/18 sv-benchmarks/c/memsafety 43/43 43/43 sv-benchmarks/c/neural-networks 611/611 611/611 sv-benchmarks/c/nla-digbench-scaling 0/0 0/0 sv-benchmarks/c/nla-digbench-scaling/todo 488/488 488/488 sv-benchmarks/c/nla-digbench 0/0 0/0 sv-benchmarks/c/nla-digbench/todo 57/57 57/57 sv-benchmarks/c/ntdrivers-simplified 10/10 10/10 sv-benchmarks/c/ntdrivers 12/12 12/12 sv-benchmarks/c/openbsd-6.2 5/5 5/5 sv-benchmarks/c/openssl-simplified 26/26 26/26 sv-benchmarks/c/openssl 36/36 36/36 sv-benchmarks/c/product-lines 597/597 597/597 sv-benchmarks/c/psyco 11/11 11/11 sv-benchmarks/c/pthread-C-DAC 5/5 5/5 sv-benchmarks/c/pthread-atomic 19/19 19/19 sv-benchmarks/c/pthread-complex 6/6 6/6 sv-benchmarks/c/pthread-deagle 24/24 24/24 sv-benchmarks/c/pthread-divine 16/16 16/16 sv-benchmarks/c/pthread-driver-races 30/30 30/30 sv-benchmarks/c/pthread-ext 76/76 76/76 sv-benchmarks/c/pthread-lit 14/14 14/14 sv-benchmarks/c/pthread-memsafety 3/3 3/3 sv-benchmarks/c/pthread-nondet 6/6 6/6 sv-benchmarks/c/pthread-race-challenges 63/63 63/63 sv-benchmarks/c/pthread-theta 13/13 13/13 sv-benchmarks/c/pthread-wmm 283/283 283/283 sv-benchmarks/c/pthread 65/65 65/65 sv-benchmarks/c/recursified_loop-crafted 9/9 9/9 sv-benchmarks/c/recursified_loop-invariants 9/9 9/9 sv-benchmarks/c/recursified_loop-simple 8/8 8/8 sv-benchmarks/c/recursified_nla-digbench 0/0 0/0 sv-benchmarks/c/recursified_nla-digbench/todo 57/57 57/57 sv-benchmarks/c/recursive-simple 77/77 77/77 sv-benchmarks/c/recursive-with-pointer 2/2 2/2 sv-benchmarks/c/recursive 29/29 29/29 sv-benchmarks/c/reducercommutativity 50/50 50/50 sv-benchmarks/c/regression 4043/4438 4043/4438 sv-benchmarks/c/seq-mthreaded-reduced 316/316 316/316 sv-benchmarks/c/seq-mthreaded 192/192 192/192 sv-benchmarks/c/seq-pthread 20/20 20/20 sv-benchmarks/c/signedintegeroverflow-regression 15/15 15/15 sv-benchmarks/c/sqlite 1/1 1/1 sv-benchmarks/c/systemc 62/62 62/62 sv-benchmarks/c/termination-15-todo 2/2 2/2 sv-benchmarks/c/termination-15 62/62 62/62 sv-benchmarks/c/termination-bwb 41/41 41/41 sv-benchmarks/c/termination-crafted-lit-todo 7/7 7/7 sv-benchmarks/c/termination-crafted-lit 159/159 159/159 sv-benchmarks/c/termination-crafted-todo 6/6 6/6 sv-benchmarks/c/termination-crafted 118/118 118/118 sv-benchmarks/c/termination-dietlibc 32/32 32/32 sv-benchmarks/c/termination-memory-alloca-todo 56/56 56/56 sv-benchmarks/c/termination-memory-alloca 147/147 147/147 sv-benchmarks/c/termination-memory-linkedlists-todo 4/4 4/4 sv-benchmarks/c/termination-memory-linkedlists 18/18 18/18 sv-benchmarks/c/termination-nla 78/78 78/78 sv-benchmarks/c/termination-numeric 23/23 23/23 sv-benchmarks/c/termination-recursive-malloc 28/28 28/28 sv-benchmarks/c/termination-restricted-15-todo 82/82 82/82 sv-benchmarks/c/termination-restricted-15 103/103 103/103 sv-benchmarks/c/unsignedintegeroverflow-sas23 5/5 5/5 sv-benchmarks/c/uthash-2.0.2 192/192 192/192 sv-benchmarks/c/validation-crafted 6/6 6/6 sv-benchmarks/c/verifythis 13/13 13/13 sv-benchmarks/c/weaver 176/176 176/176 sv-benchmarks/c/xcsp 119/119 119/119"},{"location":"Designs/abi/","title":"Abi","text":""},{"location":"Designs/abi/#abi","title":"ABI","text":"<p>VAST partially models ABI specifications for function types and therefore callsites. While the specification goes into details regarding registers, for now VAST only offers lowering similar to what clang codegen does - argument and return types are coerced to types that will easily fit their respective registers once that allocation takes place. There is nothing preventing inclusion of information about registers as well (for example as metadata or separate operations/dialect), however it is not yet implemented.</p> <p>Similar to other transformation in VAST, ABI modelling tries to be as modular as possible and as such can be split into three distinct steps:</p> <ul> <li>Compute classification of types</li> <li>Encode computed classification into module</li> <li>Lower transformed module into some \"executable\" dialect</li> </ul> <p>Main goal for now is to lower function prototypes to match the types produced by clang, so that VAST emitted LLVM can be used as drop-in replacement for clang one.</p> <p>When reading this document please keep in mind that implementation of this feature is still ongoing and therefore particular technical details could change drastically (although we hope that overall design will remain the same).</p>"},{"location":"Designs/abi/#classification","title":"Classification","text":"<p>Mirrors what clang does, but instead of locking the computed information away, we expose the API. In ideal world we would like to keep the algorithm(s, as there may be multiple per different ABIs) generic. This can be achieved by requiring users to implement &amp; provide interface that specifies various details about used types; algorithm will be same when talking about <code>hl</code> or <code>LLVM</code> types after all.</p> <p>Currently, we only provide support for x86 target to assess the approach's applicability.</p>"},{"location":"Designs/abi/#abi-dialect-vast-emit-abi","title":"ABI Dialect (<code>-vast-emit-abi</code>)","text":"<p>Once classification for a function is computed, we need to:</p> <ul> <li>Change function prototype</li> <li>Encode how new types match to the old types + some oddities such as <code>sret</code>.</li> </ul> <p>To facilitate this, VAST contains <code>abi</code> dialect, which operations encode \"high-level\" descriptions of type transformations that can occur during ABI lowering as operations. This is not very different from what clang does, but VAST does it over multiple steps.</p> <p>For functions, type change itself is easy and to mark that function is transformed, <code>abi.func</code> operation is used instead of original one to define the newly formed function. However, as arguments and return types are different, we introduce <code>abi.prologue</code> and <code>abi.epilogue</code> operations.</p> <p>Consider following function we want to lower:</p> <p>Disclaimer: Since <code>abi</code> dialect does not have nice formatting, therefore examples in this section contain some artistic liberty, but semantics (and operations) are preserved.</p> <pre><code>strut Point{ int; int; int; };\n\nint size( struct Point p ) { ... }\n</code></pre> <p>After running the classification, we discover that type of <code>size</code> should be <code>( i64, i32 ) -&gt; i32</code> - both arguments and returned value are passed directly. Therefore we encode it as follows:</p> <pre><code>abi.func size(i64 %arg0_0, i32 %arg0_1 ) -&gt; i32\n{\n    %arg = abi.prologue {\n      %4 = abi.direct %arg0, %arg1 : i64, i32 -&gt; !hl.record&lt;@Point&gt;\n      %5 = abi.yield %4 : !hl.record&lt;@Point&gt; -&gt; !hl.record&lt;@Point&gt;\n    } : !hl.record&lt;@Point&gt;\n\n    // Computation can continue as before, because %arg has a correct type\n\n    %ret = ... value that was previously returned ... -&gt; i32\n    %out = abi.epilogue\n    {\n        %0 = abi.direct %ret: i32 -&gt; i32\n        abi.yield %0\n    }\n    hl.return %out\n}\n</code></pre> <p>In case, there were multiple function arguments, the <code>abi.prologue</code> would return more values.</p> <pre><code>\n%args = abi.prologue -&gt; (hl.struct&lt; \"Point\" &gt;, i32 )\n{\n    %0 = abi.direct %arg0_0, %arg0_1\n    %1 = abi.direct %arg1\n    abi.yield %0, %1\n}\n</code></pre> <p>This design allows easy analysis and subsequent rewrite (as each function has a prologue and epilogue and returned values are explicitly yielded).</p> <p>Callsites are transformed in the same manner (unfortunately, they look more complicated due to nested regions):</p> <pre><code>\n%x = hl.call&lt; \"size\" &gt; %arg: hl.struct&lt; \"Point\" &gt; -&gt; i32\n\n%x = abi.call&lt; \"size\" &gt;: () -&gt; i32\n{\n    %arg0_0, %arg0_1 = abi.call_args: () -&gt; (i64, i32)\n    {\n        %0, %1 = abi.direct %arg\n        abi.yield %0, %1\n    }\n    %x' = hl.call&lt; \"size\" &gt; %arg0_0, &amp;arg0_1 : (i64, i32) -&gt; i32\n    %0 = abi.call_rets : () -&gt; i32\n    {\n        %0 = abi.direct %x' : i32 -&gt; i32\n        abi.yield %0\n    }\n    abi.yield %0\n}\n\n</code></pre> <p>If we had an argument passed as <code>MEMORY</code> class, we would encode it in a similar manner.</p> <pre><code>  ll.func @foo external (%arg0: !hl.record&lt;@data&gt;) -&gt; si32 {\n</code></pre> <p>Gets transformed to:</p> <pre><code>  abi.func @vast.abi.foo external (%arg0: !hl.ptr&lt;!hl.record&lt;@data&gt;&gt;) -&gt; si32 {\n    %0 = abi.prologue {\n      %5 = abi.indirect %arg0 : !hl.ptr&lt;!hl.record&lt;@data&gt;&gt; -&gt; !hl.record&lt;@data&gt;\n      %6 = abi.yield %5 : !hl.record&lt;@data&gt; -&gt; !hl.record&lt;@data&gt;\n    } : !hl.record&lt;@data&gt;\n</code></pre> <p>Call site:</p> <pre><code>    %2 = abi.call_exec @da(%1) {\n      %3 = abi.call_args {\n        %7 = abi.indirect %1 : !hl.record&lt;@data&gt; -&gt; !hl.ptr&lt;!hl.record&lt;@data&gt;&gt;\n        %8 = abi.yield %7 : !hl.ptr&lt;!hl.record&lt;@data&gt;&gt; -&gt; !hl.ptr&lt;!hl.record&lt;@data&gt;&gt;\n      } : !hl.ptr&lt;!hl.record&lt;@data&gt;&gt;\n      %4 = abi.call @da(%3) : (!hl.ptr&lt;!hl.record&lt;@data&gt;&gt;) -&gt; si32\n      %5 = abi.call_rets {\n        %7 = abi.direct %4 : si32 -&gt; si32\n        %8 = abi.yield %7 : si32 -&gt; si32\n      } : si32\n      %6 = abi.yield %5 : si32 -&gt; si32\n    } : (!hl.record&lt;@data&gt;) -&gt; si32\n</code></pre> <p>For now, same <code>abi</code> operations are used to encode transformation in callsite and function (although they change the value in a \"opposite direction\"), this may be later revisited, but for now it is enough to look at the parent operation to determine whether the transformation lies in a function or callsite.</p>"},{"location":"Designs/abi/#lowering-to-some-executable-dialect-vast-lower-abi","title":"Lowering to some executable dialect (<code>-vast-lower-abi</code>)","text":"<p>While <code>abi</code> dialect provides us with all the information required to do the transformation, it does not \"compute\" anything. Rather this lowering is left to a next pass. We hope by splitting the transformation into 2, we achieve the following:</p> <ul> <li>We can implement multiple \"backends\" - whether back to <code>hl</code>, <code>llvm</code> or totally   random dialect of user choice.</li> <li>Re-use existing implementation of classification algorithm.</li> </ul> <p>Currently we lower into our own dialect stack. To continue with our example - after lowering the prologue:</p> <pre><code>  ll.func @size external (%arg0: i64, %arg1: i32) -&gt; si32 {\n    %0 = ll.extract %arg0 {from = 0 : ui64, to = 32 : ui64} : (i64) -&gt; si32\n    %1 = ll.extract %arg0 {from = 32 : ui64, to = 64 : ui64} : (i64) -&gt; si32\n    %2 = hl.initlist %0, %1, %arg1 : (si32, si32, i32) -&gt; !hl.record&lt;@Point&gt;\n    %3 = ll.alloca : !hl.ptr&lt;!hl.record&lt;@Point&gt;&gt;\n    ll.store %3, %2 : !hl.ptr&lt;!hl.record&lt;@Point&gt;&gt;, !hl.record&lt;@Point&gt;\n</code></pre> <p>And the callsite:</p> <pre><code>    %9 = \"ll.gep\"(%8) &lt;{idx = 0 : i32, name = \"a\"}&gt; : (!hl.ptr&lt;!hl.record&lt;@Point&gt;&gt;) -&gt; !hl.ptr&lt;si32&gt;\n    %10 = ll.load %9 : (!hl.ptr&lt;si32&gt;) -&gt; si32\n    %11 = \"ll.gep\"(%8) &lt;{idx = 1 : i32, name = \"b\"}&gt; : (!hl.ptr&lt;!hl.record&lt;@Point&gt;&gt;) -&gt; !hl.ptr&lt;si32&gt;\n    %12 = ll.load %11 : (!hl.ptr&lt;si32&gt;) -&gt; si32\n    %13 = ll.concat %10, %12 : (si32, si32) -&gt; i64\n    %14 = \"ll.gep\"(%8) &lt;{idx = 2 : i32, name = \"c\"}&gt; : (!hl.ptr&lt;!hl.record&lt;@Point&gt;&gt;) -&gt; !hl.ptr&lt;si32&gt;\n    %15 = ll.load %14 : (!hl.ptr&lt;si32&gt;) -&gt; si32\n    %16 = ll.concat %15 : (si32) -&gt; i32\n    %17 = hl.call @size(%13, %16) : (i64, i32) -&gt; si32\n    ll.store %5, %17 : !hl.ptr&lt;si32&gt;, si32\n    %18 = hl.const #core.integer&lt;0&gt; : si32\n</code></pre> <p>We do not use <code>memcpy</code> as we try to preserve as much explicit data flow as we can but nothing really prevents it.</p>"},{"location":"Designs/cpp2-parameters/","title":"Cpp2 parameters","text":""},{"location":"Designs/cpp2-parameters/#lifting-parameter-passing-httpsgithubcomhsutter708blobmain708pdf","title":"Lifting parameter passing [https://github.com/hsutter/708/blob/main/708.pdf]","text":"<p>The proposed way of parameter passing for next-gen c++ is to use declarative style:</p> <pre><code>f(     in X x) // x can be read from\nf(  inout X x) // x can be used in read and write\nf(    out X x) // x can be writen to\nf(   move X x) // x will be moved from\nf(forward X x) // x will be passed along\n</code></pre> <p>Similar holds for return values:</p> <pre><code>auto f()    move X { /* ... */ } // move X to caller\nauto f()         X { /* ... */ } // possibly same\nauto f() forward X { /* ... */ } // pass along X to the caller\n</code></pre> <p>Using the semantics aware vast dialects, we can design a method to automatically modernize code to use a declarative style of parameter passing.</p>"},{"location":"Designs/cpp2-parameters/#examples","title":"Examples","text":"CPP   CPP2  <pre>\nvoid f(const X&amp; x) {\n    g(x);\n}\n</pre> <pre>\nvoid f(in X x) {\n    g(x);\n}\n</pre>  VAST high-level dialect   Transformed to parameter dialect  <pre>\nhl.func @f(%x: !hl.ref&lt; !hl.lvalue&lt; !hl.struct&lt; \"X\" &gt; &gt;, const &gt;) {\n    %0 = hl.call @g(%x) : (!hl.ref&lt; !hl.lvalue&lt; !hl.struct&lt; \"X\" &gt; &gt;, const &gt;) -&gt; !hl.void\n}\n</pre> <pre>\nhl.func @f(%x: !par.in&lt; !hl.lvalue&lt; !hl.struct&lt; \"X\" &gt; &gt; &gt;) {\n    %0 = hl.call @g(%x) : (!par.in&lt; !hl.lvalue&lt; !hl.struct&lt; \"X\" &gt; &gt; &gt;) -&gt; !hl.void\n}\n</pre> <p>The transformation will be probably overapproximating, in cases when the analysis cannot determine the precise category, i.e., <code>inout</code> oveapproximates <code>in</code> and <code>out</code> parameters.</p>"},{"location":"Designs/cpp2-parameters/#dialect","title":"Dialect","text":"<p>The dialect will define type adaptors for each parameter category:</p> <pre><code>!par.in&lt; T &gt;\n!par.out&lt; T &gt;\n!par.inout&lt; T &gt;\n!par.move&lt; T &gt;\n!par.forward&lt; T &gt;\n</code></pre> <p>Parameter categories can also be present as type attributes not to mess up the rest of the type trait system. This needs further investigation.</p> <p>The advantage of the type adaptors we can enforce the correct usage of values. For example, we can forbid usage of <code>out</code> parameter in other places than assignment.</p>"},{"location":"GettingStarted/build/","title":"Build & Run","text":""},{"location":"GettingStarted/build/#dependencies","title":"Dependencies","text":"<p>Currently, it is necessary to use <code>clang</code> (due to <code>gcc</code> bug) to build VAST. On Linux it is also necessary to use <code>lld</code> at the moment.</p> <p>VAST uses <code>llvm-19</code> which can be obtained from the repository provided by LLVM.</p> <p>Before building (for Ubuntu) get all the necessary dependencies by running</p> <pre><code>apt-get install build-essential cmake ninja-build libstdc++-12-dev llvm-19 libmlir-19 libmlir-19-dev mlir-19-tools libclang-19-dev\n</code></pre> <p>or an equivalent command for your operating system of choice.</p>"},{"location":"GettingStarted/build/#instructions","title":"Instructions","text":"<p>To configure project run <code>cmake</code> with following default options. The presets assume <code>vcpkg</code> will be used for dependency management: download and bootstrap vcpkg, then set the <code>VCPKG_ROOT</code> environment variable to the directory it has been downloaded in. In case <code>clang</code> isn't your default compiler prefix the command with <code>CC=clang CXX=clang++</code>. If you want to use system installed <code>llvm</code> and <code>mlir</code> (on Ubuntu) use:</p> <p>The simplest way is to run</p> <pre><code>cmake --workflow release\n</code></pre> <p>If this method doesn't work for you, configure the project in the usual way:</p> <pre><code>cmake --preset default\n</code></pre> <p>To use a specific <code>llvm</code> provide <code>-DCMAKE_PREFIX_PATH=&lt;llvm &amp; mlir instalation paths&gt;</code> option, where <code>CMAKE_PREFIX_PATH</code> points to directory containing <code>LLVMConfig.cmake</code> and <code>MLIRConfig.cmake</code>.</p> <p>Note: vast requires LLVM with RTTI enabled. Use <code>LLVM_ENABLE_RTTI=ON</code> if you build your own LLVM.</p> <p>Finally, build the project:</p> <pre><code>cmake --build --preset release\n</code></pre> <p>Use <code>debug</code> preset for debug build.</p> <p>On Darwin, to make vast able to link binaries with the default sysroot without having to specify additional flags, use the <code>VAST_DEFAULT_SYSROOT</code> CMake flag, e.g.</p> <pre><code>-DVAST_DEFAULT_SYSROOT=\"$(xcrun --show-sdk-path)\"\n</code></pre> <p>Same holds for default resource directory. Vast's cmake allows to specify <code>VAST_DEFAULT_RESOURCE_DIR</code>:</p> <pre><code>-DVAST_DEFAULT_RESOURCE_DIR=\"$(clang --print-resource-dir)\"\n</code></pre>"},{"location":"GettingStarted/build/#run","title":"Run","text":"<p>To run mlir codegen of highlevel dialect use.</p> <pre><code>./builds/default/tools/vast-front/Release/vast-front -vast-emit-mlir=&lt;dialect&gt; &lt;input.c&gt; -o &lt;output.mlir&gt;\n</code></pre> <p>Supported dialects are: <code>hl</code>, <code>ll</code>, <code>llvm</code></p>"},{"location":"GettingStarted/build/#test","title":"Test","text":"<pre><code>ctest --preset debug\n</code></pre>"},{"location":"GettingStarted/debug/","title":"Debug","text":""},{"location":"GettingStarted/debug/#debugging","title":"Debugging","text":"<p>VAST makes use of the MLIR infrastructure to facilitate the reproduction of crashes within the pipeline. You can refer to the MLIR documentation on crash and failure reproduction for more details. We provide a similar set of options in vast-front to aid in debugging.</p>"},{"location":"GettingStarted/debug/#generating-crash-reproducers","title":"Generating Crash Reproducers","text":"<p>To generate a minimal reproducer for a crashed pipeline of <code>vast-front</code>, use the following option:</p> <pre><code>-vast-emit-crash-reproducer=\"reproducer.mlir\" \n</code></pre> <p>This option disables multithreading to ensure a comprehensive crash report. You can then load and examine the crash report using the following command:</p> <pre><code>vast-opt -run-reproducer reproducer.mlir\n</code></pre>"},{"location":"GettingStarted/debug/#pipeline-information","title":"Pipeline Information","text":"<p>To obtain a detailed insight into the pipeline, you can use the following option of <code>vast-front</code>:</p> <pre><code>-vast-print-pipeline\n</code></pre> <p>This option dumps the pipeline string to the standard error stream. You can use this information for a more specific investigation of the pipeline. Execute the pipeline with the printed string using the following command:</p> <pre><code>vast-opt --pass-pipeline=\"pipeline-string\"\n</code></pre>"},{"location":"GettingStarted/debug/#debug-pipeline","title":"Debug Pipeline","text":"<p>With the <code>-vast-debug</code> option, you get more detailed crash reports. It shows MLIR operations when there's an error and provides current stack traces.</p> <p>Sometimes it is needed to examine the results of conversion steps more closely to discover what went wrong. <code>-vast-snapshot-at=pass1;...;passN</code> will instrument conversion pipeline to store a result of <code>passN</code> into a file after it is applied. Name of the file will be in the form of: <code>basename.pass_name</code>. Passing <code>\"*\"</code> in the string will result in output after every step.</p>"},{"location":"GettingStarted/extend/","title":"How to create a new dialect","text":""},{"location":"GettingStarted/extend/#how-to-start-extending-vast","title":"How to Start Extending VAST?","text":"<p>VAST offers a handy script to generate a variety of MLIR primitives. You can find the script at <code>scripts/templater.py</code>. This tool is designed to help you create dialects, passes, operations, types, and attributes interactively.</p>"},{"location":"GettingStarted/extend/#usage","title":"Usage","text":"<p>Just run the script. It has been designed to provide a guided process for generating the desired primitives. If you find anything confusing or unintuitive, please don't hesitate to open an issue so that we can address it.</p> <p>When you run the script, it will generate the basic skeleton for your chosen primitive. It will list the generated files which you can freely modify to provide desired functionality.</p>"},{"location":"GettingStarted/integration/","title":"Driver integration","text":""},{"location":"GettingStarted/integration/#integration-to-custom-tools","title":"Integration to custom tools","text":"<p>VAST is designed with a focus on highly customizable code generation, allowing developers to tailor the process to their specific needs. At the heart of this customization is the <code>CodeGenDriver</code>.</p>"},{"location":"GettingStarted/integration/#using-the-predefined-driver-or-customizing-components","title":"Using the Predefined Driver or Customizing Components","text":"<p>The <code>CodeGenDriver</code> offers the flexibility to either use a predefined driver or customize each of its components according to the requirements of your project. This driver is responsible for generating a single MLIR module, typically corresponding to a single translation unit, although it can also be utilized for partial code generation.</p>"},{"location":"GettingStarted/integration/#components-of-the-codegen-driver","title":"Components of the CodeGen Driver","text":"<ol> <li>Metadata (locations) generator: The <code>vast::cg::meta_generator</code> serves as a configuration point for creating locations attached to MLIR operations. It exposes the following API:</li> </ol> <pre><code>    struct meta_generator {\n        virtual ~meta_generator() = default;\n        virtual loc_t location(const clang_decl *) const = 0;\n        virtual loc_t location(const clang_stmt *) const = 0;\n        virtual loc_t location(const clang_expr *) const = 0;\n    };\n</code></pre> <p>In VAST, two implementations are provided: - <code>default_meta_gen</code>: Translates Clang AST locations to MLIR locations. - <code>id_meta_gen</code>: Assigns consecutive IDs as meta information, providing an alternative approach.</p> <ol> <li>Symbol (names) generator: The <code>vast::cg::symbol_generator</code> serves as a configuration point for naming of program symbols. It exposes the following API:</li> </ol> <pre><code>    struct symbol_generator\n    {\n        virtual ~symbol_generator() = default;\n\n        virtual std::optional&lt; symbol_name &gt; symbol(clang_global decl) = 0;\n        virtual std::optional&lt; symbol_name &gt; symbol(const clang_decl_ref_expr *decl) = 0;\n    };\n</code></pre> <p>The symbol generator handles name mangling and the generation of all symbol names in MLIR. VAST provides a default symbol generator, <code>default_symbol_generator</code>, which implements symbol mangling in a manner similar to Clang.</p> <ol> <li>AST Visitor: Holds the main logic for MLIR generation. Visitor bundles together both location generator and meta generator, it implements the following API:</li> </ol> <pre><code>    struct visitor_base\n    {\n        virtual ~visitor_base() = default;\n\n        virtual operation visit(const clang_decl *, scope_context &amp;scope) = 0;\n        virtual operation visit(const clang_stmt *, scope_context &amp;scope) = 0;\n        virtual mlir_type visit(const clang_type *, scope_context &amp;scope) = 0;\n        virtual mlir_type visit(clang_qual_type, scope_context &amp;scope)    = 0;\n        virtual std::optional&lt; named_attr &gt; visit(const clang_attr *, scope_context &amp;scope) = 0;\n\n        virtual operation visit_prototype(const clang_function *decl, scope_context &amp;scope) = 0;\n\n        virtual std::optional&lt; loc_t &gt; location(const clang_decl *) = 0;\n        virtual std::optional&lt; loc_t &gt; location(const clang_stmt *) = 0;\n        virtual std::optional&lt; loc_t &gt; location(const clang_expr *) = 0;\n\n        virtual std::optional&lt; symbol_name &gt; symbol(clang_global) = 0;\n        virtual std::optional&lt; symbol_name &gt; symbol(const clang_decl_ref_expr *) = 0;\n    };\n</code></pre> <p>Visitors can operate independently, but leveraging multiple visitors in chain often offers advantages of their composition. In VAST, we provide several specialized visitors:</p> <ul> <li><code>default_visitor</code>: This visitor handles the default translation to a high-level dialect.</li> <li><code>unsup_visitor</code>: Generates operations marked as \"unsupported,\" serving as a fallback for default visitation.</li> <li><code>unreach_visitor</code> (unreachable visitor): Yields an error upon visitation and is typically used as the last visitor in the chain.</li> </ul> <p>The visitor API follows a design where its functions return optional results or empty MLIR entities if visitation, location, or symbol generation fails. This design facilitates easy recognition of such cases and enables the passing of visitation to another visitor.</p> <p>For cases where only partial visitor implementation is desired, developers can utilize a helper class called <code>fallthrough_visitor</code> as a base for their visitor. By default, it treats all visitations as unsuccessful but allows for overrides. This empowers developers to implement specialized visitors, such as a dedicated type visitor, for specific use cases.</p> <p>To chain visitors, VAST offers a class to represent a list of visitors called <code>vast::cg::visitor_list</code>. This list satisfies the visitor API and forwards visitation to the head of the list, enabling cascading through its visitors starting from the head.</p> <p>Visitor list nodes serve a dual purpose: they can either solely hold visitors and call them, or they can perform preprocessing on visitation arguments or postprocessing on results.</p> <p>The base class for a visitor list node, which wraps a visitor class, is defined as follows:</p> <pre><code>template &lt;typename visitor&gt;\nvisitor_list_node_adaptor\n</code></pre> <p>This class simply forwards visitation to the internal visitor without performing any additional actions. Notably, it doesn't even forward the visitation to the next node on failure.</p> <p>For cases where a visitor may fail, another class is available:</p> <pre><code>template &lt;typename visitor&gt;\ntry_or_through_list_node\n</code></pre> <p>This class attempts to call its visitor, and if it fails, it returns the application of <code>next-&gt;visit</code> with same arguments.</p> <p>Additionally, a helper class for building partial visitor list nodes is provided:</p> <pre><code>template &lt;typename visitor&gt;\nfallthrough_list_node\n</code></pre> <p>This class, by default, forwards everything to the next visitor but allows for overriding specific visitor methods as needed.</p> <p>To simplify the construction of a chain of visitors, these classes override the <code>operator|</code>, enabling chaining. Additionally, we provide convenient constructor methods for specifying how to build each node:</p> <pre><code>template &lt;typename visitor, typename ...args_t&gt; as_node;\n</code></pre> <p>This method creates a visitor list node with the given visitor and passes arguments to its constructor. Sometimes, visitors need to invoke the head of the visitor list on subelements of the currently visited entity. To achieve this, <code>as_node_with_list_ref</code> can be used, which passes the reference as the first argument to the constructor of the visitor. Finally, <code>optional</code> allows for configuring which visitors to plug into the pipeline at runtime.</p>"},{"location":"GettingStarted/integration/#example-default-visitor-list-construction","title":"Example: Default Visitor List Construction","text":"<p>The construction of the default VAST visitor appears as follows:</p> <pre><code>auto visitors = std::make_shared&lt;visitor_list&gt;()\n    | as_node_with_list_ref&lt;attr_visitor_proxy&gt;()\n    | as_node&lt;type_caching_proxy&gt;()\n    | as_node_with_list_ref&lt;default_visitor&gt;(\n        mctx, actx, *bld, std::move(mg), std::move(sg), std::move(policy)\n    )\n    | optional(enable_unsupported, as_node_with_list_ref&lt;unsup_visitor&gt;(*mctx, *bld))\n    | as_node&lt;unreach_visitor&gt;();\n</code></pre> <p>In this construction:</p> <ul> <li>The first visitor is a proxy responsible for post-processing visitor results and attaching any applicable attributes from clang AST.</li> <li>The <code>type_caching_proxy</code> is utilized to deduplicate generated types. It either returns a stored cached type or forwards the visitation. This proxy enables reusing its cache to generate the data layout at the end of module generation.</li> <li>Next, we have the <code>default_visitor</code>, followed by an optional <code>unsupported_visitor</code>, and lastly, the <code>unreach_visitor</code>, which yields an error if reached.</li> </ul>"},{"location":"GettingStarted/integration/#simple-driver-integration","title":"Simple Driver Integration","text":"<pre><code>// Example usage of the driver class\n\n// Create a driver instance\ndriver drv(actx, mctx, bld, visitors);\n\n// Emit declarations\ndrv.emit(decls);\n\n// Finalize code generation -- this emits e.g., data layout information\ndrv.finalize();\n\n// Verify the generated module\nif (!drv.verify()) {\n    // Handle verification failure\n}\n\n// Retrieve the finalized module\nowning_mlir_module_ref mod = drv.freeze();\n</code></pre>"},{"location":"Projects/related/","title":"Related Projects","text":""},{"location":"Projects/related/#llvm-test-suite","title":"LLVM Test Suite","text":"<p>Test suite extended to generate reports for VAST MLIR dialects.</p>"},{"location":"Projects/related/#benchmarks","title":"Benchmarks","text":"<p>C/C++ benchmarks for VAST.</p>"},{"location":"Projects/related/#miller","title":"Miller","text":"<p>VAST MLIR Abstract Interpreter</p>"},{"location":"Projects/related/#vast-checker","title":"VAST-Checker","text":"<p>VAST-based tool that scans C code for variants of the Sequoia bug.</p>"},{"location":"Projects/related/#macroni","title":"Macroni","text":"<p>Compiler frontend for C and C++ that utilizes PASTA for code parsing and VAST for representing the code as MLIR. Notably, it extends VAST MLIR to handle macro expansions in its dialects.</p>"},{"location":"Projects/related/#potato","title":"PoTATo","text":"<p>Dialect-based points-to analysis for MLIR.</p>"},{"location":"Tools/vast-detect-parsers/","title":"VAST: Parser Detection Tool","text":"<p>The VAST parser detection leverages a dialect-based approach, where program data manipulation is abstracted and reduced to a parser dialect. This results in an MLIR representation that combines control-flow constructs with parser-specific operations.</p> <p>To generate this representation, we provide the <code>vast-detect-parsers</code> tool\u2014a customized version of <code>mlir-opt</code> that converts VAST dialects into the parser dialect. To use the tool, simply run:</p> <pre><code>vast-detect-parsers -vast-hl-to-parser &lt;input.mlir&gt;\n</code></pre> <p>Parser conversion can be enhanced with the use of function models, which specify how functions in programs should be interpreted. A default set of models is provided in <code>Conversion/Parser/default-parsers-config.yaml</code>. Additional configurations can be supplied via a pass parameter.</p>"},{"location":"Tools/vast-front/","title":"VAST: Compiler Driver","text":"<p><code>vast-front</code> serves as the primary <code>vast</code> compiler driver for compiling C/C++. It functions as an extension to the Clang compiler and generally supports all Clang's options. Moreover, <code>vast-front</code> offers several custom options, primarily designed as points of customization for MLIR generation. All these options are prefixed with <code>-vast</code>.</p>"},{"location":"Tools/vast-front/#vast-output-targets","title":"VAST output targets","text":"<ul> <li><code>-vast-emit-mlir=&lt;dialect&gt;</code></li> <li>Possible dialects: hl, std, llvm, cir</li> <li> <p>This will execute the translation pipeline up to the specified dialect.</p> </li> <li> <p><code>-vast-emit-mlir-after=&lt;pass-argument-name&gt;</code></p> </li> <li>This will execute the translation pipeline up to the specified mlir pass (including).</li> <li> <p>It uses same names as <code>opt</code> to specify passes.</p> </li> <li> <p><code>-vast-emit-mlir-bytecode</code> can be used in conjunction with <code>-vast-emit-mlir=&lt;dialect&gt;</code> to print the bytecode format instead of the pretty form.</p> </li> </ul> <p>Other available outputs:</p> <ul> <li><code>-vast-emit-llvm</code></li> <li><code>-vast-emit-obj</code></li> <li><code>-vast-emit-asm</code></li> </ul> <p>Additional customization options include:</p> <ul> <li><code>-vast-print-pipeline</code></li> <li><code>-vast-disable-&lt;pipeline-step&gt;</code></li> <li> <p>Options for <code>pipeline-step</code>: \"canonicalize\", \"reduce-hl\", \"standard-types\", etc. (see pipelines section below)</p> </li> <li> <p><code>-vast-simplify</code></p> </li> <li> <p>Simplifies high-level output.</p> </li> <li> <p><code>-vast-show-locs</code></p> </li> <li> <p>Displays locations in MLIR module print.</p> </li> <li> <p><code>-vast-locs-as-meta-ids</code></p> </li> <li> <p>Uses metadata identifiers instead of file locations for locations.</p> </li> <li> <p><code>-vast-loc-attrs</code></p> </li> <li>When used in conjunction with <code>-vast-show-locs</code>, emits location data as MLIR attributes.</li> </ul>"},{"location":"Tools/vast-front/#debuging-and-diagnostics","title":"Debuging and diagnostics","text":"<ul> <li><code>-vast-emit-crash-reproducer=\"reproducer.mlir\"</code></li> <li> <p>Emits an MLIR transformation crash reproducer; refer to debugging docs.</p> </li> <li> <p><code>-vast-disable-multithreading</code></p> </li> <li> <p>Disables multithreading in pipeline transformations for deterministic debugging.</p> </li> <li> <p><code>-vast-debug</code></p> </li> <li>Prints operations in diagnostics.</li> <li> <p>Prints MLIR stack trace in diagnostics.</p> </li> <li> <p><code>-vast-disable-verifier</code></p> </li> <li> <p>Skips verification of the produced VAST MLIR module.</p> </li> <li> <p><code>vast-snapshot-at=\"pass1;...;passN</code></p> </li> <li>After each pass that was specified as an option store MLIR into a file (format is <code>src.pass_name</code>).</li> <li> <p><code>\"*\"</code> stores snapshot after every conversion.</p> </li> <li> <p><code>-vast-output-sarif=\"report.sarif\"</code></p> </li> <li>Outputs diagnostics as a SARIF report file.</li> </ul>"},{"location":"Tools/vast-front/#pipelines","title":"Pipelines","text":"<p>WIP pipelines documentation</p>"},{"location":"Tools/vast-lsp-server/","title":"VAST: Language Server Protocol","text":"<p>VAST provides an implementation of LSP language server in the form of the <code>vast-lsp-server</code> tool. This tool interacts with the MLIR C++ API to support rich language queries, such as \u201cFind Definition\u201d.</p> <p>The tool easily integrates with VSCode extension MLIR. The user needs to point the extension to <code>mlir-lsp-server</code>. To do so, one can create a symbolic link named <code>mlir-lsp-server</code> to point to built <code>vast-lsp-server</code>.</p>"},{"location":"Tools/vast-lsp-server/#build","title":"Build","text":"<p>To build <code>vast-lsp-server</code> use:</p> <pre><code>cmake --build &lt;build-dir&gt; --target vast-lsp-server\n</code></pre>"},{"location":"Tools/vast-opt/","title":"VAST: Optimizer","text":"<p>After <code>mlir</code> module from <code>vast-cc</code> is produced, we can leverage our optimisation pipeline to transform module in various ways. The lowest level we can do is LLVM dialect, from which we can dump LLVM IR if desired.</p> <p>Overall design philosophy is that passes try to be really modular, self-contained and doing one thing properly - all while trying to preserve provenance metadata. Sometimes this does not exactly hold (transformation from <code>HL</code> into <code>LL</code> is huge) but it is what we strive for. Passes will more often than not have some dependencies between themselves - always consult documentation if unsure and report an issue if wiki is out of date on this.</p>"},{"location":"Tools/vast-opt/#metadata-and-passes","title":"Metadata and passes","text":"<p>TODO: Improve once we have examples</p> <p>TL;DR: Vast provided passes always try to keep metadata (and they should do a good job), but for passes from other sources this does not hold and probably some heuristic will be used to re-compute them in best-effort.</p>"},{"location":"Tools/vast-opt/#passes","title":"Passes","text":"<p>Passes we have implemented can be roughly grouped into several categories. We also note some of the native mlir passes that are needed to continue with transformations to reach LLVM dialect.</p>"},{"location":"Tools/vast-opt/#type-lowering","title":"Type lowering","text":"<p>A common prerequisite for other passes is to lower <code>HL</code> types into standard types. This can be done in two steps:  * <code>--vast-hl-lower-types</code>    - Converts simple (non-struct) types according to provided data layout (embedded in the mlir module metadata).  * <code>--vast-hl-structs-to-tuples</code>    - Converts <code>HL</code> struct types into standard tuples</p> <p>While these should be commutative, the preferred order is <code>--vast-hl-lower-types --vast-hl-structs-to-tuples</code></p>"},{"location":"Tools/vast-opt/#hl-scf","title":"HL -&gt; SCF","text":"<ul> <li><code>--vast-hl-to-scf</code></li> <li>Requires:<ul> <li>Type lowering</li> </ul> </li> <li>Conversion of <code>HL</code> control flow ops (currently only <code>hl.if</code> and <code>hl.while</code>) into their <code>scf</code> equivalents. Since <code>scf</code> requires <code>i1</code> in their conditions, additional casts may be inserted to satisfy this requirement (currently they are emitted in <code>HL</code> however this behaviour should customisable eventually.</li> </ul> <p>To produce an LLVM following addition passes must be run <code>--convert-scf-to-std --convert-std-to-llvm</code> and possibly <code>--vast-hl-to-ll</code> as well (or some equivalent, depending on how conditions are coerced)</p>"},{"location":"Tools/vast-opt/#hl-ll","title":"HL -&gt; LL","text":"<ul> <li><code>--vast-hl-to-ll</code></li> <li>Requires:<ul> <li>Type lowering</li> <li>Some form of control flow lowering</li> </ul> </li> <li>Lower all <code>HL</code> operation into their LLVM dialect equivalents - this is a rather huge pass, for details see its documentation.</li> </ul>"},{"location":"Tools/vast-opt/#llvm-dump","title":"LLVM Dump","text":"<ul> <li><code>--vast-llvm-dump</code></li> <li>Requires:<ul> <li>Entire module must be in LLVM dialect (or have operation for which conversion hooks are provided)</li> </ul> </li> <li>LLVM bitcode is dumped to <code>llvm::errs()</code> in human readable form. Since passes can run in parallel, dump to file is non-trivial.</li> </ul>"},{"location":"Tools/vast-opt/#example-usage","title":"Example Usage","text":"<p>Let's say we have file <code>main.c</code> which we want to lower into some dialect. First let's have a look at some generic invocations we may find handy:</p> <p>To get mlir module via <code>vast-cc</code></p> <pre><code>vast-cc --ccopts -xc --from-source main.c\n</code></pre> <p>A quick remainder  * <code>--ccopts -xc</code> says we are doing <code>C</code> not <code>C++</code>  * <code>--from-source file</code> says that source code comes from the file</p> <p>Once we have the module, we can invoke <code>vast-opt</code>, with easiest way being a simple pipe</p> <pre><code>vast-cc --ccopts -xc --from-source main.c | vast-opt pass-we-want another-pass-we-want\n</code></pre> <p>If we want, we can also chain pipes</p> <pre><code>vast-cc --ccopts -xc --from-source main.c | vast-opt pass | vast-opt another-pass | ...\n</code></pre> <p>Now, let's say we want to lower into LLVM bitcode, therefore the invocation will look as follows</p> <pre><code>vast-cc --ccopts -xc --from-source main.c | vast-opt --vast-hl-lower-types --vast-hl-structs-to-tuples\n                                                     --vast-hl-to-scf --convert-scf-to-std --convert-std-to-llvm\n                                                     --vast-hl-to-ll\n</code></pre>"},{"location":"Tools/vast-query/","title":"VAST: Query","text":"<p><code>vast-query</code> is a command line tool to query symbols in the vast generated MLIR. Its primary purpose is to test symbols and their use edges in the produced MLIR. Example of usage:</p> <pre><code>vast-query [options] &lt;input file&gt;\n</code></pre> <p>Options:</p> <pre><code>  --scope=&lt;function name&gt;      - Show values from scope of a given function\n  --show-symbols=&lt;value&gt;       - Show MLIR symbols\n    =functions                 -   show function symbols\n    =types                     -   show type symbols\n    =records                   -   show record symbols\n    =vars                      -   show variable symbols\n    =globs                     -   show global variable symbols\n    =all                       -   show all symbols\n  --symbol-users=&lt;symbol name&gt; - Show users of a given symbol\n</code></pre>"},{"location":"Tools/vast-repl/","title":"VAST: REPL","text":"<p>WIP <code>vast-repl</code> is an interactive MLIR query and modification tool.</p> <p>Commands:</p> <pre><code>exit            - exits repl\n\nhelp            - prints help\nload &lt;filename&gt; - loads source from file\n\nshow &lt;value&gt;    - displays queried value\n    =source         - loaded source code\n    =ast            - clang ast\n    =module         - current VAST MLIR module\n    =symbols        - present symbols in the module\n\nmeta &lt;action&gt;   - operates on metadata for given symbol\n    =add &lt;symbol&gt; &lt;id&gt; - adds &lt;id&gt; meta to &lt;symbol&gt;\n    =get &lt;id&gt;          - gets symbol with &lt;id&gt; meta\n</code></pre>"},{"location":"dialects/HighLevelPasses/","title":"High Level","text":""},{"location":"dialects/HighLevelPasses/#-vast-hl-dce","title":"<code>-vast-hl-dce</code>","text":"<p>Trim dead code</p> <p>Removes unreachable code, such as code after return or break/continue.</p>"},{"location":"dialects/HighLevelPasses/#-vast-hl-lower-elaborated-types","title":"<code>-vast-hl-lower-elaborated-types</code>","text":"<p>Replace <code>hl::ElaboratedType</code> type by its underlying type.</p> <p>Replaces <code>hl::ElaboratedType</code> types by its underlying type.</p> <p>All <code>hl::ElaboratedType</code> are marked illegal and converted by this pass.</p>"},{"location":"dialects/HighLevelPasses/#-vast-hl-lower-enum-decls","title":"<code>-vast-hl-lower-enum-decls</code>","text":"<p>Lower high level representation of enums.</p> <p>Lower enum types to integer types.</p> <p>Note: This pass requires that all enum references are lowered.</p>"},{"location":"dialects/HighLevelPasses/#-vast-hl-lower-enum-refs","title":"<code>-vast-hl-lower-enum-refs</code>","text":"<p>Lower high level representation of enums.</p> <p>Lower enum references to integer values.</p>"},{"location":"dialects/HighLevelPasses/#-vast-hl-lower-typedefs","title":"<code>-vast-hl-lower-typedefs</code>","text":"<p>Replace <code>hl::TypeDef</code> type by its underlying aliased type.</p> <p>Replaces <code>hl::TypeDef</code> types by its underlying aliased types. The conversion resolves nested typedefs.</p> <p>All <code>hl::TypeDef</code> are marked illegal and converted by this pass.</p>"},{"location":"dialects/HighLevelPasses/#-vast-hl-lower-types","title":"<code>-vast-hl-lower-types</code>","text":"<p>Lower high-level types to standard types</p> <p>Lower high-level types into standard types which is usually required first step by other passes in the pipeline.</p> <p>Information about bit sizes of high level types is inferred from the data layout of the module, which is derived from the information provided by clang and emitted automatically by <code>vast-cc</code>.</p> <p>TODO: Named types are not yet supported.</p>"},{"location":"dialects/HighLevelPasses/#-vast-hl-splice-trailing-scopes","title":"<code>-vast-hl-splice-trailing-scopes</code>","text":"<p>Remove trailing <code>core::ScopeOp</code>s.</p> <p>Removes trailing scopes.</p>"},{"location":"dialects/HighLevelPasses/#-vast-hl-ude","title":"<code>-vast-hl-ude</code>","text":"<p>Eliminate unused definitions</p> <p>Removes unused definitions, such as typedefs, structs and functions.</p>"},{"location":"dialects/LowLevelPasses/","title":"Low Level","text":""},{"location":"dialects/LowLevelPasses/#-vast-ll-to-llvm","title":"<code>-vast-ll-to-llvm</code>","text":"<p>Convert low level operations to LLVM dialect.</p> <p>Work in progess.</p>"},{"location":"dialects/ABI/ABI/","title":"ABI","text":""},{"location":"dialects/ABI/ABI/#abi-dialect","title":"'abi' Dialect","text":"<p>A vast ABI dialect. Dialect provides operations to describe how arguments and return values are transformed to better model target abi.</p> <ul> <li>'abi' Dialect<ul> <li>Operations<ul> <li>abi.call (::vast::abi::CallOp)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>abi.call_args (::vast::abi::CallArgsOp)<ul> <li>Results:</li> </ul> </li> <li>abi.call_exec (::vast::abi::CallExecutionOp)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>abi.call_rets (::vast::abi::CallRetsOp)<ul> <li>Results:</li> </ul> </li> <li>abi.direct (::vast::abi::DirectOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>abi.epilogue (::vast::abi::EpilogueOp)<ul> <li>Results:</li> </ul> </li> <li>abi.func (::vast::abi::FuncOp)<ul> <li>Attributes:</li> </ul> </li> <li>abi.indirect (::vast::abi::IndirectOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>abi.prologue (::vast::abi::PrologueOp)<ul> <li>Results:</li> </ul> </li> <li>abi.ret_direct (::vast::abi::RetDirectOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>abi.yield (::vast::abi::YieldOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"dialects/ABI/ABI/#operations","title":"Operations","text":""},{"location":"dialects/ABI/ABI/#abicall-vastabicallop","title":"<code>abi.call</code> (::vast::abi::CallOp)","text":"<p>ABI call operation</p> <p>Syntax:</p> <pre><code>operation ::= `abi.call` $callee `(` $args `)` attr-dict `:` functional-type( $args, $results )\n</code></pre> <p>ABI call operation Interfaces: <code>CallOpInterface</code></p>"},{"location":"dialects/ABI/ABI/#attributes","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>callee</code>::mlir::FlatSymbolRefAttrflat symbol reference attribute"},{"location":"dialects/ABI/ABI/#operands","title":"Operands:","text":"Operand Description <code>args</code> variadic of any type"},{"location":"dialects/ABI/ABI/#results","title":"Results:","text":"Result Description <code>results</code> variadic of any type"},{"location":"dialects/ABI/ABI/#abicall_args-vastabicallargsop","title":"<code>abi.call_args</code> (::vast::abi::CallArgsOp)","text":"<p>Not implement yet.</p> <p>Syntax:</p> <pre><code>operation ::= `abi.call_args` $body attr-dict `:` type($results)\n</code></pre> <p>WIP</p>"},{"location":"dialects/ABI/ABI/#results_1","title":"Results:","text":"Result Description <code>results</code> variadic of any type"},{"location":"dialects/ABI/ABI/#abicall_exec-vastabicallexecutionop","title":"<code>abi.call_exec</code> (::vast::abi::CallExecutionOp)","text":"<p>WIP</p> <p>Syntax:</p> <pre><code>operation ::= `abi.call_exec` $callee `(` $args `)` $body attr-dict `:` functional-type($args, $result)\n</code></pre> <p>WIP Interfaces: <code>CallOpInterface</code></p>"},{"location":"dialects/ABI/ABI/#attributes_1","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>callee</code>::mlir::SymbolRefAttrsymbol reference attribute"},{"location":"dialects/ABI/ABI/#operands_1","title":"Operands:","text":"Operand Description <code>args</code> variadic of any type"},{"location":"dialects/ABI/ABI/#results_2","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/ABI/ABI/#abicall_rets-vastabicallretsop","title":"<code>abi.call_rets</code> (::vast::abi::CallRetsOp)","text":"<p>Not implement yet.</p> <p>Syntax:</p> <pre><code>operation ::= `abi.call_rets` $body attr-dict `:` type($results)\n</code></pre> <p>WIP</p>"},{"location":"dialects/ABI/ABI/#results_3","title":"Results:","text":"Result Description <code>results</code> variadic of any type"},{"location":"dialects/ABI/ABI/#abidirect-vastabidirectop","title":"<code>abi.direct</code> (::vast::abi::DirectOp)","text":"<p>Pass value directly - usually means by register</p> <p>Syntax:</p> <pre><code>operation ::= `abi.direct` $value attr-dict `:` type($value) `-&gt;` type($result)\n</code></pre> <p>Pass value directly - usually means by register.</p>"},{"location":"dialects/ABI/ABI/#operands_2","title":"Operands:","text":"Operand Description <code>value</code> variadic of any type"},{"location":"dialects/ABI/ABI/#results_4","title":"Results:","text":"Result Description <code>result</code> variadic of any type"},{"location":"dialects/ABI/ABI/#abiepilogue-vastabiepilogueop","title":"<code>abi.epilogue</code> (::vast::abi::EpilogueOp)","text":"<p>WIP</p> <p>Syntax:</p> <pre><code>operation ::= `abi.epilogue` $body attr-dict `:` type($results)\n</code></pre> <p>WIP</p>"},{"location":"dialects/ABI/ABI/#results_5","title":"Results:","text":"Result Description <code>results</code> variadic of any type"},{"location":"dialects/ABI/ABI/#abifunc-vastabifuncop","title":"<code>abi.func</code> (::vast::abi::FuncOp)","text":"<p>Function with transformed type.</p> <p>Syntax:</p> <pre><code>operation ::= `abi.func` $sym_name custom&lt; FunctionSignatureAndBody &gt;($function_type, attr-dict, $body)\n</code></pre> <p>Inspired by <code>cir::FuncOp</code> and <code>mlir::func::FuncOp</code>:</p> <p>Operations within the function cannot implicitly capture values defined outside of the function, i.e. Functions are <code>IsolatedFromAbove</code>. All external references must use function arguments or attributes that establish a symbolic connection (e.g. symbols referenced by name via a string attribute like SymbolRefAttr). An external function declaration (used when referring to a function declared in some other module) has no body.</p> <p>The function linkage information is specified by <code>linkage</code>, as defined by <code>GlobalLinkageKind</code> attribute.</p> <p>Traits: <code>AutomaticAllocationScope</code>, <code>IsolatedFromAbove</code>, <code>NoTerminator</code>, <code>ShadowingSymbolTable</code></p> <p>Interfaces: <code>CallableOpInterface</code>, <code>Core_FuncSymbol</code>, <code>Core_FunctionOpInterface</code>, <code>Core_SymbolTableOpInterface</code>, <code>Core_Symbol</code></p>"},{"location":"dialects/ABI/ABI/#attributes_2","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>sym_name</code>::mlir::StringAttrstring attribute <code>function_type</code>::mlir::TypeAttrtype attribute of function type <code>linkage</code>::vast::core::GlobalLinkageKindAttrglobal linkage kind <code>sym_visibility</code>::mlir::StringAttrstring attribute <code>arg_attrs</code>::mlir::ArrayAttrArray of dictionary attributes <code>res_attrs</code>::mlir::ArrayAttrArray of dictionary attributes"},{"location":"dialects/ABI/ABI/#abiindirect-vastabiindirectop","title":"<code>abi.indirect</code> (::vast::abi::IndirectOp)","text":"<p>Value is passed indirectly via memory</p> <p>Syntax:</p> <pre><code>operation ::= `abi.indirect` $value attr-dict `:` type($value) `-&gt;` type($result)\n</code></pre> <p>Value is passed indirectly via memory</p>"},{"location":"dialects/ABI/ABI/#operands_3","title":"Operands:","text":"Operand Description <code>value</code> any type"},{"location":"dialects/ABI/ABI/#results_6","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/ABI/ABI/#abiprologue-vastabiprologueop","title":"<code>abi.prologue</code> (::vast::abi::PrologueOp)","text":"<p>WIP</p> <p>Syntax:</p> <pre><code>operation ::= `abi.prologue` $body attr-dict `:` type($results)\n</code></pre> <p>WIP</p>"},{"location":"dialects/ABI/ABI/#results_7","title":"Results:","text":"Result Description <code>results</code> variadic of any type"},{"location":"dialects/ABI/ABI/#abiret_direct-vastabiretdirectop","title":"<code>abi.ret_direct</code> (::vast::abi::RetDirectOp)","text":"<p>Value is returned directly.</p> <p>Syntax:</p> <pre><code>operation ::= `abi.ret_direct` $value attr-dict `:` type($value) `-&gt;` type($result)\n</code></pre> <p>Value is returned directly.</p>"},{"location":"dialects/ABI/ABI/#operands_4","title":"Operands:","text":"Operand Description <code>value</code> any type"},{"location":"dialects/ABI/ABI/#results_8","title":"Results:","text":"Result Description <code>result</code> variadic of any type"},{"location":"dialects/ABI/ABI/#abiyield-vastabiyieldop","title":"<code>abi.yield</code> (::vast::abi::YieldOp)","text":"<p>WIP</p> <p>Syntax:</p> <pre><code>operation ::= `abi.yield` $values attr-dict `:` type($values) `-&gt;` type($result)\n</code></pre> <p>WIP Traits: <code>Terminator</code></p>"},{"location":"dialects/ABI/ABI/#operands_5","title":"Operands:","text":"Operand Description <code>values</code> variadic of any type"},{"location":"dialects/ABI/ABI/#results_9","title":"Results:","text":"Result Description <code>result</code> variadic of any type"},{"location":"dialects/Builtin/Builtin/","title":"Builtin","text":""},{"location":"dialects/Builtin/Builtin/#hlbi-dialect","title":"'hlbi' Dialect","text":"<p>Dialect for representing compiler builtin constructs Dialect for representing compiler builtin constructs.</p> <ul> <li>'hlbi' Dialect<ul> <li>Operations<ul> <li>hlbi.dbgtrap (::vast::hlbi::DebugTrapOp)<ul> <li>Results:</li> </ul> </li> <li>hlbi.trap (::vast::hlbi::TrapOp)<ul> <li>Results:</li> </ul> </li> <li>hlbi.va_copy (::vast::hlbi::VACopyOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hlbi.va_end (::vast::hlbi::VAEndOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hlbi.va_start (::vast::hlbi::VAStartOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> </ul> </li> <li>Types<ul> <li>VAListType</li> </ul> </li> </ul> </li> </ul>"},{"location":"dialects/Builtin/Builtin/#operations","title":"Operations","text":""},{"location":"dialects/Builtin/Builtin/#hlbidbgtrap-vasthlbidebugtrapop","title":"<code>hlbi.dbgtrap</code> (::vast::hlbi::DebugTrapOp)","text":"<p>Builtin debug trap op</p> <p>Syntax:</p> <pre><code>operation ::= `hlbi.dbgtrap` `:` type($result) attr-dict\n</code></pre>"},{"location":"dialects/Builtin/Builtin/#results","title":"Results:","text":"Result Description <code>result</code> Type with VoidTrit"},{"location":"dialects/Builtin/Builtin/#hlbitrap-vasthlbitrapop","title":"<code>hlbi.trap</code> (::vast::hlbi::TrapOp)","text":"<p>Builtin trap op</p> <p>Syntax:</p> <pre><code>operation ::= `hlbi.trap` `:` type($result) attr-dict\n</code></pre>"},{"location":"dialects/Builtin/Builtin/#results_1","title":"Results:","text":"Result Description <code>result</code> Type with VoidTrit"},{"location":"dialects/Builtin/Builtin/#hlbiva_copy-vasthlbivacopyop","title":"<code>hlbi.va_copy</code> (::vast::hlbi::VACopyOp)","text":"<p>Start of the variable argument list</p> <p>Syntax:</p> <pre><code>operation ::= `hlbi.va_copy` $src_list `to` $trg_list `:` functional-type(operands, $result) attr-dict\n</code></pre>"},{"location":"dialects/Builtin/Builtin/#operands","title":"Operands:","text":"Operand Description <code>src_list</code> any type <code>trg_list</code> any type"},{"location":"dialects/Builtin/Builtin/#results_2","title":"Results:","text":"Result Description <code>result</code> Type with VoidTrit"},{"location":"dialects/Builtin/Builtin/#hlbiva_end-vasthlbivaendop","title":"<code>hlbi.va_end</code> (::vast::hlbi::VAEndOp)","text":"<p>End of the variable argument list</p> <p>Syntax:</p> <pre><code>operation ::= `hlbi.va_end` $arg_list `:` functional-type(operands, $result) attr-dict\n</code></pre>"},{"location":"dialects/Builtin/Builtin/#operands_1","title":"Operands:","text":"Operand Description <code>arg_list</code> any type"},{"location":"dialects/Builtin/Builtin/#results_3","title":"Results:","text":"Result Description <code>result</code> Type with VoidTrit"},{"location":"dialects/Builtin/Builtin/#hlbiva_start-vasthlbivastartop","title":"<code>hlbi.va_start</code> (::vast::hlbi::VAStartOp)","text":"<p>Start of the variable argument list</p> <p>Syntax:</p> <pre><code>operation ::= `hlbi.va_start` $arg_list `size` $count `:` functional-type(operands, $result) attr-dict\n</code></pre>"},{"location":"dialects/Builtin/Builtin/#operands_2","title":"Operands:","text":"Operand Description <code>arg_list</code> any type <code>count</code> any type"},{"location":"dialects/Builtin/Builtin/#results_4","title":"Results:","text":"Result Description <code>result</code> Type with VoidTrit"},{"location":"dialects/Builtin/Builtin/#types","title":"Types","text":""},{"location":"dialects/Builtin/Builtin/#valisttype","title":"VAListType","text":"<p>va_list type</p> <p>Syntax: <code>!hlbi.va_list</code></p> <p>Represents target-agnostic va_list type.</p>"},{"location":"dialects/Core/Core/","title":"Core","text":""},{"location":"dialects/Core/Core/#core-dialect","title":"'core' Dialect","text":"<p>Utility dialect to provide common features for other dialects. Dialect providing features that may be used by other dialects. These features can be used by including \"vast/Dialect/Core/Utils.td\" It also provides lazy.op for lazy evaluation of expressions and binary logical operations that make use of it.</p> <ul> <li>'core' Dialect<ul> <li>Operations<ul> <li>core.bin.land (::vast::core::BinLAndOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>core.bin.lor (::vast::core::BinLOrOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>core.implicit.return (::vast::core::ImplicitReturnOp)<ul> <li>Operands:</li> </ul> </li> <li>core.lazy.op (::vast::core::LazyOp)<ul> <li>Results:</li> </ul> </li> <li>core.module (::vast::core::ModuleOp)<ul> <li>Attributes:</li> </ul> </li> <li>core.scope (::vast::core::ScopeOp)</li> <li>core.select (::vast::core::SelectOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> </ul> </li> <li>Attributes<ul> <li>BooleanAttr<ul> <li>Parameters:</li> </ul> </li> <li>FloatAttr<ul> <li>Parameters:</li> </ul> </li> <li>GlobalLinkageKindAttr<ul> <li>Parameters:</li> </ul> </li> <li>IntegerAttr<ul> <li>Parameters:</li> </ul> </li> <li>SourceLanguageAttr<ul> <li>Parameters:</li> </ul> </li> <li>VoidAttr<ul> <li>Parameters:</li> </ul> </li> </ul> </li> <li>Types<ul> <li>FunctionType<ul> <li>Parameters:</li> </ul> </li> </ul> </li> <li>Enums<ul> <li>DeclContextKind<ul> <li>Cases:</li> </ul> </li> <li>GlobalLinkageKind<ul> <li>Cases:</li> </ul> </li> <li>SourceLanguage<ul> <li>Cases:</li> </ul> </li> <li>StorageClass<ul> <li>Cases:</li> </ul> </li> <li>StorageDuration<ul> <li>Cases:</li> </ul> </li> <li>TSClass<ul> <li>Cases:</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"dialects/Core/Core/#operations","title":"Operations","text":""},{"location":"dialects/Core/Core/#corebinland-vastcorebinlandop","title":"<code>core.bin.land</code> (::vast::core::BinLAndOp)","text":"<p>VAST core dialect logical binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `core.bin.land` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>Core dialect logical binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : type"},{"location":"dialects/Core/Core/#operands","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/Core/Core/#results","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/Core/Core/#corebinlor-vastcorebinlorop","title":"<code>core.bin.lor</code> (::vast::core::BinLOrOp)","text":"<p>VAST core dialect logical binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `core.bin.lor` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>Core dialect logical binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : type"},{"location":"dialects/Core/Core/#operands_1","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/Core/Core/#results_1","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/Core/Core/#coreimplicitreturn-vastcoreimplicitreturnop","title":"<code>core.implicit.return</code> (::vast::core::ImplicitReturnOp)","text":"<p>VAST implicit return</p> <p>Syntax:</p> <pre><code>operation ::= `core.implicit.return` $result `:` type($result) attr-dict\n</code></pre> <p>Op representing return that wasn't explicitely written in the source (e.g. in void fun(){}).</p> <p>Traits: <code>Core_ReturnLikeTrait</code>, <code>Core_SoftTerminatorTrait</code></p>"},{"location":"dialects/Core/Core/#operands_2","title":"Operands:","text":"Operand Description <code>result</code> variadic of any type"},{"location":"dialects/Core/Core/#corelazyop-vastcorelazyop","title":"<code>core.lazy.op</code> (::vast::core::LazyOp)","text":"<p>Lazily evaluate a region.</p> <p>Syntax:</p> <pre><code>operation ::= `core.lazy.op` $lazy attr-dict `:` type(results)\n</code></pre> <p>The operation serves to encapsulate delayed evaluation in its region.</p> <p>Traits: <code>NoTerminator</code></p>"},{"location":"dialects/Core/Core/#results_2","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/Core/Core/#coremodule-vastcoremoduleop","title":"<code>core.module</code> (::vast::core::ModuleOp)","text":"<p>VAST top level container operation</p> <p>Syntax:</p> <pre><code>operation ::= `core.module` ($sym_name^)? attr-dict-with-keyword $body\n</code></pre> <p>A <code>module</code> represents a top-level container operation. We provide custom module operation to allow for custom symbol table management.</p> <p>Traits: <code>HasDefaultDLTIDataLayout</code>, <code>IsolatedFromAbove</code>, <code>NoRegionArguments</code>, <code>NoTerminator</code>, <code>ShadowingSymbolTable</code>, <code>SingleBlock</code></p> <p>Interfaces: <code>Core_SymbolTableOpInterface</code>, <code>Core_Symbol</code>, <code>DataLayoutOpInterface</code></p>"},{"location":"dialects/Core/Core/#attributes","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>sym_name</code>::mlir::StringAttrstring attribute"},{"location":"dialects/Core/Core/#corescope-vastcorescopeop","title":"<code>core.scope</code> (::vast::core::ScopeOp)","text":"<p>VAST scope declaration</p> <p>Syntax:</p> <pre><code>operation ::= `core.scope` $body attr-dict\n</code></pre> <p>Scope operation serves to represent explicitly high-level code scope. Other control flow operations represent scopes implicitly.  It is a single-region operation.</p> <p>Traits: <code>Core_ScopeLikeTrait</code>, <code>NoTerminator</code>, <code>ShadowingSymbolTable</code></p> <p>Interfaces: <code>Core_SymbolTableOpInterface</code></p>"},{"location":"dialects/Core/Core/#coreselect-vastcoreselectop","title":"<code>core.select</code> (::vast::core::SelectOp)","text":"<p>Select a value based on condition.</p> <p>Syntax:</p> <pre><code>operation ::= `core.select` $cond `,` $thenRegion `,` $elseRegion attr-dict `:` functional-type(operands, results)\n</code></pre> <p>Usual select operation. First operand is selected if predicate is true, second otherwise (to mirror how ternary works in C).</p> <p>%result =  %cond %lhs, %rhs  : type"},{"location":"dialects/Core/Core/#operands_3","title":"Operands:","text":"Operand Description <code>cond</code> any type <code>thenRegion</code> any type <code>elseRegion</code> any type"},{"location":"dialects/Core/Core/#results_3","title":"Results:","text":"Result Description <code>results</code> variadic of any type"},{"location":"dialects/Core/Core/#attributes_1","title":"Attributes","text":""},{"location":"dialects/Core/Core/#booleanattr","title":"BooleanAttr","text":"<p>An Attribute containing a boolean value</p> <p>Syntax:</p> <pre><code>#core.bool&lt;\n  ::mlir::Type,   # type\n  bool   # value\n&gt;\n</code></pre> <p>An boolean attribute is a literal attribute that represents a boolean value.</p>"},{"location":"dialects/Core/Core/#parameters","title":"Parameters:","text":"Parameter C++ type Description type <code>::mlir::Type</code> value <code>bool</code>"},{"location":"dialects/Core/Core/#floatattr","title":"FloatAttr","text":"<p>An Attribute containing a floating point value</p> <p>Syntax:</p> <pre><code>#core.float&lt;\n  ::mlir::Type,   # type\n  ::llvm::APFloat   # value\n&gt;\n</code></pre> <p>A float attribute is a literal attribute that represents a floating point value of the specified floating point type.</p>"},{"location":"dialects/Core/Core/#parameters_1","title":"Parameters:","text":"Parameter C++ type Description type <code>::mlir::Type</code> value <code>::llvm::APFloat</code>"},{"location":"dialects/Core/Core/#globallinkagekindattr","title":"GlobalLinkageKindAttr","text":"<p>Linkage type/kind</p> <p>Syntax:</p> <pre><code>#core.global_linkage_kind&lt;\n  ::vast::core::GlobalLinkageKind   # value\n&gt;\n</code></pre> <p>Enum cases: * external (<code>ExternalLinkage</code>) * available_externally (<code>AvailableExternallyLinkage</code>) * linkonce (<code>LinkOnceAnyLinkage</code>) * linkonce_odr (<code>LinkOnceODRLinkage</code>) * weak (<code>WeakAnyLinkage</code>) * weak_odr (<code>WeakODRLinkage</code>) * internal (<code>InternalLinkage</code>) * private (<code>PrivateLinkage</code>) * extern_weak (<code>ExternalWeakLinkage</code>) * common (<code>CommonLinkage</code>) * appending (<code>AppendingLinkage</code>)</p>"},{"location":"dialects/Core/Core/#parameters_2","title":"Parameters:","text":"Parameter C++ type Description value <code>::vast::core::GlobalLinkageKind</code> an enum of type GlobalLinkageKind"},{"location":"dialects/Core/Core/#integerattr","title":"IntegerAttr","text":"<p>An Attribute containing a integer value</p> <p>Syntax:</p> <pre><code>#core.integer&lt;\n  ::mlir::Type,   # type\n  ::llvm::APSInt   # value\n&gt;\n</code></pre> <p>An integer attribute is a literal attribute that represents an integral value of the specified integer type.</p>"},{"location":"dialects/Core/Core/#parameters_3","title":"Parameters:","text":"Parameter C++ type Description type <code>::mlir::Type</code> value <code>::llvm::APSInt</code>"},{"location":"dialects/Core/Core/#sourcelanguageattr","title":"SourceLanguageAttr","text":"<p>Module source language</p> <p>Syntax:</p> <pre><code>#core.lang&lt;\n  ::vast::core::SourceLanguage   # value\n&gt;\n</code></pre> <p>Represents the source language used to generate the module.</p> <p>Example:</p> <pre><code>// Module compiled from C.\nmodule attributes {vast.core.lang = vast.core.lang&lt;c&gt;} {}\n// Module compiled from C++.\nmodule attributes {vast.core.lang = vast.core.lang&lt;cxx&gt;} {}\n</code></pre>"},{"location":"dialects/Core/Core/#parameters_4","title":"Parameters:","text":"Parameter C++ type Description value <code>::vast::core::SourceLanguage</code> an enum of type SourceLanguage"},{"location":"dialects/Core/Core/#voidattr","title":"VoidAttr","text":"<p>Attribute to represent void value.</p> <p>Syntax:</p> <pre><code>#core.void&lt;\n  ::mlir::Type   # type\n&gt;\n</code></pre> <p>The VoidAttr is used to return void from statements uniformly.</p>"},{"location":"dialects/Core/Core/#parameters_5","title":"Parameters:","text":"Parameter C++ type Description type <code>::mlir::Type</code>"},{"location":"dialects/Core/Core/#types","title":"Types","text":""},{"location":"dialects/Core/Core/#functiontype","title":"FunctionType","text":"<p>Vast function type</p> <p>Syntax:</p> <pre><code>!core.fn&lt;\n  ::llvm::ArrayRef&lt;Type&gt;,   # inputs\n  ::llvm::ArrayRef&lt;Type&gt;,   # results\n  bool   # varArg\n&gt;\n</code></pre> <p>The <code>!core.fn</code> is a function type. It consists of a variadic return type, and list of parameter types and can optionally be variadic.</p> <p>Example:</p> <pre><code>!core.fn&lt;() -&gt; !hl.bool&gt;\n!core.fn&lt;(!hl.char, !hl.char) -&gt; !hl.int&gt;\n!core.fn&lt;!i32 (!i32, ...)&gt;\n</code></pre>"},{"location":"dialects/Core/Core/#parameters_6","title":"Parameters:","text":"Parameter C++ type Description inputs <code>::llvm::ArrayRef&lt;Type&gt;</code> results <code>::llvm::ArrayRef&lt;Type&gt;</code> varArg <code>bool</code>"},{"location":"dialects/Core/Core/#enums","title":"Enums","text":""},{"location":"dialects/Core/Core/#declcontextkind","title":"DeclContextKind","text":"<p>declaration context kind</p>"},{"location":"dialects/Core/Core/#cases","title":"Cases:","text":"Symbol Value String dc_function <code>0</code> dc_function dc_method <code>1</code> dc_method dc_block <code>2</code> dc_block dc_capture <code>3</code> dc_capture dc_translation_unit <code>4</code> dc_translation_unit dc_record <code>5</code> dc_record dc_enum <code>6</code> dc_enum dc_namespace <code>7</code> dc_namespace"},{"location":"dialects/Core/Core/#globallinkagekind","title":"GlobalLinkageKind","text":"<p>Linkage type/kind</p>"},{"location":"dialects/Core/Core/#cases_1","title":"Cases:","text":"Symbol Value String ExternalLinkage <code>0</code> external AvailableExternallyLinkage <code>1</code> available_externally LinkOnceAnyLinkage <code>2</code> linkonce LinkOnceODRLinkage <code>3</code> linkonce_odr WeakAnyLinkage <code>4</code> weak WeakODRLinkage <code>5</code> weak_odr InternalLinkage <code>7</code> internal PrivateLinkage <code>8</code> private ExternalWeakLinkage <code>9</code> extern_weak CommonLinkage <code>10</code> common AppendingLinkage <code>6</code> appending"},{"location":"dialects/Core/Core/#sourcelanguage","title":"SourceLanguage","text":"<p>Source language</p>"},{"location":"dialects/Core/Core/#cases_2","title":"Cases:","text":"Symbol Value String C <code>1</code> c CXX <code>2</code> cxx"},{"location":"dialects/Core/Core/#storageclass","title":"StorageClass","text":"<p>storage class</p>"},{"location":"dialects/Core/Core/#cases_3","title":"Cases:","text":"Symbol Value String sc_none <code>0</code> sc_none sc_auto <code>1</code> sc_auto sc_static <code>2</code> sc_static sc_extern <code>3</code> sc_extern sc_private_extern <code>4</code> sc_private_extern sc_register <code>5</code> sc_register"},{"location":"dialects/Core/Core/#storageduration","title":"StorageDuration","text":"<p>storage duration</p>"},{"location":"dialects/Core/Core/#cases_4","title":"Cases:","text":"Symbol Value String sd_none <code>0</code> sd_none sd_automatic <code>1</code> sd_automatic sd_thread <code>2</code> sd_thread sd_static <code>3</code> sd_static sd_dynamic <code>4</code> sd_dynamic"},{"location":"dialects/Core/Core/#tsclass","title":"TSClass","text":"<p>thread storage class</p>"},{"location":"dialects/Core/Core/#cases_5","title":"Cases:","text":"Symbol Value String tsc_none <code>0</code> tsc_none tsc_gnu_thread <code>1</code> tsc_gnu_thread tsc_cxx_thread <code>2</code> tsc_cxx_thread tsc_c_thread <code>3</code> tsc_c_thread"},{"location":"dialects/HighLevel/HighLevel/","title":"High Level","text":""},{"location":"dialects/HighLevel/HighLevel/#hl-dialect","title":"'hl' Dialect","text":"<p>A high-level verbose program analysis MLIR dialect. This dialect intends capture highevel constructs of C/C++ for further program analysis.</p> <ul> <li>'hl' Dialect<ul> <li>Operations<ul> <li>hl.access (::vast::hl::AccessSpecifierOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.add (::vast::hl::AddIOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.addressof (::vast::hl::AddressOf)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.alias (::vast::hl::TypeAliasOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.alignof.expr (::vast::hl::AlignOfExprOp)<ul> <li>Results:</li> </ul> </li> <li>hl.alignof.type (::vast::hl::AlignOfTypeOp)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.asm (::vast::hl::AsmOp)<ul> <li>Attributes:</li> <li>Operands:</li> </ul> </li> <li>hl.assign (::vast::hl::AssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.add (::vast::hl::AddIAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.bin.and (::vast::hl::BinAndAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.bin.ashr (::vast::hl::BinAShrAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.bin.lshr (::vast::hl::BinLShrAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.bin.or (::vast::hl::BinOrAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.bin.shl (::vast::hl::BinShlAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.bin.xor (::vast::hl::BinXorAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.fadd (::vast::hl::AddFAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.fdiv (::vast::hl::DivFAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.fmul (::vast::hl::MulFAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.frem (::vast::hl::RemFAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.fsub (::vast::hl::SubFAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.mul (::vast::hl::MulIAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.sdiv (::vast::hl::DivSAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.srem (::vast::hl::RemSAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.sub (::vast::hl::SubIAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.udiv (::vast::hl::DivUAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.assign.urem (::vast::hl::RemUAssignOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.atomic_expr (::vast::hl::AtomicExpr)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.attributed_stmt (::vast::hl::AttributedStmt)</li> <li>hl.base (::vast::hl::CxxBaseSpecifierOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.bin.and (::vast::hl::BinAndOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.bin.ashr (::vast::hl::BinAShrOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.bin.comma (::vast::hl::BinComma)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.bin.land (::vast::hl::BinLAndOp)<ul> <li>Results:</li> </ul> </li> <li>hl.bin.lor (::vast::hl::BinLOrOp)<ul> <li>Results:</li> </ul> </li> <li>hl.bin.lshr (::vast::hl::BinLShrOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.bin.or (::vast::hl::BinOrOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.bin.shl (::vast::hl::BinShlOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.bin.xor (::vast::hl::BinXorOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.binary_cond (::vast::hl::BinaryCondOp)<ul> <li>Results:</li> </ul> </li> <li>hl.break (::vast::hl::BreakOp)</li> <li>hl.builtin_bitcast (::vast::hl::BuiltinBitCastOp)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.builtin_types_compatible_p.type (::vast::hl::BuiltinTypesCompatiblePOp)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.call (::vast::hl::CallOp)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.case (::vast::hl::CaseOp)</li> <li>hl.choose_expr (::vast::hl::ChooseExprOp)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.class (::vast::hl::ClassDeclOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.cmp (::vast::hl::CmpOp)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.compound_literal (::vast::hl::CompoundLiteralOp)<ul> <li>Results:</li> </ul> </li> <li>hl.cond (::vast::hl::CondOp)<ul> <li>Results:</li> </ul> </li> <li>hl.cond.yield (::vast::hl::CondYieldOp)<ul> <li>Operands:</li> </ul> </li> <li>hl.const (::vast::hl::ConstantOp)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.const.init (::vast::hl::InitializedConstantOp)<ul> <li>Results:</li> </ul> </li> <li>hl.continue (::vast::hl::ContinueOp)</li> <li>hl.cstyle_cast (::vast::hl::CStyleCastOp)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.cxxstruct (::vast::hl::CxxStructDeclOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.default (::vast::hl::DefaultOp)</li> <li>hl.deref (::vast::hl::Deref)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.do (::vast::hl::DoOp)</li> <li>hl.empty.decl (::vast::hl::EmptyDeclOp)</li> <li>hl.enum (::vast::hl::EnumDeclOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.enum.const (::vast::hl::EnumConstantOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.enumref (::vast::hl::EnumRefOp)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.expr (::vast::hl::ExprOp)<ul> <li>Results:</li> </ul> </li> <li>hl.fadd (::vast::hl::AddFOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.fcmp (::vast::hl::FCmpOp)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.fdiv (::vast::hl::DivFOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.field (::vast::hl::FieldDeclOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.file_scope_asm (::vast::hl::FileScopeAsmOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.fmul (::vast::hl::MulFOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.for (::vast::hl::ForOp)</li> <li>hl.frem (::vast::hl::RemFOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.fsub (::vast::hl::SubFOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.func (::vast::hl::FuncOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.funcref (::vast::hl::FuncRefOp)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.generic_asoc (::vast::hl::GenericAssocExpr)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.generic_expr (::vast::hl::GenericSelectionExpr)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.gnu.extension (::vast::hl::ExtensionOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.goto (::vast::hl::GotoStmt)<ul> <li>Operands:</li> </ul> </li> <li>hl.if (::vast::hl::IfOp)</li> <li>hl.imag (::vast::hl::ImagOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.implicit_cast (::vast::hl::ImplicitCastOp)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.indirect_call (::vast::hl::IndirectCallOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.indirect_goto (::vast::hl::IndirectGotoStmt)</li> <li>hl.initlist (::vast::hl::InitListExpr)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.label (::vast::hl::LabelStmt)<ul> <li>Operands:</li> </ul> </li> <li>hl.label.decl (::vast::hl::LabelDeclOp)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.labeladdr (::vast::hl::AddrLabelExpr)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.lnot (::vast::hl::LNotOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.member (::vast::hl::RecordMemberOp)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.minus (::vast::hl::MinusOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.mul (::vast::hl::MulIOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.not (::vast::hl::NotOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.null (::vast::hl::NullStmt)</li> <li>hl.offsetof.expr (::vast::hl::OffsetOfExprOp)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.opaque_expr (::vast::hl::OpaqueValueExpr)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.param (::vast::hl::ParmVarDeclOp)<ul> <li>Attributes:</li> <li>Operands:</li> </ul> </li> <li>hl.plus (::vast::hl::PlusOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.post.dec (::vast::hl::PostDecOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.post.inc (::vast::hl::PostIncOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.pre.dec (::vast::hl::PreDecOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.pre.inc (::vast::hl::PreIncOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.predefined.expr (::vast::hl::PredefinedExpr)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.preferred_alignof.expr (::vast::hl::PreferredAlignOfExprOp)<ul> <li>Results:</li> </ul> </li> <li>hl.preferred_alignof.type (::vast::hl::PreferredAlignOfTypeOp)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.real (::vast::hl::RealOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.ref (::vast::hl::DeclRefOp)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.return (::vast::hl::ReturnOp)<ul> <li>Operands:</li> </ul> </li> <li>hl.sdiv (::vast::hl::DivSOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.sizeof.expr (::vast::hl::SizeOfExprOp)<ul> <li>Results:</li> </ul> </li> <li>hl.sizeof.type (::vast::hl::SizeOfTypeOp)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>hl.srem (::vast::hl::RemSOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.static_assert (::vast::hl::StaticAssertDecl)<ul> <li>Attributes:</li> </ul> </li> <li>hl.stmt.expr (::vast::hl::StmtExprOp)<ul> <li>Results:</li> </ul> </li> <li>hl.struct (::vast::hl::StructDeclOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.sub (::vast::hl::SubIOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.subscript (::vast::hl::SubscriptOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.switch (::vast::hl::SwitchOp)</li> <li>hl.this (::vast::hl::ThisOp)<ul> <li>Results:</li> </ul> </li> <li>hl.translation_unit (::vast::hl::TranslationUnitOp)</li> <li>hl.type (::vast::hl::TypeDeclOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.type.yield (::vast::hl::TypeYieldOp)<ul> <li>Operands:</li> </ul> </li> <li>hl.typedef (::vast::hl::TypeDefOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.typeof.expr (::vast::hl::TypeOfExprOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.udiv (::vast::hl::DivUOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.union (::vast::hl::UnionDeclOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.unreachable (::vast::hl::UnreachableOp)</li> <li>hl.urem (::vast::hl::RemUOp)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.va_arg_expr (::vast::hl::VAArgExpr)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>hl.value.yield (::vast::hl::ValueYieldOp)<ul> <li>Operands:</li> </ul> </li> <li>hl.var (::vast::hl::VarDeclOp)<ul> <li>Attributes:</li> </ul> </li> <li>hl.while (::vast::hl::WhileOp)</li> </ul> </li> <li>Attributes<ul> <li>AliasAttr<ul> <li>Parameters:</li> </ul> </li> <li>AlignedAttr</li> <li>AllocAlignAttr<ul> <li>Parameters:</li> </ul> </li> <li>AllocSizeAttr<ul> <li>Parameters:</li> </ul> </li> <li>AllocatingAttr</li> <li>AlwaysInlineAttr</li> <li>AnnotationAttr<ul> <li>Parameters:</li> </ul> </li> <li>ArtificialAttr</li> <li>AsmLabelAttr<ul> <li>Parameters:</li> </ul> </li> <li>AssumeAlignedAttr<ul> <li>Parameters:</li> </ul> </li> <li>AvailabilityAttrAttr</li> <li>AvailableOnlyInDefaultEvalMethodAttr</li> <li>BlockingAttr</li> <li>BuiltinAttr<ul> <li>Parameters:</li> </ul> </li> <li>C11NoReturnAttr</li> <li>CVQualifiersAttr<ul> <li>Parameters:</li> </ul> </li> <li>CVRQualifiersAttr<ul> <li>Parameters:</li> </ul> </li> <li>CXX11NoReturnAttr</li> <li>CleanupAttr<ul> <li>Parameters:</li> </ul> </li> <li>ColdAttr</li> <li>CommonAttr</li> <li>ConstAttr</li> <li>ConstInitAttr</li> <li>ConstructorAttr<ul> <li>Parameters:</li> </ul> </li> <li>ConvergentAttr</li> <li>CountedByAttr</li> <li>DeprecatedAttr<ul> <li>Parameters:</li> </ul> </li> <li>DestructorAttr<ul> <li>Parameters:</li> </ul> </li> <li>DiagnoseIfAttr</li> <li>DisableTailCallsAttr</li> <li>EnableIfAttr</li> <li>ErrorAttr<ul> <li>Parameters:</li> </ul> </li> <li>FallthroughAttr</li> <li>FlattenAttr</li> <li>FormatArgAttr<ul> <li>Parameters:</li> </ul> </li> <li>FormatAttr<ul> <li>Parameters:</li> </ul> </li> <li>GNUInlineAttr</li> <li>LeafAttr</li> <li>LoaderUninitializedAttr</li> <li>MaxFieldAlignmentAttr<ul> <li>Parameters:</li> </ul> </li> <li>MayAliasAttr</li> <li>ModeAttr<ul> <li>Parameters:</li> </ul> </li> <li>NoAliasAttr</li> <li>NoCfCheckAttr</li> <li>NoCommonAttr</li> <li>NoDebugAttr</li> <li>NoDuplicateAttr</li> <li>NoInlineAttr</li> <li>NoInstrumentFunctionAttr</li> <li>NoProfileFunctionAttr</li> <li>NoThrowAttr</li> <li>NonAllocatingAttr</li> <li>NonBlockingAttr</li> <li>NonNullAttr</li> <li>NotTailCalledAttr</li> <li>OffsetOfNodeAttr<ul> <li>Parameters:</li> </ul> </li> <li>OverloadableAttr</li> <li>PackedAttr</li> <li>PassObjectSizeAttr<ul> <li>Parameters:</li> </ul> </li> <li>PureAttr</li> <li>RestrictAttr</li> <li>ReturnsTwiceAttr</li> <li>SectionAttr<ul> <li>Parameters:</li> </ul> </li> <li>StandaloneDebugAttr</li> <li>SwiftAttrAttr<ul> <li>Parameters:</li> </ul> </li> <li>TargetAttr<ul> <li>Parameters:</li> </ul> </li> <li>TransparentUnionAttr</li> <li>UCVQualifiersAttr<ul> <li>Parameters:</li> </ul> </li> <li>UnavailableAttr<ul> <li>Parameters:</li> </ul> </li> <li>UnusedAttr</li> <li>UsedAttr</li> <li>VisibilityAttr<ul> <li>Parameters:</li> </ul> </li> <li>WarnUnusedResultAttr</li> </ul> </li> <li>Types<ul> <li>AdjustedType<ul> <li>Parameters:</li> </ul> </li> <li>ArrayType<ul> <li>Parameters:</li> </ul> </li> <li>AtomicType<ul> <li>Parameters:</li> </ul> </li> <li>AttributedType<ul> <li>Parameters:</li> </ul> </li> <li>AutoType<ul> <li>Parameters:</li> </ul> </li> <li>BFloat16Type<ul> <li>Parameters:</li> </ul> </li> <li>BoolType<ul> <li>Parameters:</li> </ul> </li> <li>CharType<ul> <li>Parameters:</li> </ul> </li> <li>ComplexType<ul> <li>Parameters:</li> </ul> </li> <li>CountAttributedType<ul> <li>Parameters:</li> </ul> </li> <li>DecayedType<ul> <li>Parameters:</li> </ul> </li> <li>DoubleType<ul> <li>Parameters:</li> </ul> </li> <li>ElaboratedType<ul> <li>Parameters:</li> </ul> </li> <li>EnumType<ul> <li>Parameters:</li> </ul> </li> <li>Float128Type<ul> <li>Parameters:</li> </ul> </li> <li>FloatType<ul> <li>Parameters:</li> </ul> </li> <li>HalfType<ul> <li>Parameters:</li> </ul> </li> <li>Int128Type<ul> <li>Parameters:</li> </ul> </li> <li>IntType<ul> <li>Parameters:</li> </ul> </li> <li>LValueType<ul> <li>Parameters:</li> </ul> </li> <li>LabelType</li> <li>LongDoubleType<ul> <li>Parameters:</li> </ul> </li> <li>LongLongType<ul> <li>Parameters:</li> </ul> </li> <li>LongType<ul> <li>Parameters:</li> </ul> </li> <li>MacroQualifiedType<ul> <li>Parameters:</li> </ul> </li> <li>ParenType<ul> <li>Parameters:</li> </ul> </li> <li>PointerType<ul> <li>Parameters:</li> </ul> </li> <li>RValueType<ul> <li>Parameters:</li> </ul> </li> <li>RecordType<ul> <li>Parameters:</li> </ul> </li> <li>ReferenceType<ul> <li>Parameters:</li> </ul> </li> <li>ShortType<ul> <li>Parameters:</li> </ul> </li> <li>TypeOfExprType<ul> <li>Parameters:</li> </ul> </li> <li>TypeOfTypeType<ul> <li>Parameters:</li> </ul> </li> <li>TypedefType<ul> <li>Parameters:</li> </ul> </li> <li>VectorType<ul> <li>Parameters:</li> </ul> </li> <li>VoidType<ul> <li>Parameters:</li> </ul> </li> </ul> </li> <li>Enums<ul> <li>AccessSpecifier<ul> <li>Cases:</li> </ul> </li> <li>CastKind<ul> <li>Cases:</li> </ul> </li> <li>CountType<ul> <li>Cases:</li> </ul> </li> <li>FPredicate<ul> <li>Cases:</li> </ul> </li> <li>IdentKind<ul> <li>Cases:</li> </ul> </li> <li>Predicate<ul> <li>Cases:</li> </ul> </li> <li>Visibility<ul> <li>Cases:</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"dialects/HighLevel/HighLevel/#operations","title":"Operations","text":""},{"location":"dialects/HighLevel/HighLevel/#hlaccess-vasthlaccessspecifierop","title":"<code>hl.access</code> (::vast::hl::AccessSpecifierOp)","text":"<p>VAST C++ access specifier declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.access` attr-dict $spec\n</code></pre> <p>VAST C++ access specifier declaration</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>spec</code>::vast::hl::AccessSpecifierAttrAccess specifier"},{"location":"dialects/HighLevel/HighLevel/#hladd-vasthladdiop","title":"<code>hl.add</code> (::vast::hl::AddIOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.add` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results) <p>Traits: <code>Commutative</code></p> <p>Interfaces: <code>Core_ArithBinOp</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hladdressof-vasthladdressof","title":"<code>hl.addressof</code> (::vast::hl::AddressOf)","text":"<p>VAST addressof operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.addressof` $value attr-dict `:` type($value) `-&gt;` type($result)\n</code></pre> <p>VAST addressof operation</p>"},{"location":"dialects/HighLevel/HighLevel/#operands_1","title":"Operands:","text":"Operand Description <code>value</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_1","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlalias-vasthltypealiasop","title":"<code>hl.alias</code> (::vast::hl::TypeAliasOp)","text":"<p>VAST type alias operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.alias` $sym_name attr-dict `:` $type\n</code></pre> <p>This operation corresponds to <code>clang::TypeAliasDecl</code>.</p> <p>Interfaces: <code>Core_Symbol</code>, <code>Core_TypeDefinition</code>, <code>Core_TypeSymbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_1","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>sym_name</code>::mlir::StringAttrstring attribute <code>type</code>::mlir::TypeAttrany type attribute"},{"location":"dialects/HighLevel/HighLevel/#hlalignofexpr-vasthlalignofexprop","title":"<code>hl.alignof.expr</code> (::vast::hl::AlignOfExprOp)","text":"<p>VAST expr alignof operator</p> <p>Syntax:</p> <pre><code>operation ::= `hl.alignof.expr` attr-dict `-&gt;` type($result) $expr\n</code></pre> <p>VAST expr alignof operator Traits: <code>AlwaysSpeculatableImplTrait</code></p> <p>Interfaces: <code>ConditionallySpeculatable</code>, <code>NoMemoryEffect (MemoryEffectOpInterface)</code></p> <p>Effects: <code>MemoryEffects::Effect{}</code></p>"},{"location":"dialects/HighLevel/HighLevel/#results_2","title":"Results:","text":"Result Description <code>result</code>"},{"location":"dialects/HighLevel/HighLevel/#hlalignoftype-vasthlalignoftypeop","title":"<code>hl.alignof.type</code> (::vast::hl::AlignOfTypeOp)","text":"<p>VAST type alignof operator</p> <p>Syntax:</p> <pre><code>operation ::= `hl.alignof.type` $arg attr-dict `-&gt;` type($result)\n</code></pre> <p>VAST type alignof operator Traits: <code>AlwaysSpeculatableImplTrait</code></p> <p>Interfaces: <code>ConditionallySpeculatable</code>, <code>NoMemoryEffect (MemoryEffectOpInterface)</code></p> <p>Effects: <code>MemoryEffects::Effect{}</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_2","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>arg</code>::mlir::TypeAttrany type attribute"},{"location":"dialects/HighLevel/HighLevel/#results_3","title":"Results:","text":"Result Description <code>result</code>"},{"location":"dialects/HighLevel/HighLevel/#hlasm-vasthlasmop","title":"<code>hl.asm</code> (::vast::hl::AsmOp)","text":"<p>VAST operation for inline assembly</p> <p>Syntax:</p> <pre><code>operation ::= `hl.asm` attr-dict $asm_template `(`($output_names $asm_outputs^ `:` $output_constraints)? `)` `(` (`ins` `:`$input_names $asm_inputs^ `:` $input_constraints)? `)` `(`( $clobbers^)?`)` `(`( $labels^)?`)` `:` functional-type(operands, results)\n</code></pre> <p>VAST operation mirroring the GCCAsmStmt in clang AST. It prints a name for every operand (either its id or user-supplied string).</p> <p>Traits: <code>AttrSizedOperandSegments</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_3","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>asm_template</code>::mlir::StringAttrstring attribute <code>is_volatile</code>::mlir::UnitAttrunit attribute <code>has_goto</code>::mlir::UnitAttrunit attribute <code>output_names</code>::mlir::ArrayAttrarray attribute <code>input_names</code>::mlir::ArrayAttrarray attribute <code>output_constraints</code>::mlir::ArrayAttrarray attribute <code>input_constraints</code>::mlir::ArrayAttrarray attribute <code>clobbers</code>::mlir::ArrayAttrarray attribute"},{"location":"dialects/HighLevel/HighLevel/#operands_2","title":"Operands:","text":"Operand Description <code>asm_outputs</code> variadic of any type <code>asm_inputs</code> variadic of any type <code>labels</code> variadic of any type"},{"location":"dialects/HighLevel/HighLevel/#hlassign-vasthlassignop","title":"<code>hl.assign</code> (::vast::hl::AssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_3","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_4","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignadd-vasthladdiassignop","title":"<code>hl.assign.add</code> (::vast::hl::AddIAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.add` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_4","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_5","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignbinand-vasthlbinandassignop","title":"<code>hl.assign.bin.and</code> (::vast::hl::BinAndAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.bin.and` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_5","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_6","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignbinashr-vasthlbinashrassignop","title":"<code>hl.assign.bin.ashr</code> (::vast::hl::BinAShrAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.bin.ashr` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_6","title":"Operands:","text":"Operand Description <code>src</code> lvalue to <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_7","title":"Results:","text":"Result Description <code>result</code>"},{"location":"dialects/HighLevel/HighLevel/#hlassignbinlshr-vasthlbinlshrassignop","title":"<code>hl.assign.bin.lshr</code> (::vast::hl::BinLShrAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.bin.lshr` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_7","title":"Operands:","text":"Operand Description <code>src</code> lvalue to <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_8","title":"Results:","text":"Result Description <code>result</code>"},{"location":"dialects/HighLevel/HighLevel/#hlassignbinor-vasthlbinorassignop","title":"<code>hl.assign.bin.or</code> (::vast::hl::BinOrAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.bin.or` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_8","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_9","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignbinshl-vasthlbinshlassignop","title":"<code>hl.assign.bin.shl</code> (::vast::hl::BinShlAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.bin.shl` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_9","title":"Operands:","text":"Operand Description <code>src</code> lvalue to <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_10","title":"Results:","text":"Result Description <code>result</code>"},{"location":"dialects/HighLevel/HighLevel/#hlassignbinxor-vasthlbinxorassignop","title":"<code>hl.assign.bin.xor</code> (::vast::hl::BinXorAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.bin.xor` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_10","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_11","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignfadd-vasthladdfassignop","title":"<code>hl.assign.fadd</code> (::vast::hl::AddFAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.fadd` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_11","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_12","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignfdiv-vasthldivfassignop","title":"<code>hl.assign.fdiv</code> (::vast::hl::DivFAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.fdiv` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_12","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_13","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignfmul-vasthlmulfassignop","title":"<code>hl.assign.fmul</code> (::vast::hl::MulFAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.fmul` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_13","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_14","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignfrem-vasthlremfassignop","title":"<code>hl.assign.frem</code> (::vast::hl::RemFAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.frem` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_14","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_15","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignfsub-vasthlsubfassignop","title":"<code>hl.assign.fsub</code> (::vast::hl::SubFAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.fsub` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_15","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_16","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignmul-vasthlmuliassignop","title":"<code>hl.assign.mul</code> (::vast::hl::MulIAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.mul` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_16","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_17","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignsdiv-vasthldivsassignop","title":"<code>hl.assign.sdiv</code> (::vast::hl::DivSAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.sdiv` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_17","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_18","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignsrem-vasthlremsassignop","title":"<code>hl.assign.srem</code> (::vast::hl::RemSAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.srem` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_18","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_19","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignsub-vasthlsubiassignop","title":"<code>hl.assign.sub</code> (::vast::hl::SubIAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.sub` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_19","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_20","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignudiv-vasthldivuassignop","title":"<code>hl.assign.udiv</code> (::vast::hl::DivUAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.udiv` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_20","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_21","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlassignurem-vasthlremuassignop","title":"<code>hl.assign.urem</code> (::vast::hl::RemUAssignOp)","text":"<p>VAST compound assign operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.assign.urem` $src `to` $dst attr-dict `:` type(operands) `-&gt;` type(results)\n</code></pre> <p>A compound assign operation represents an assignment operation joined with an arithmetic operation. It requires the same types for both source and destination arguments.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  src to dst : functional-type(operands, results) <p>It represents C compound assignment statement:</p> <p>dst = src; <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_21","title":"Operands:","text":"Operand Description <code>src</code> lvalue to any type <code>dst</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_22","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlatomic_expr-vasthlatomicexpr","title":"<code>hl.atomic_expr</code> (::vast::hl::AtomicExpr)","text":"<p>VAST atomic expr</p> <p>Syntax:</p> <pre><code>operation ::= `hl.atomic_expr` $name attr-dict `:` type($result) $subexprs\n</code></pre> <p>VAST atomic expr stub Traits: <code>NoTerminator</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_4","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute"},{"location":"dialects/HighLevel/HighLevel/#results_23","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlattributed_stmt-vasthlattributedstmt","title":"<code>hl.attributed_stmt</code> (::vast::hl::AttributedStmt)","text":"<p>Attributed stmt operation.</p> <p>Syntax:</p> <pre><code>operation ::= `hl.attributed_stmt` attr-dict `:` $body\n</code></pre> <p>Traits: <code>NoTerminator</code></p>"},{"location":"dialects/HighLevel/HighLevel/#hlbase-vasthlcxxbasespecifierop","title":"<code>hl.base</code> (::vast::hl::CxxBaseSpecifierOp)","text":"<p>VAST base class specifier</p> <p>Syntax:</p> <pre><code>operation ::= `hl.base` $type attr-dict $access (`virtual` $is_virtual^)?\n</code></pre> <p>VAST base class specifier</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_5","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>type</code>::mlir::TypeAttrany type attribute <code>access</code>::vast::hl::AccessSpecifierAttrAccess specifier <code>is_virtual</code>::mlir::UnitAttrunit attribute"},{"location":"dialects/HighLevel/HighLevel/#hlbinand-vasthlbinandop","title":"<code>hl.bin.and</code> (::vast::hl::BinAndOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.bin.and` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results) <p>Interfaces: <code>Core_ArithBinOp</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_22","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_24","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlbinashr-vasthlbinashrop","title":"<code>hl.bin.ashr</code> (::vast::hl::BinAShrOp)","text":"<p>VAST binary shift operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.bin.ashr` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level binary shift operation. This operation takes two operands and returns one result.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results)"},{"location":"dialects/HighLevel/HighLevel/#operands_23","title":"Operands:","text":"Operand Description <code>lhs</code> <code>rhs</code>"},{"location":"dialects/HighLevel/HighLevel/#results_25","title":"Results:","text":"Result Description <code>result</code>"},{"location":"dialects/HighLevel/HighLevel/#hlbincomma-vasthlbincomma","title":"<code>hl.bin.comma</code> (::vast::hl::BinComma)","text":"<p>VAST binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.bin.comma` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#operands_24","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_26","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlbinland-vasthlbinlandop","title":"<code>hl.bin.land</code> (::vast::hl::BinLAndOp)","text":"<p>VAST logical binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.bin.land` $lhs`,` $rhs attr-dict `:` type(results)\n</code></pre> <p>High-level logical binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : type"},{"location":"dialects/HighLevel/HighLevel/#results_27","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlbinlor-vasthlbinlorop","title":"<code>hl.bin.lor</code> (::vast::hl::BinLOrOp)","text":"<p>VAST logical binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.bin.lor` $lhs`,` $rhs attr-dict `:` type(results)\n</code></pre> <p>High-level logical binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : type"},{"location":"dialects/HighLevel/HighLevel/#results_28","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlbinlshr-vasthlbinlshrop","title":"<code>hl.bin.lshr</code> (::vast::hl::BinLShrOp)","text":"<p>VAST binary shift operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.bin.lshr` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level binary shift operation. This operation takes two operands and returns one result.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results)"},{"location":"dialects/HighLevel/HighLevel/#operands_25","title":"Operands:","text":"Operand Description <code>lhs</code> <code>rhs</code>"},{"location":"dialects/HighLevel/HighLevel/#results_29","title":"Results:","text":"Result Description <code>result</code>"},{"location":"dialects/HighLevel/HighLevel/#hlbinor-vasthlbinorop","title":"<code>hl.bin.or</code> (::vast::hl::BinOrOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.bin.or` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results) <p>Interfaces: <code>Core_ArithBinOp</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_26","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_30","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlbinshl-vasthlbinshlop","title":"<code>hl.bin.shl</code> (::vast::hl::BinShlOp)","text":"<p>VAST binary shift operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.bin.shl` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level binary shift operation. This operation takes two operands and returns one result.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results)"},{"location":"dialects/HighLevel/HighLevel/#operands_27","title":"Operands:","text":"Operand Description <code>lhs</code> <code>rhs</code>"},{"location":"dialects/HighLevel/HighLevel/#results_31","title":"Results:","text":"Result Description <code>result</code>"},{"location":"dialects/HighLevel/HighLevel/#hlbinxor-vasthlbinxorop","title":"<code>hl.bin.xor</code> (::vast::hl::BinXorOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.bin.xor` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results) <p>Interfaces: <code>Core_ArithBinOp</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_28","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_32","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlbinary_cond-vasthlbinarycondop","title":"<code>hl.binary_cond</code> (::vast::hl::BinaryCondOp)","text":"<p>VAST binary conditional statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.binary_cond` attr-dict `:` type(results) $commonRegion `,` $condRegion `?` $thenRegion `:` $elseRegion\n</code></pre> <p>Binary Conditional operator defined by the GNU extension of C. This operation holds in total 4 regions: 1) The <code>common</code> region holds the common subexpression of the condition and result 2) The <code>cond</code> region takes an argument, which should be the result of <code>common</code>,    and yields the condition result. 2) The <code>then</code> region takes an argument, which should be the result of <code>common</code>,    and yields the result (it may potentially contain implicit casts). 3) The <code>else</code> region contains the right hand side expression and yields the result.</p> <p>Traits: <code>NoTerminator</code></p>"},{"location":"dialects/HighLevel/HighLevel/#results_33","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlbreak-vasthlbreakop","title":"<code>hl.break</code> (::vast::hl::BreakOp)","text":"<p>VAST break statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.break` attr-dict\n</code></pre> <p>VAST break statement Traits: <code>Core_SoftTerminatorTrait</code>, <code>NoRegionArguments</code>, <code>NoTerminator</code></p>"},{"location":"dialects/HighLevel/HighLevel/#hlbuiltin_bitcast-vasthlbuiltinbitcastop","title":"<code>hl.builtin_bitcast</code> (::vast::hl::BuiltinBitCastOp)","text":"<p>VAST cast operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.builtin_bitcast` $value $kind attr-dict `:` type($value) `-&gt;` type($result)\n</code></pre> <p>VAST cast operation</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_6","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>kind</code>::vast::hl::CastKindAttrcast kind"},{"location":"dialects/HighLevel/HighLevel/#operands_29","title":"Operands:","text":"Operand Description <code>value</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_34","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlbuiltin_types_compatible_ptype-vasthlbuiltintypescompatiblepop","title":"<code>hl.builtin_types_compatible_p.type</code> (::vast::hl::BuiltinTypesCompatiblePOp)","text":"<p>VAST representation of __builtin_types_compatible_p</p> <p>Syntax:</p> <pre><code>operation ::= `hl.builtin_types_compatible_p.type` $Type1`,` $Type2 `compatible` $compatible attr-dict `-&gt;` type($result)\n</code></pre> <p>Traits: <code>AlwaysSpeculatableImplTrait</code></p> <p>Interfaces: <code>ConditionallySpeculatable</code>, <code>NoMemoryEffect (MemoryEffectOpInterface)</code>, <code>TypeTraitExprInterface</code></p> <p>Effects: <code>MemoryEffects::Effect{}</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_7","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>Type1</code>::mlir::TypeAttrany type attribute <code>Type2</code>::mlir::TypeAttrany type attribute <code>compatible</code>::mlir::BoolAttrbool attribute"},{"location":"dialects/HighLevel/HighLevel/#results_35","title":"Results:","text":"Result Description <code>result</code>"},{"location":"dialects/HighLevel/HighLevel/#hlcall-vasthlcallop","title":"<code>hl.call</code> (::vast::hl::CallOp)","text":"<p>VAST call operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.call` $callee `(` $argOperands `)` attr-dict `:` functional-type( $argOperands, $results )\n</code></pre> <p>VAST call operation Interfaces: <code>CallOpInterface</code>, <code>VastCallOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_8","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>callee</code>::vast::core::FuncSymbolRefAttrfunction symbol reference attribute"},{"location":"dialects/HighLevel/HighLevel/#operands_30","title":"Operands:","text":"Operand Description <code>argOperands</code> variadic of any type"},{"location":"dialects/HighLevel/HighLevel/#results_36","title":"Results:","text":"Result Description <code>results</code> variadic of any type"},{"location":"dialects/HighLevel/HighLevel/#hlcase-vasthlcaseop","title":"<code>hl.case</code> (::vast::hl::CaseOp)","text":"<p>VAST case statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.case` $lhs $body attr-dict\n</code></pre> <p>The operation represents a single case of a switch statement.</p> <p>The generic form of the operation is as follows:</p> <p>hl.case {   ... / lhs/check region /   hl.value.yield %val : !hl.type } {   ... / body region / }</p> <p>It represents a C statement of form <code>case lhs: body;</code>.</p> <p>Traits: <code>NoRegionArguments</code>, <code>NoTerminator</code></p>"},{"location":"dialects/HighLevel/HighLevel/#hlchoose_expr-vasthlchooseexprop","title":"<code>hl.choose_expr</code> (::vast::hl::ChooseExprOp)","text":"<p>Representation of GNU __builtin_choose_expr</p> <p>Syntax:</p> <pre><code>operation ::= `hl.choose_expr` attr-dict (`cond` $condTrue^)? `:` type(results) $condRegion `?` $thenRegion `:` $elseRegion\n</code></pre> <p>The operation takes builders of three regions -- condition, true branch and false branch. Builders, given the location, build a particular region.</p> <p>The generic form of the operation is as follows:</p> <p>hl.cond {   ... / condition region /   hl.cond.yield %cond : !hl.bool } ? {   ... / true region / } : {   ... / false region / }</p> <p>Traits: <code>NoRegionArguments</code>, <code>NoTerminator</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_9","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>condTrue</code>::mlir::BoolAttrbool attribute"},{"location":"dialects/HighLevel/HighLevel/#results_37","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlclass-vasthlclassdeclop","title":"<code>hl.class</code> (::vast::hl::ClassDeclOp)","text":"<p>VAST C++ class declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.class` $name attr-dict `:` `bases` $bases $fields\n</code></pre> <p>VAST C++ class declaration Traits: <code>NoTerminator</code></p> <p>Interfaces: <code>Core_Symbol</code>, <code>Core_TypeSymbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_10","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute"},{"location":"dialects/HighLevel/HighLevel/#hlcmp-vasthlcmpop","title":"<code>hl.cmp</code> (::vast::hl::CmpOp)","text":"<p>VAST comparison operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.cmp` $predicate $lhs `,` $rhs  attr-dict `:` type(operands) `-&gt;` type($result)\n</code></pre> <p>VAST comparison operation</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_11","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>predicate</code>::vast::hl::PredicateAttrcomparison predicate"},{"location":"dialects/HighLevel/HighLevel/#operands_31","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_38","title":"Results:","text":"Result Description <code>result</code>"},{"location":"dialects/HighLevel/HighLevel/#hlcompound_literal-vasthlcompoundliteralop","title":"<code>hl.compound_literal</code> (::vast::hl::CompoundLiteralOp)","text":"<p>VAST compound literals operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.compound_literal` attr-dict `:` type($result) `=` $init\n</code></pre> <p>Creates a compound literal that represents an unnamed object and is initialzied by initializer-list.</p> <p>Is used to represetnt <code>clang::CompoundLiteralExpr</code>.</p>"},{"location":"dialects/HighLevel/HighLevel/#results_39","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlcond-vasthlcondop","title":"<code>hl.cond</code> (::vast::hl::CondOp)","text":"<p>VAST conditional statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.cond` attr-dict `:` type(results) $condRegion `?` $thenRegion `:` $elseRegion\n</code></pre> <p>The operation takes builders of three regions -- condition, true branch and false branch. Builders, given the location, build a particular region.</p> <p>The generic form of the operation is as follows:</p> <p>hl.cond {   ... / condition region /   hl.cond.yield %cond : !hl.bool } ? {   ... / true region / } : {   ... / false region / }</p> <p>Traits: <code>NoRegionArguments</code>, <code>NoTerminator</code></p>"},{"location":"dialects/HighLevel/HighLevel/#results_40","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlcondyield-vasthlcondyieldop","title":"<code>hl.cond.yield</code> (::vast::hl::CondYieldOp)","text":"<p>Condition yield operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.cond.yield` attr-dict $result `:` type($result)\n</code></pre> <p>A condition yield operation is used to terminate the region representing condition expression of control flow operations <code>IfOp</code>, <code>WhileOp</code>, <code>ForOp</code> and <code>DoOp</code>. It yields a boolean value for the conditional branch.</p> <p>The custom assembly form of the operation is as follows:</p> <p>hl.cond.yield result : BoolType</p> <p>Traits: <code>HasParent&lt;IfOp, WhileOp, ForOp, DoOp, CondOp, ChooseExprOp, BinaryCondOp&gt;</code>, <code>Terminator</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_32","title":"Operands:","text":"Operand Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlconst-vasthlconstantop","title":"<code>hl.const</code> (::vast::hl::ConstantOp)","text":"<p>VAST value constant</p> <p>Syntax:</p> <pre><code>operation ::= `hl.const` $value attr-dict\n</code></pre> <p>VAST value constant Traits: <code>AlwaysSpeculatableImplTrait</code>, <code>ConstantLike</code></p> <p>Interfaces: <code>ConditionallySpeculatable</code>, <code>InferTypeOpInterface</code>, <code>NoMemoryEffect (MemoryEffectOpInterface)</code></p> <p>Effects: <code>MemoryEffects::Effect{}</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_12","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>value</code>::mlir::TypedAttrTypedAttr instance"},{"location":"dialects/HighLevel/HighLevel/#results_41","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlconstinit-vasthlinitializedconstantop","title":"<code>hl.const.init</code> (::vast::hl::InitializedConstantOp)","text":"<p>VAST constant with non-trivial initialization</p> <p>Syntax:</p> <pre><code>operation ::= `hl.const.init` attr-dict `:` type($result) `=` $init\n</code></pre> <p>InitializedConstantOp is used to represent a constant with non-trivial initialization. The initialization is represented by a region that represents initialization expression.</p> <p>Traits: <code>AlwaysSpeculatableImplTrait</code>, <code>ConstantLike</code></p> <p>Interfaces: <code>ConditionallySpeculatable</code>, <code>NoMemoryEffect (MemoryEffectOpInterface)</code></p> <p>Effects: <code>MemoryEffects::Effect{}</code></p>"},{"location":"dialects/HighLevel/HighLevel/#results_42","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlcontinue-vasthlcontinueop","title":"<code>hl.continue</code> (::vast::hl::ContinueOp)","text":"<p>VAST continue statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.continue` attr-dict\n</code></pre> <p>VAST continue statement Traits: <code>Core_SoftTerminatorTrait</code>, <code>NoRegionArguments</code>, <code>NoTerminator</code></p>"},{"location":"dialects/HighLevel/HighLevel/#hlcstyle_cast-vasthlcstylecastop","title":"<code>hl.cstyle_cast</code> (::vast::hl::CStyleCastOp)","text":"<p>VAST cast operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.cstyle_cast` $value $kind attr-dict `:` type($value) `-&gt;` type($result)\n</code></pre> <p>VAST cast operation</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_13","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>kind</code>::vast::hl::CastKindAttrcast kind"},{"location":"dialects/HighLevel/HighLevel/#operands_33","title":"Operands:","text":"Operand Description <code>value</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_43","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlcxxstruct-vasthlcxxstructdeclop","title":"<code>hl.cxxstruct</code> (::vast::hl::CxxStructDeclOp)","text":"<p>VAST C++ struct declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.cxxstruct` $name attr-dict `:` `bases` $bases $fields\n</code></pre> <p>VAST C++ struct declaration Traits: <code>NoTerminator</code></p> <p>Interfaces: <code>Core_Symbol</code>, <code>Core_TypeSymbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_14","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute"},{"location":"dialects/HighLevel/HighLevel/#hldefault-vasthldefaultop","title":"<code>hl.default</code> (::vast::hl::DefaultOp)","text":"<p>VAST default statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.default` $body attr-dict\n</code></pre> <p>VAST default statement Traits: <code>NoRegionArguments</code>, <code>NoTerminator</code></p>"},{"location":"dialects/HighLevel/HighLevel/#hlderef-vasthlderef","title":"<code>hl.deref</code> (::vast::hl::Deref)","text":"<p>VAST deref operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.deref` $addr attr-dict `:` type($addr) `-&gt;` type($result)\n</code></pre> <p>VAST deref operation</p>"},{"location":"dialects/HighLevel/HighLevel/#operands_34","title":"Operands:","text":"Operand Description <code>addr</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_44","title":"Results:","text":"Result Description <code>result</code> lvalue to any type"},{"location":"dialects/HighLevel/HighLevel/#hldo-vasthldoop","title":"<code>hl.do</code> (::vast::hl::DoOp)","text":"<p>VAST do-while statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.do` $bodyRegion `while` $condRegion attr-dict\n</code></pre> <p>The operation represents a do-while statement.</p> <p>The generic form of the operation is as follows:</p> <p>hl.do {   ... / body region / } cond {   ... / cond region /   hl.cond.yield %cond : !hl.bool }</p> <p>Traits: <code>Core_ScopeLikeTrait</code>, <code>NoRegionArguments</code>, <code>NoTerminator</code>, <code>ShadowingSymbolTable</code></p> <p>Interfaces: <code>Core_SymbolTableOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#hlemptydecl-vasthlemptydeclop","title":"<code>hl.empty.decl</code> (::vast::hl::EmptyDeclOp)","text":"<p>Syntax:</p> <pre><code>operation ::= `hl.empty.decl` attr-dict\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#hlenum-vasthlenumdeclop","title":"<code>hl.enum</code> (::vast::hl::EnumDeclOp)","text":"<p>VAST enum declaration</p> <p>Enum declaration serves to declare region for enum constant declarations. It also defines an underlying type.</p> <p>Traits: <code>Core_EmptySymbolTable</code>, <code>NoTerminator</code></p> <p>Interfaces: <code>Core_SymbolTableOpInterface</code>, <code>Core_Symbol</code>, <code>Core_TypeDefinition</code>, <code>Core_TypeSymbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_15","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>sym_name</code>::mlir::StringAttrstring attribute <code>type</code>::mlir::TypeAttrany type attribute"},{"location":"dialects/HighLevel/HighLevel/#hlenumconst-vasthlenumconstantop","title":"<code>hl.enum.const</code> (::vast::hl::EnumConstantOp)","text":"<p>VAST enum constant declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.enum.const` $sym_name `=` $value attr-dict (`init` $init^)?\n</code></pre> <p>Enumeration constant servers to link name to an enum value. It is required to be scoped in Enum operation. For example:</p> <pre><code>hl.enum.const @F = 2 : !hl.int\n</code></pre> <p>A constant can have a constant expression initializer:</p> <pre><code>hl.enum.const @G = #core.integer&lt;12&gt; : !hl.int init  {\n  %0 = hl.enumref @F : !hl.int\n  %1 = hl.enumref @C : !hl.int\n  %2 = hl.add %0, %1 : !hl.int\n  hl.value.yield %2 : !hl.int\n}\n</code></pre> <p>Interfaces: <code>Core_EnumConstantSymbol</code>, <code>Core_Symbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_16","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>sym_name</code>::mlir::StringAttrstring attribute <code>value</code>::mlir::TypedAttrTypedAttr instance"},{"location":"dialects/HighLevel/HighLevel/#hlenumref-vasthlenumrefop","title":"<code>hl.enumref</code> (::vast::hl::EnumRefOp)","text":"<p>VAST enum constant reference declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.enumref` $name attr-dict `:` type($result)\n</code></pre> <p>VAST enum constant reference declaration</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_17","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::vast::core::EnumConstantSymbolRefAttrenum constant symbol reference attribute"},{"location":"dialects/HighLevel/HighLevel/#results_45","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlexpr-vasthlexprop","title":"<code>hl.expr</code> (::vast::hl::ExprOp)","text":"<p>VAST expression</p> <p>Syntax:</p> <pre><code>operation ::= `hl.expr` attr-dict `:` type($result) $subexpr\n</code></pre> <p>VAST expression Traits: <code>Core_ScopeLikeTrait</code>, <code>NoTerminator</code>, <code>ShadowingSymbolTable</code>, <code>SingleBlock</code></p> <p>Interfaces: <code>Core_SymbolTableOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#results_46","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlfadd-vasthladdfop","title":"<code>hl.fadd</code> (::vast::hl::AddFOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.fadd` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results) <p>Interfaces: <code>Core_ArithBinOp</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_35","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_47","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlfcmp-vasthlfcmpop","title":"<code>hl.fcmp</code> (::vast::hl::FCmpOp)","text":"<p>VAST flaoting point comparison operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.fcmp` $predicate $lhs `,` $rhs  attr-dict `:` type(operands) `-&gt;` type($result)\n</code></pre> <p>VAST floating point comparison operation</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_18","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>predicate</code>::vast::hl::FPredicateAttrfloating point comparison predicate"},{"location":"dialects/HighLevel/HighLevel/#operands_36","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_48","title":"Results:","text":"Result Description <code>result</code>"},{"location":"dialects/HighLevel/HighLevel/#hlfdiv-vasthldivfop","title":"<code>hl.fdiv</code> (::vast::hl::DivFOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.fdiv` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results) <p>Interfaces: <code>Core_ArithBinOp</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_37","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_49","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlfield-vasthlfielddeclop","title":"<code>hl.field</code> (::vast::hl::FieldDeclOp)","text":"<p>VAST record field declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.field` $sym_name attr-dict (`bw` $bits^)? `:` $type\n</code></pre> <p>VAST record field declaration Interfaces: <code>Core_MemberVarSymbol</code>, <code>Core_Symbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_19","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>sym_name</code>::mlir::StringAttrstring attribute <code>type</code>::mlir::TypeAttrany type attribute <code>bits</code>::mlir::IntegerAttr32-bit signless integer attribute"},{"location":"dialects/HighLevel/HighLevel/#hlfile_scope_asm-vasthlfilescopeasmop","title":"<code>hl.file_scope_asm</code> (::vast::hl::FileScopeAsmOp)","text":"<p>VAST operation for file scope assembly</p> <p>Syntax:</p> <pre><code>operation ::= `hl.file_scope_asm` attr-dict $asm_string\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#attributes_20","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>asm_string</code>::mlir::StringAttrstring attribute"},{"location":"dialects/HighLevel/HighLevel/#hlfmul-vasthlmulfop","title":"<code>hl.fmul</code> (::vast::hl::MulFOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.fmul` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results) <p>Interfaces: <code>Core_ArithBinOp</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_38","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_50","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlfor-vasthlforop","title":"<code>hl.for</code> (::vast::hl::ForOp)","text":"<p>VAST for statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.for` $condRegion `incr` $incrRegion attr-dict `do` $bodyRegion\n</code></pre> <p>Operation represents a for-loop statement.</p> <p>The generic form of the operation is as follows:</p> <p>hl.for {   ... / cond region /   hl.cond.yield %cond : !hl.bool } incr {   ... / increment/update region / } do {   ... / body region / }</p> <p>Traits: <code>Core_ScopeLikeTrait</code>, <code>NoRegionArguments</code>, <code>NoTerminator</code>, <code>ShadowingSymbolTable</code></p> <p>Interfaces: <code>Core_SymbolTableOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#hlfrem-vasthlremfop","title":"<code>hl.frem</code> (::vast::hl::RemFOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.frem` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results) <p>Interfaces: <code>Core_ArithBinOp</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_39","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_51","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlfsub-vasthlsubfop","title":"<code>hl.fsub</code> (::vast::hl::SubFOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.fsub` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results) <p>Interfaces: <code>Core_ArithBinOp</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_40","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_52","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlfunc-vasthlfuncop","title":"<code>hl.func</code> (::vast::hl::FuncOp)","text":"<p>VAST function template</p> <p>Syntax:</p> <pre><code>operation ::= `hl.func` $sym_name custom&lt; FunctionSignatureAndBody &gt;($function_type, attr-dict, $body)\n</code></pre> <p>Inspired by <code>cir::FuncOp</code> and <code>mlir::func::FuncOp</code>:</p> <p>Operations within the function cannot implicitly capture values defined outside of the function, i.e. Functions are <code>IsolatedFromAbove</code>. All external references must use function arguments or attributes that establish a symbolic connection (e.g. symbols referenced by name via a string attribute like SymbolRefAttr). An external function declaration (used when referring to a function declared in some other module) has no body.</p> <p>The function linkage information is specified by <code>linkage</code>, as defined by <code>GlobalLinkageKind</code> attribute.</p> <p>Traits: <code>AutomaticAllocationScope</code>, <code>IsolatedFromAbove</code>, <code>NoTerminator</code>, <code>ShadowingSymbolTable</code></p> <p>Interfaces: <code>CallableOpInterface</code>, <code>Core_FuncSymbol</code>, <code>Core_FunctionOpInterface</code>, <code>Core_SymbolTableOpInterface</code>, <code>Core_Symbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_21","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>sym_name</code>::mlir::StringAttrstring attribute <code>function_type</code>::mlir::TypeAttrtype attribute of function type <code>linkage</code>::vast::core::GlobalLinkageKindAttrglobal linkage kind <code>sym_visibility</code>::mlir::StringAttrstring attribute <code>arg_attrs</code>::mlir::ArrayAttrArray of dictionary attributes <code>res_attrs</code>::mlir::ArrayAttrArray of dictionary attributes"},{"location":"dialects/HighLevel/HighLevel/#hlfuncref-vasthlfuncrefop","title":"<code>hl.funcref</code> (::vast::hl::FuncRefOp)","text":"<p>VAST function reference declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.funcref` $function attr-dict `:` type($result)\n</code></pre> <p>VAST function reference declaration</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_22","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>function</code>::vast::core::FuncSymbolRefAttrfunction symbol reference attribute"},{"location":"dialects/HighLevel/HighLevel/#results_53","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlgeneric_asoc-vasthlgenericassocexpr","title":"<code>hl.generic_asoc</code> (::vast::hl::GenericAssocExpr)","text":"<p>Op representing single case of _Generic expression.</p> <p>Syntax:</p> <pre><code>operation ::= `hl.generic_asoc` attr-dict (`match` $matchType^)? `:` $body `-&gt;` type($result)\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#attributes_23","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>matchType</code>::mlir::TypeAttrany type attribute"},{"location":"dialects/HighLevel/HighLevel/#results_54","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlgeneric_expr-vasthlgenericselectionexpr","title":"<code>hl.generic_expr</code> (::vast::hl::GenericSelectionExpr)","text":"<p>C11 _Generic expression.</p> <p>Syntax:</p> <pre><code>operation ::= `hl.generic_expr` attr-dict `match` (`region` `:` $control^)? (`type` `:` $controlType^)? $body `-&gt;` type($result)\n</code></pre> <p>Traits: <code>NoTerminator</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_24","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>controlType</code>::mlir::TypeAttrany type attribute <code>selected</code>::mlir::IntegerAttrindex attribute"},{"location":"dialects/HighLevel/HighLevel/#results_55","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlgnuextension-vasthlextensionop","title":"<code>hl.gnu.extension</code> (::vast::hl::ExtensionOp)","text":"<p>VAST extension (__extension__) keyword</p> <p>Syntax:</p> <pre><code>operation ::= `hl.gnu.extension` $value attr-dict `:` type($value) `-&gt;` type($result)\n</code></pre> <p>VAST op corresponding to GNU extension keyword.</p>"},{"location":"dialects/HighLevel/HighLevel/#operands_41","title":"Operands:","text":"Operand Description <code>value</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_56","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlgoto-vasthlgotostmt","title":"<code>hl.goto</code> (::vast::hl::GotoStmt)","text":"<p>Syntax:</p> <pre><code>operation ::= `hl.goto` $label attr-dict\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#operands_42","title":"Operands:","text":"Operand Description <code>label</code>"},{"location":"dialects/HighLevel/HighLevel/#hlif-vasthlifop","title":"<code>hl.if</code> (::vast::hl::IfOp)","text":"<p>VAST if statement</p> <p>The operation takes builders of two mandatory regions -- condition and then region -- and one builder optional region representing else block of C if statement. Builders, given the location, build a particular region.</p> <p>The generic form of the operation is as follows:</p> <p>hl.if {   ... / condition region /   hl.cond.yield %cond : !hl.bool } then {   ... / then region / } else {   ... / else region / }</p> <p>Traits: <code>Core_ScopeLikeTrait</code>, <code>NoRegionArguments</code>, <code>NoTerminator</code>, <code>ShadowingSymbolTable</code></p> <p>Interfaces: <code>Core_SymbolTableOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#hlimag-vasthlimagop","title":"<code>hl.imag</code> (::vast::hl::ImagOp)","text":"<p>Syntax:</p> <pre><code>operation ::= `hl.imag` $arg attr-dict `:` type($arg) `-&gt;` type($result)\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#operands_43","title":"Operands:","text":"Operand Description <code>arg</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_57","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlimplicit_cast-vasthlimplicitcastop","title":"<code>hl.implicit_cast</code> (::vast::hl::ImplicitCastOp)","text":"<p>VAST cast operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.implicit_cast` $value $kind attr-dict `:` type($value) `-&gt;` type($result)\n</code></pre> <p>VAST cast operation</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_25","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>kind</code>::vast::hl::CastKindAttrcast kind"},{"location":"dialects/HighLevel/HighLevel/#operands_44","title":"Operands:","text":"Operand Description <code>value</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_58","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlindirect_call-vasthlindirectcallop","title":"<code>hl.indirect_call</code> (::vast::hl::IndirectCallOp)","text":"<p>VAST call operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.indirect_call` $callee `:` type($callee)  `(` $argOperands `)` attr-dict `:` functional-type( $argOperands, $results )\n</code></pre> <p>VAST call operation Interfaces: <code>CallOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_45","title":"Operands:","text":"Operand Description <code>callee</code> any type <code>argOperands</code> variadic of any type"},{"location":"dialects/HighLevel/HighLevel/#results_59","title":"Results:","text":"Result Description <code>results</code> variadic of any type"},{"location":"dialects/HighLevel/HighLevel/#hlindirect_goto-vasthlindirectgotostmt","title":"<code>hl.indirect_goto</code> (::vast::hl::IndirectGotoStmt)","text":"<p>Syntax:</p> <pre><code>operation ::= `hl.indirect_goto` attr-dict `:` $target\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#hlinitlist-vasthlinitlistexpr","title":"<code>hl.initlist</code> (::vast::hl::InitListExpr)","text":"<p>VAST initializer list expression</p> <p>Syntax:</p> <pre><code>operation ::= `hl.initlist` $elements attr-dict `:` functional-type($elements, results)\n</code></pre> <p>VAST initializer list expression</p>"},{"location":"dialects/HighLevel/HighLevel/#operands_46","title":"Operands:","text":"Operand Description <code>elements</code> variadic of any type"},{"location":"dialects/HighLevel/HighLevel/#results_60","title":"Results:","text":"Result Description \u00abunnamed\u00bb variadic of any type"},{"location":"dialects/HighLevel/HighLevel/#hllabel-vasthllabelstmt","title":"<code>hl.label</code> (::vast::hl::LabelStmt)","text":"<p>VAST control flow operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.label` $label $body attr-dict\n</code></pre> <p>VAST control flow operation Traits: <code>NoRegionArguments</code>, <code>NoTerminator</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_47","title":"Operands:","text":"Operand Description <code>label</code>"},{"location":"dialects/HighLevel/HighLevel/#hllabeldecl-vasthllabeldeclop","title":"<code>hl.label.decl</code> (::vast::hl::LabelDeclOp)","text":"<p>Syntax:</p> <pre><code>operation ::= `hl.label.decl` $sym_name attr-dict `:` type($result)\n</code></pre> <p>Interfaces: <code>Core_LabelSymbol</code>, <code>Core_Symbol</code>, <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_26","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>sym_name</code>::mlir::StringAttrstring attribute"},{"location":"dialects/HighLevel/HighLevel/#results_61","title":"Results:","text":"Result Description <code>result</code>"},{"location":"dialects/HighLevel/HighLevel/#hllabeladdr-vasthladdrlabelexpr","title":"<code>hl.labeladdr</code> (::vast::hl::AddrLabelExpr)","text":"<p>VAST address of label extension</p> <p>Syntax:</p> <pre><code>operation ::= `hl.labeladdr` $label attr-dict `:` type($result)\n</code></pre> <p>VAST address of label extension</p>"},{"location":"dialects/HighLevel/HighLevel/#operands_48","title":"Operands:","text":"Operand Description <code>label</code>"},{"location":"dialects/HighLevel/HighLevel/#results_62","title":"Results:","text":"Result Description <code>result</code> pointer like type"},{"location":"dialects/HighLevel/HighLevel/#hllnot-vasthllnotop","title":"<code>hl.lnot</code> (::vast::hl::LNotOp)","text":"<p>VAST unary logical operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.lnot` $arg attr-dict `:` type($arg) `-&gt;` type($res)\n</code></pre> <p>High-level unary logical operation assures that result has the right type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %arg : type -&gt; ret_type"},{"location":"dialects/HighLevel/HighLevel/#operands_49","title":"Operands:","text":"Operand Description <code>arg</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_63","title":"Results:","text":"Result Description <code>res</code>"},{"location":"dialects/HighLevel/HighLevel/#hlmember-vasthlrecordmemberop","title":"<code>hl.member</code> (::vast::hl::RecordMemberOp)","text":"<p>VAST record element access operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.member` $record `at` $field attr-dict `:` type($record) `-&gt;` type($element)\n</code></pre> <p>VAST record element access operation</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_27","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>field</code>::vast::core::MemberVarSymbolRefAttrmember variable symbol reference attribute"},{"location":"dialects/HighLevel/HighLevel/#operands_50","title":"Operands:","text":"Operand Description <code>record</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_64","title":"Results:","text":"Result Description <code>element</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlminus-vasthlminusop","title":"<code>hl.minus</code> (::vast::hl::MinusOp)","text":"<p>VAST unary type preserving operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.minus` $arg attr-dict `:` type($result)\n</code></pre> <p>Type preserving high-level unary operation assures that argument and result has the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %arg : type <p>Traits: <code>SameOperandsAndResultType</code></p> <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_51","title":"Operands:","text":"Operand Description <code>arg</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_65","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlmul-vasthlmuliop","title":"<code>hl.mul</code> (::vast::hl::MulIOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.mul` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results) <p>Traits: <code>Commutative</code></p> <p>Interfaces: <code>Core_ArithBinOp</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_52","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_66","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlnot-vasthlnotop","title":"<code>hl.not</code> (::vast::hl::NotOp)","text":"<p>VAST unary type preserving operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.not` $arg attr-dict `:` type($result)\n</code></pre> <p>Type preserving high-level unary operation assures that argument and result has the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %arg : type <p>Traits: <code>SameOperandsAndResultType</code></p> <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_53","title":"Operands:","text":"Operand Description <code>arg</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_67","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlnull-vasthlnullstmt","title":"<code>hl.null</code> (::vast::hl::NullStmt)","text":"<p>VAST null statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.null` attr-dict\n</code></pre> <p>VAST null statement</p>"},{"location":"dialects/HighLevel/HighLevel/#hloffsetofexpr-vasthloffsetofexprop","title":"<code>hl.offsetof.expr</code> (::vast::hl::OffsetOfExprOp)","text":"<p>VAST expr offsetof operator</p> <p>Syntax:</p> <pre><code>operation ::= `hl.offsetof.expr` attr-dict `type` `:` $source `,` `member` `:` $components `:` type($result) $array_index_exprs\n</code></pre> <p>VAST expr offsetof operator. The operation holds an array of components - identifiers or indexes of array indexing expressions and an array of regions - each corresponding to one indexing expression.</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_28","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>source</code>::mlir::TypeAttrany type attribute <code>components</code>::mlir::ArrayAttrarray attribute"},{"location":"dialects/HighLevel/HighLevel/#results_68","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlopaque_expr-vasthlopaquevalueexpr","title":"<code>hl.opaque_expr</code> (::vast::hl::OpaqueValueExpr)","text":"<p>Opaque value expression from clang AST.</p> <p>Syntax:</p> <pre><code>operation ::= `hl.opaque_expr` $arg `:` functional-type(operands, $result) attr-dict\n</code></pre> <p>This op takes an argument and returns it. According to clang documentation it is \"usually\" a copy operation with no special semantings. The current use in VAST is to have the opaque value computed in some region and then using this op to extract the computed value from region argument (see BinaryCondOp).</p>"},{"location":"dialects/HighLevel/HighLevel/#operands_54","title":"Operands:","text":"Operand Description <code>arg</code> variadic of any type"},{"location":"dialects/HighLevel/HighLevel/#results_69","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlparam-vasthlparmvardeclop","title":"<code>hl.param</code> (::vast::hl::ParmVarDeclOp)","text":"<p>VAST parameter declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.param` $sym_name `=` $param `:` type($param) attr-dict\n</code></pre> <p>VAST parameter declaration Interfaces: <code>Core_Symbol</code>, <code>Core_VarSymbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_29","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>sym_name</code>::mlir::StringAttrstring attribute"},{"location":"dialects/HighLevel/HighLevel/#operands_55","title":"Operands:","text":"Operand Description <code>param</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlplus-vasthlplusop","title":"<code>hl.plus</code> (::vast::hl::PlusOp)","text":"<p>VAST unary type preserving operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.plus` $arg attr-dict `:` type($result)\n</code></pre> <p>Type preserving high-level unary operation assures that argument and result has the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %arg : type <p>Traits: <code>SameOperandsAndResultType</code></p> <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_56","title":"Operands:","text":"Operand Description <code>arg</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_70","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlpostdec-vasthlpostdecop","title":"<code>hl.post.dec</code> (::vast::hl::PostDecOp)","text":"<p>VAST unary inplace operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.post.dec` $arg attr-dict `:` type($arg) `-&gt;` type($result)\n</code></pre> <p>Inplace high-level unary operation changes its single argument in place. It does not produce a new value.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %arg : type <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_57","title":"Operands:","text":"Operand Description <code>arg</code> lvalue to any type"},{"location":"dialects/HighLevel/HighLevel/#results_71","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlpostinc-vasthlpostincop","title":"<code>hl.post.inc</code> (::vast::hl::PostIncOp)","text":"<p>VAST unary inplace operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.post.inc` $arg attr-dict `:` type($arg) `-&gt;` type($result)\n</code></pre> <p>Inplace high-level unary operation changes its single argument in place. It does not produce a new value.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %arg : type <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_58","title":"Operands:","text":"Operand Description <code>arg</code> lvalue to any type"},{"location":"dialects/HighLevel/HighLevel/#results_72","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlpredec-vasthlpredecop","title":"<code>hl.pre.dec</code> (::vast::hl::PreDecOp)","text":"<p>VAST unary inplace operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.pre.dec` $arg attr-dict `:` type($arg) `-&gt;` type($result)\n</code></pre> <p>Inplace high-level unary operation changes its single argument in place. It does not produce a new value.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %arg : type <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_59","title":"Operands:","text":"Operand Description <code>arg</code> lvalue to any type"},{"location":"dialects/HighLevel/HighLevel/#results_73","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlpreinc-vasthlpreincop","title":"<code>hl.pre.inc</code> (::vast::hl::PreIncOp)","text":"<p>VAST unary inplace operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.pre.inc` $arg attr-dict `:` type($arg) `-&gt;` type($result)\n</code></pre> <p>Inplace high-level unary operation changes its single argument in place. It does not produce a new value.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %arg : type <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_60","title":"Operands:","text":"Operand Description <code>arg</code> lvalue to any type"},{"location":"dialects/HighLevel/HighLevel/#results_74","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlpredefinedexpr-vasthlpredefinedexpr","title":"<code>hl.predefined.expr</code> (::vast::hl::PredefinedExpr)","text":"<p>VAT predefined expr ( such as __func__ )</p> <p>Syntax:</p> <pre><code>operation ::= `hl.predefined.expr` $value $kind attr-dict `:` type($value) `-&gt;` type($result)\n</code></pre> <p>VAT predefined expr ( such as func )</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_30","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>kind</code>::vast::hl::IdentKindAttrident kind"},{"location":"dialects/HighLevel/HighLevel/#operands_61","title":"Operands:","text":"Operand Description <code>value</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_75","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlpreferred_alignofexpr-vasthlpreferredalignofexprop","title":"<code>hl.preferred_alignof.expr</code> (::vast::hl::PreferredAlignOfExprOp)","text":"<p>VAST expr alignof operator</p> <p>Syntax:</p> <pre><code>operation ::= `hl.preferred_alignof.expr` attr-dict `-&gt;` type($result) $expr\n</code></pre> <p>VAST expr alignof operator Traits: <code>AlwaysSpeculatableImplTrait</code></p> <p>Interfaces: <code>ConditionallySpeculatable</code>, <code>NoMemoryEffect (MemoryEffectOpInterface)</code></p> <p>Effects: <code>MemoryEffects::Effect{}</code></p>"},{"location":"dialects/HighLevel/HighLevel/#results_76","title":"Results:","text":"Result Description <code>result</code>"},{"location":"dialects/HighLevel/HighLevel/#hlpreferred_alignoftype-vasthlpreferredalignoftypeop","title":"<code>hl.preferred_alignof.type</code> (::vast::hl::PreferredAlignOfTypeOp)","text":"<p>VAST type alignof operator</p> <p>Syntax:</p> <pre><code>operation ::= `hl.preferred_alignof.type` $arg attr-dict `-&gt;` type($result)\n</code></pre> <p>VAST type alignof operator Traits: <code>AlwaysSpeculatableImplTrait</code></p> <p>Interfaces: <code>ConditionallySpeculatable</code>, <code>NoMemoryEffect (MemoryEffectOpInterface)</code></p> <p>Effects: <code>MemoryEffects::Effect{}</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_31","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>arg</code>::mlir::TypeAttrany type attribute"},{"location":"dialects/HighLevel/HighLevel/#results_77","title":"Results:","text":"Result Description <code>result</code>"},{"location":"dialects/HighLevel/HighLevel/#hlreal-vasthlrealop","title":"<code>hl.real</code> (::vast::hl::RealOp)","text":"<p>Syntax:</p> <pre><code>operation ::= `hl.real` $arg attr-dict `:` type($arg) `-&gt;` type($result)\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#operands_62","title":"Operands:","text":"Operand Description <code>arg</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_78","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlref-vasthldeclrefop","title":"<code>hl.ref</code> (::vast::hl::DeclRefOp)","text":"<p>VAST variable reference declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.ref` $name attr-dict `:` type($result)\n</code></pre> <p>VAST variable reference declaration</p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_32","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::vast::core::VarSymbolRefAttrvariable symbol reference attribute"},{"location":"dialects/HighLevel/HighLevel/#results_79","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlreturn-vasthlreturnop","title":"<code>hl.return</code> (::vast::hl::ReturnOp)","text":"<p>Syntax:</p> <pre><code>operation ::= `hl.return` ($result^ `:` type($result))? attr-dict\n</code></pre> <p>Traits: <code>Core_ReturnLikeTrait</code>, <code>Core_SoftTerminatorTrait</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_63","title":"Operands:","text":"Operand Description <code>result</code> variadic of any type"},{"location":"dialects/HighLevel/HighLevel/#hlsdiv-vasthldivsop","title":"<code>hl.sdiv</code> (::vast::hl::DivSOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.sdiv` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results) <p>Interfaces: <code>Core_ArithBinOp</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_64","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_80","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlsizeofexpr-vasthlsizeofexprop","title":"<code>hl.sizeof.expr</code> (::vast::hl::SizeOfExprOp)","text":"<p>VAST expr sizeof operator</p> <p>Syntax:</p> <pre><code>operation ::= `hl.sizeof.expr` attr-dict `-&gt;` type($result) $expr\n</code></pre> <p>VAST expr sizeof operator Traits: <code>AlwaysSpeculatableImplTrait</code></p> <p>Interfaces: <code>ConditionallySpeculatable</code>, <code>NoMemoryEffect (MemoryEffectOpInterface)</code></p> <p>Effects: <code>MemoryEffects::Effect{}</code></p>"},{"location":"dialects/HighLevel/HighLevel/#results_81","title":"Results:","text":"Result Description <code>result</code>"},{"location":"dialects/HighLevel/HighLevel/#hlsizeoftype-vasthlsizeoftypeop","title":"<code>hl.sizeof.type</code> (::vast::hl::SizeOfTypeOp)","text":"<p>VAST type sizeof operator</p> <p>Syntax:</p> <pre><code>operation ::= `hl.sizeof.type` $arg attr-dict `-&gt;` type($result)\n</code></pre> <p>Corresponds to sizeof() expression. Traits: <code>AlwaysSpeculatableImplTrait</code> <p>Interfaces: <code>ConditionallySpeculatable</code>, <code>NoMemoryEffect (MemoryEffectOpInterface)</code></p> <p>Effects: <code>MemoryEffects::Effect{}</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_33","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>arg</code>::mlir::TypeAttrany type attribute"},{"location":"dialects/HighLevel/HighLevel/#results_82","title":"Results:","text":"Result Description <code>result</code>"},{"location":"dialects/HighLevel/HighLevel/#hlsrem-vasthlremsop","title":"<code>hl.srem</code> (::vast::hl::RemSOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.srem` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results) <p>Interfaces: <code>Core_ArithBinOp</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_65","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_83","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlstatic_assert-vasthlstaticassertdecl","title":"<code>hl.static_assert</code> (::vast::hl::StaticAssertDecl)","text":"<p>Static assert declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.static_assert` `failed` `:` $failed $assert (`,` $message^)? attr-dict\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#attributes_34","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>failed</code>::mlir::BoolAttrbool attribute"},{"location":"dialects/HighLevel/HighLevel/#hlstmtexpr-vasthlstmtexprop","title":"<code>hl.stmt.expr</code> (::vast::hl::StmtExprOp)","text":"<p>VAST statement expression</p> <p>Syntax:</p> <pre><code>operation ::= `hl.stmt.expr` attr-dict `:` type($result) $substmt\n</code></pre> <p>VAST statement expression Traits: <code>SingleBlock</code></p>"},{"location":"dialects/HighLevel/HighLevel/#results_84","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlstruct-vasthlstructdeclop","title":"<code>hl.struct</code> (::vast::hl::StructDeclOp)","text":"<p>VAST struct declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.struct` $sym_name attr-dict `:` $fields\n</code></pre> <p>VAST struct declaration Traits: <code>Core_EmptySymbolTable</code>, <code>NoTerminator</code></p> <p>Interfaces: <code>AggregateTypeDefinitionInterface</code>, <code>Core_AggregateTypeDefinition</code>, <code>Core_SymbolTableOpInterface</code>, <code>Core_Symbol</code>, <code>Core_TypeDefinition</code>, <code>Core_TypeSymbol</code>, <code>TypeDefinitionInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_35","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>sym_name</code>::mlir::StringAttrstring attribute"},{"location":"dialects/HighLevel/HighLevel/#hlsub-vasthlsubiop","title":"<code>hl.sub</code> (::vast::hl::SubIOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.sub` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results) <p>Interfaces: <code>Core_ArithBinOp</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_66","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_85","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlsubscript-vasthlsubscriptop","title":"<code>hl.subscript</code> (::vast::hl::SubscriptOp)","text":"<p>VAST array subscript operator</p> <p>Syntax:</p> <pre><code>operation ::= `hl.subscript` $array `at` ` ` `[` $index `:` type($index) `]` attr-dict\n              `:` type($array) `-&gt;` type($result)\n</code></pre> <p>VAST array subscript operator</p>"},{"location":"dialects/HighLevel/HighLevel/#operands_67","title":"Operands:","text":"Operand Description <code>array</code> lvalue to subscriptable type <code>index</code>"},{"location":"dialects/HighLevel/HighLevel/#results_86","title":"Results:","text":"Result Description <code>result</code> lvalue to any type"},{"location":"dialects/HighLevel/HighLevel/#hlswitch-vasthlswitchop","title":"<code>hl.switch</code> (::vast::hl::SwitchOp)","text":"<p>VAST switch statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.switch` $condRegion `cases` $cases attr-dict\n</code></pre> <p>The operation represents a switch statement.</p> <p>The generic form of the operation is as follows:</p> <p>hl.switch {   ... / cond region /   hl.value.yield %val : !hl.type } cases {   ... / casesregion / }</p> <p>Traits: <code>Core_ScopeLikeTrait</code>, <code>NoRegionArguments</code>, <code>NoTerminator</code>, <code>ShadowingSymbolTable</code></p> <p>Interfaces: <code>Core_SymbolTableOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#hlthis-vasthlthisop","title":"<code>hl.this</code> (::vast::hl::ThisOp)","text":"<p>VAST this operator</p> <p>Syntax:</p> <pre><code>operation ::= `hl.this` attr-dict `:` type($result)\n</code></pre> <p>VAST this operator</p>"},{"location":"dialects/HighLevel/HighLevel/#results_87","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hltranslation_unit-vasthltranslationunitop","title":"<code>hl.translation_unit</code> (::vast::hl::TranslationUnitOp)","text":"<p>VAST translation unit</p> <p>Syntax:</p> <pre><code>operation ::= `hl.translation_unit` $body attr-dict\n</code></pre> <p>VAST tranaslation unit Traits: <code>IsolatedFromAbove</code>, <code>NoTerminator</code>, <code>ShadowingSymbolTable</code></p> <p>Interfaces: <code>Core_SymbolTableOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#hltype-vasthltypedeclop","title":"<code>hl.type</code> (::vast::hl::TypeDeclOp)","text":"<p>VAST type declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.type` $sym_name attr-dict `:` $type\n</code></pre> <p>VAST type declaration Interfaces: <code>Core_Symbol</code>, <code>Core_TypeSymbol</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_36","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>sym_name</code>::mlir::StringAttrstring attribute <code>type</code>::mlir::TypeAttrany type attribute"},{"location":"dialects/HighLevel/HighLevel/#hltypeyield-vasthltypeyieldop","title":"<code>hl.type.yield</code> (::vast::hl::TypeYieldOp)","text":"<p>Type yield operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.type.yield` attr-dict $result `:` type($result)\n</code></pre> <p>A type yield operation is used to terminate the underlying expression region of a typeof(expr) statement.</p> <p>The custom assembly form of the operation is as follows:</p> <p>hl.type.yield result : type</p> <p>Traits: <code>Terminator</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_68","title":"Operands:","text":"Operand Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hltypedef-vasthltypedefop","title":"<code>hl.typedef</code> (::vast::hl::TypeDefOp)","text":"<p>VAST typedef operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.typedef` $sym_name attr-dict `:` $type\n</code></pre> <p>Typedef operation servers to declare named types. It creates a new type symbol in the current scope to be referenced as NamedType later.</p> <p>This operation corresponds to <code>clang::TypedefDecl</code>.</p> <p>Interfaces: <code>Core_Symbol</code>, <code>Core_TypeDefinition</code>, <code>Core_TypeSymbol</code>, <code>TypeDefinitionInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_37","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>sym_name</code>::mlir::StringAttrstring attribute <code>type</code>::mlir::TypeAttrany type attribute"},{"location":"dialects/HighLevel/HighLevel/#hltypeofexpr-vasthltypeofexprop","title":"<code>hl.typeof.expr</code> (::vast::hl::TypeOfExprOp)","text":"<p>VAST typeof(expr) operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.typeof.expr` $name $expr `:` $type attr-dict\n</code></pre> <p>The Typeof operation serves to declare a type using type introspection. It evaluates its underlying expression, creates a new type symbol in the current scope, assigns it to the type of the underlying expression, and returns the type symbol to be referenced later</p> <p>Traits: <code>SingleBlock</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_38","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute <code>type</code>::mlir::TypeAttrany type attribute"},{"location":"dialects/HighLevel/HighLevel/#hludiv-vasthldivuop","title":"<code>hl.udiv</code> (::vast::hl::DivUOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.udiv` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results) <p>Interfaces: <code>Core_ArithBinOp</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_69","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_88","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlunion-vasthluniondeclop","title":"<code>hl.union</code> (::vast::hl::UnionDeclOp)","text":"<p>VAST record declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.union` $sym_name attr-dict `:` $fields\n</code></pre> <p>VAST record declaration Traits: <code>Core_EmptySymbolTable</code>, <code>NoTerminator</code></p> <p>Interfaces: <code>AggregateTypeDefinitionInterface</code>, <code>Core_AggregateTypeDefinition</code>, <code>Core_SymbolTableOpInterface</code>, <code>Core_Symbol</code>, <code>Core_TypeDefinition</code>, <code>Core_TypeSymbol</code>, <code>TypeDefinitionInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_39","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>sym_name</code>::mlir::StringAttrstring attribute"},{"location":"dialects/HighLevel/HighLevel/#hlunreachable-vasthlunreachableop","title":"<code>hl.unreachable</code> (::vast::hl::UnreachableOp)","text":"<p>VAST unreachable operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.unreachable` attr-dict\n</code></pre> <p>VAST unreachable operation Traits: <code>Terminator</code></p>"},{"location":"dialects/HighLevel/HighLevel/#hlurem-vasthlremuop","title":"<code>hl.urem</code> (::vast::hl::RemUOp)","text":"<p>VAST arithmetic binary operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.urem` $lhs `,` $rhs attr-dict `:` functional-type(operands, results)\n</code></pre> <p>High-level arithmetic binary operation. This operation takes two operands and returns one result, each of these is required to be of the same type.</p> <p>The custom assembly form of the operation is as follows:</p> <p>%result =  %lhs, %rhs  : functional-type(operands, results) <p>Interfaces: <code>Core_ArithBinOp</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_70","title":"Operands:","text":"Operand Description <code>lhs</code> any type <code>rhs</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_89","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlva_arg_expr-vasthlvaargexpr","title":"<code>hl.va_arg_expr</code> (::vast::hl::VAArgExpr)","text":"<p>Fetch next variadic element.</p> <p>Syntax:</p> <pre><code>operation ::= `hl.va_arg_expr` $arg_list `:` functional-type(operands, $result) attr-dict\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#operands_71","title":"Operands:","text":"Operand Description <code>arg_list</code> any type"},{"location":"dialects/HighLevel/HighLevel/#results_90","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlvalueyield-vasthlvalueyieldop","title":"<code>hl.value.yield</code> (::vast::hl::ValueYieldOp)","text":"<p>Value yield operation</p> <p>Syntax:</p> <pre><code>operation ::= `hl.value.yield` attr-dict $result `:` type($result)\n</code></pre> <p>A value yield operation is used to terminate the case region of a switch statement. The yielded value triggers the parent case statement region.</p> <p>The custom assembly form of the operation is as follows:</p> <p>hl.value.yield result : type</p> <p>Traits: <code>Terminator</code></p>"},{"location":"dialects/HighLevel/HighLevel/#operands_72","title":"Operands:","text":"Operand Description <code>result</code> any type"},{"location":"dialects/HighLevel/HighLevel/#hlvar-vasthlvardeclop","title":"<code>hl.var</code> (::vast::hl::VarDeclOp)","text":"<p>VAST variable declaration</p> <p>Syntax:</p> <pre><code>operation ::= `hl.var` $sym_name attr-dict (`,`$linkage^)? (`constant` $constant^)? custom&lt; StorageClasses &gt;($storageClass, $threadStorageClass)\n              `:` $type\n              (`=` $initializer^)?\n              (`allocation_size` $allocation_size^)?\n</code></pre> <p>VAST variable declaration Interfaces: <code>Core_DeclStorageInterface</code>, <code>Core_Symbol</code>, <code>Core_VarSymbol</code>, <code>DeclStorageInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_40","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>sym_name</code>::mlir::StringAttrstring attribute <code>type</code>::mlir::TypeAttrany type attribute <code>storageClass</code>::vast::core::StorageClassAttrdeclaration storage class <code>threadStorageClass</code>::vast::core::TSClassAttrdeclaration storage class <code>constant</code>::mlir::UnitAttrunit attribute <code>linkage</code>::vast::core::GlobalLinkageKindAttrglobal linkage kind"},{"location":"dialects/HighLevel/HighLevel/#hlwhile-vasthlwhileop","title":"<code>hl.while</code> (::vast::hl::WhileOp)","text":"<p>VAST while statement</p> <p>Syntax:</p> <pre><code>operation ::= `hl.while` $condRegion `do` $bodyRegion attr-dict\n</code></pre> <p>The operation takes builders of two mandatory regions -- condition and body region. Builders, given the location, build a particular region.</p> <p>The generic form of the operation is as follows:</p> <p>hl.while {   ... / condition region /   hl.cond.yield %cond : !hl.bool } do {   ... / body region / }</p> <p>Traits: <code>Core_ScopeLikeTrait</code>, <code>NoRegionArguments</code>, <code>NoTerminator</code>, <code>ShadowingSymbolTable</code></p> <p>Interfaces: <code>Core_SymbolTableOpInterface</code></p>"},{"location":"dialects/HighLevel/HighLevel/#attributes_41","title":"Attributes","text":""},{"location":"dialects/HighLevel/HighLevel/#aliasattr","title":"AliasAttr","text":"<p>Syntax:</p> <pre><code>#hl.alias&lt;\n  ::mlir::StringAttr   # name\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters","title":"Parameters:","text":"Parameter C++ type Description name <code>::mlir::StringAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#alignedattr","title":"AlignedAttr","text":"<p>Syntax: <code>#hl.aligned</code></p>"},{"location":"dialects/HighLevel/HighLevel/#allocalignattr","title":"AllocAlignAttr","text":"<p>Syntax:</p> <pre><code>#hl.alloc_align&lt;\n  int   # alignment\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_1","title":"Parameters:","text":"Parameter C++ type Description alignment <code>int</code>"},{"location":"dialects/HighLevel/HighLevel/#allocsizeattr","title":"AllocSizeAttr","text":"<p>Syntax:</p> <pre><code>#hl.alloc_size&lt;\n  int,   # size_arg_pos\n  int   # num_arg_pos\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_2","title":"Parameters:","text":"Parameter C++ type Description size_arg_pos <code>int</code> num_arg_pos <code>int</code>"},{"location":"dialects/HighLevel/HighLevel/#allocatingattr","title":"AllocatingAttr","text":"<p>Syntax: <code>#hl.allocating</code></p>"},{"location":"dialects/HighLevel/HighLevel/#alwaysinlineattr","title":"AlwaysInlineAttr","text":"<p>Syntax: <code>#hl.always_inline</code></p>"},{"location":"dialects/HighLevel/HighLevel/#annotationattr","title":"AnnotationAttr","text":"<p>Syntax:</p> <pre><code>#hl.annotation&lt;\n  ::mlir::StringAttr   # name\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_3","title":"Parameters:","text":"Parameter C++ type Description name <code>::mlir::StringAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#artificialattr","title":"ArtificialAttr","text":"<p>Syntax: <code>#hl.artificial</code></p>"},{"location":"dialects/HighLevel/HighLevel/#asmlabelattr","title":"AsmLabelAttr","text":"<p>Syntax:</p> <pre><code>#hl.asm&lt;\n  ::mlir::StringAttr,   # label\n  bool   # isLiteral\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_4","title":"Parameters:","text":"Parameter C++ type Description label <code>::mlir::StringAttr</code> isLiteral <code>bool</code>"},{"location":"dialects/HighLevel/HighLevel/#assumealignedattr","title":"AssumeAlignedAttr","text":"<p>Syntax:</p> <pre><code>#hl.assume_aligned&lt;\n  llvm::APInt,   # alignment\n  llvm::APInt   # offset\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_5","title":"Parameters:","text":"Parameter C++ type Description alignment <code>llvm::APInt</code> offset <code>llvm::APInt</code>"},{"location":"dialects/HighLevel/HighLevel/#availabilityattrattr","title":"AvailabilityAttrAttr","text":"<p>Syntax: <code>#hl.availability</code></p>"},{"location":"dialects/HighLevel/HighLevel/#availableonlyindefaultevalmethodattr","title":"AvailableOnlyInDefaultEvalMethodAttr","text":"<p>Syntax: <code>#hl.available_only_in_default_eval_method</code></p>"},{"location":"dialects/HighLevel/HighLevel/#blockingattr","title":"BlockingAttr","text":"<p>Syntax: <code>#hl.blocking</code></p>"},{"location":"dialects/HighLevel/HighLevel/#builtinattr","title":"BuiltinAttr","text":"<p>Syntax:</p> <pre><code>#hl.builtin&lt;\n  unsigned   # ID\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_6","title":"Parameters:","text":"Parameter C++ type Description ID <code>unsigned</code>"},{"location":"dialects/HighLevel/HighLevel/#c11noreturnattr","title":"C11NoReturnAttr","text":"<p>Syntax: <code>#hl._Noreturn</code></p>"},{"location":"dialects/HighLevel/HighLevel/#cvqualifiersattr","title":"CVQualifiersAttr","text":"<p>Syntax:</p> <pre><code>#hl.quals&lt;\n  bool,   # is_const\n  bool   # is_volatile\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_7","title":"Parameters:","text":"Parameter C++ type Description is_const <code>bool</code> const qualifier is_volatile <code>bool</code> volatile qualifier"},{"location":"dialects/HighLevel/HighLevel/#cvrqualifiersattr","title":"CVRQualifiersAttr","text":"<p>Syntax:</p> <pre><code>#hl.quals&lt;\n  bool,   # is_const\n  bool,   # is_volatile\n  bool   # is_restrict\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_8","title":"Parameters:","text":"Parameter C++ type Description is_const <code>bool</code> const qualifier is_volatile <code>bool</code> volatile qualifier is_restrict <code>bool</code> restrict qualifier"},{"location":"dialects/HighLevel/HighLevel/#cxx11noreturnattr","title":"CXX11NoReturnAttr","text":"<p>Syntax: <code>#hl.noreturn</code></p>"},{"location":"dialects/HighLevel/HighLevel/#cleanupattr","title":"CleanupAttr","text":"<p>Syntax:</p> <pre><code>#hl.cleanup&lt;\n  ::mlir::SymbolRefAttr   # symbol\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_9","title":"Parameters:","text":"Parameter C++ type Description symbol <code>::mlir::SymbolRefAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#coldattr","title":"ColdAttr","text":"<p>Syntax: <code>#hl.cold</code></p>"},{"location":"dialects/HighLevel/HighLevel/#commonattr","title":"CommonAttr","text":"<p>Syntax: <code>#hl.common</code></p>"},{"location":"dialects/HighLevel/HighLevel/#constattr","title":"ConstAttr","text":"<p>Syntax: <code>#hl.const</code></p>"},{"location":"dialects/HighLevel/HighLevel/#constinitattr","title":"ConstInitAttr","text":"<p>Syntax: <code>#hl.constinit</code></p>"},{"location":"dialects/HighLevel/HighLevel/#constructorattr","title":"ConstructorAttr","text":"<p>Syntax:</p> <pre><code>#hl.constructor&lt;\n  unsigned   # priority\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_10","title":"Parameters:","text":"Parameter C++ type Description priority <code>unsigned</code>"},{"location":"dialects/HighLevel/HighLevel/#convergentattr","title":"ConvergentAttr","text":"<p>Syntax: <code>#hl.convergent</code></p>"},{"location":"dialects/HighLevel/HighLevel/#countedbyattr","title":"CountedByAttr","text":"<p>Syntax: <code>#hl.counted_by</code></p>"},{"location":"dialects/HighLevel/HighLevel/#deprecatedattr","title":"DeprecatedAttr","text":"<p>Syntax:</p> <pre><code>#hl.deprecated&lt;\n  ::mlir::StringAttr,   # message\n  ::mlir::StringAttr   # fixit\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_11","title":"Parameters:","text":"Parameter C++ type Description message <code>::mlir::StringAttr</code> fixit <code>::mlir::StringAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#destructorattr","title":"DestructorAttr","text":"<p>Syntax:</p> <pre><code>#hl.destructor&lt;\n  unsigned   # priority\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_12","title":"Parameters:","text":"Parameter C++ type Description priority <code>unsigned</code>"},{"location":"dialects/HighLevel/HighLevel/#diagnoseifattr","title":"DiagnoseIfAttr","text":"<p>Syntax: <code>#hl.diagnose_if</code></p>"},{"location":"dialects/HighLevel/HighLevel/#disabletailcallsattr","title":"DisableTailCallsAttr","text":"<p>Syntax: <code>#hl.disable_tail_calls</code></p>"},{"location":"dialects/HighLevel/HighLevel/#enableifattr","title":"EnableIfAttr","text":"<p>Syntax: <code>#hl.enable_if</code></p>"},{"location":"dialects/HighLevel/HighLevel/#errorattr","title":"ErrorAttr","text":"<p>Syntax:</p> <pre><code>#hl.error&lt;\n  ::mlir::StringAttr   # name\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_13","title":"Parameters:","text":"Parameter C++ type Description name <code>::mlir::StringAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#fallthroughattr","title":"FallthroughAttr","text":"<p>Syntax: <code>#hl.fallthrough</code></p>"},{"location":"dialects/HighLevel/HighLevel/#flattenattr","title":"FlattenAttr","text":"<p>Syntax: <code>#hl.flatten</code></p>"},{"location":"dialects/HighLevel/HighLevel/#formatargattr","title":"FormatArgAttr","text":"<p>Syntax:</p> <pre><code>#hl.format_arg&lt;\n  unsigned   # format_idx\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_14","title":"Parameters:","text":"Parameter C++ type Description format_idx <code>unsigned</code>"},{"location":"dialects/HighLevel/HighLevel/#formatattr","title":"FormatAttr","text":"<p>Syntax:</p> <pre><code>#hl.format&lt;\n  ::mlir::StringAttr   # name\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_15","title":"Parameters:","text":"Parameter C++ type Description name <code>::mlir::StringAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#gnuinlineattr","title":"GNUInlineAttr","text":"<p>Syntax: <code>#hl.gnu_inline</code></p>"},{"location":"dialects/HighLevel/HighLevel/#leafattr","title":"LeafAttr","text":"<p>Syntax: <code>#hl.leaf</code></p>"},{"location":"dialects/HighLevel/HighLevel/#loaderuninitializedattr","title":"LoaderUninitializedAttr","text":"<p>Syntax: <code>#hl.loader_uninitialized</code></p>"},{"location":"dialects/HighLevel/HighLevel/#maxfieldalignmentattr","title":"MaxFieldAlignmentAttr","text":"<p>Syntax:</p> <pre><code>#hl.max_field_alignment&lt;\n  unsigned   # alignment\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_16","title":"Parameters:","text":"Parameter C++ type Description alignment <code>unsigned</code>"},{"location":"dialects/HighLevel/HighLevel/#mayaliasattr","title":"MayAliasAttr","text":"<p>Syntax: <code>#hl.may_alias</code></p>"},{"location":"dialects/HighLevel/HighLevel/#modeattr","title":"ModeAttr","text":"<p>Syntax:</p> <pre><code>#hl.mode&lt;\n  ::mlir::StringAttr   # mode\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_17","title":"Parameters:","text":"Parameter C++ type Description mode <code>::mlir::StringAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#noaliasattr","title":"NoAliasAttr","text":"<p>Syntax: <code>#hl.noalias</code></p>"},{"location":"dialects/HighLevel/HighLevel/#nocfcheckattr","title":"NoCfCheckAttr","text":"<p>Syntax: <code>#hl.nocf_check</code></p>"},{"location":"dialects/HighLevel/HighLevel/#nocommonattr","title":"NoCommonAttr","text":"<p>Syntax: <code>#hl.nocommon</code></p>"},{"location":"dialects/HighLevel/HighLevel/#nodebugattr","title":"NoDebugAttr","text":"<p>Syntax: <code>#hl.nodebug</code></p>"},{"location":"dialects/HighLevel/HighLevel/#noduplicateattr","title":"NoDuplicateAttr","text":"<p>Syntax: <code>#hl.noduplicate</code></p>"},{"location":"dialects/HighLevel/HighLevel/#noinlineattr","title":"NoInlineAttr","text":"<p>Syntax: <code>#hl.noinline</code></p>"},{"location":"dialects/HighLevel/HighLevel/#noinstrumentfunctionattr","title":"NoInstrumentFunctionAttr","text":"<p>Syntax: <code>#hl.no_instrument_function</code></p>"},{"location":"dialects/HighLevel/HighLevel/#noprofilefunctionattr","title":"NoProfileFunctionAttr","text":"<p>Syntax: <code>#hl.no_profile_instrument_function</code></p>"},{"location":"dialects/HighLevel/HighLevel/#nothrowattr","title":"NoThrowAttr","text":"<p>Syntax: <code>#hl.nothrow</code></p>"},{"location":"dialects/HighLevel/HighLevel/#nonallocatingattr","title":"NonAllocatingAttr","text":"<p>Syntax: <code>#hl.nonallocating</code></p>"},{"location":"dialects/HighLevel/HighLevel/#nonblockingattr","title":"NonBlockingAttr","text":"<p>Syntax: <code>#hl.nonblocking</code></p>"},{"location":"dialects/HighLevel/HighLevel/#nonnullattr","title":"NonNullAttr","text":"<p>Syntax: <code>#hl.nonnull</code></p>"},{"location":"dialects/HighLevel/HighLevel/#nottailcalledattr","title":"NotTailCalledAttr","text":"<p>Syntax: <code>#hl.not_tail_called</code></p>"},{"location":"dialects/HighLevel/HighLevel/#offsetofnodeattr","title":"OffsetOfNodeAttr","text":"<p>VAST expr offsetofnode </p> <p>This attribute corresponds to OffsetOfExprNode used by Clang AST. It can containt either an index into the list of expressions(regions) that index arrays or a field identifier or base class specifier.</p>"},{"location":"dialects/HighLevel/HighLevel/#parameters_18","title":"Parameters:","text":"Parameter C++ type Description value <code>std::variant&lt; unsigned int, ::mlir::StringAttr &gt;</code>"},{"location":"dialects/HighLevel/HighLevel/#overloadableattr","title":"OverloadableAttr","text":"<p>Syntax: <code>#hl.overloadable</code></p>"},{"location":"dialects/HighLevel/HighLevel/#packedattr","title":"PackedAttr","text":"<p>Syntax: <code>#hl.packed</code></p>"},{"location":"dialects/HighLevel/HighLevel/#passobjectsizeattr","title":"PassObjectSizeAttr","text":"<p>Syntax:</p> <pre><code>#hl.pass_object_size&lt;\n  int,   # type\n  bool   # dynamic\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_19","title":"Parameters:","text":"Parameter C++ type Description type <code>int</code> dynamic <code>bool</code>"},{"location":"dialects/HighLevel/HighLevel/#pureattr","title":"PureAttr","text":"<p>Syntax: <code>#hl.pure</code></p>"},{"location":"dialects/HighLevel/HighLevel/#restrictattr","title":"RestrictAttr","text":"<p>Syntax: <code>#hl.restrict</code></p>"},{"location":"dialects/HighLevel/HighLevel/#returnstwiceattr","title":"ReturnsTwiceAttr","text":"<p>Syntax: <code>#hl.returns_twice</code></p>"},{"location":"dialects/HighLevel/HighLevel/#sectionattr","title":"SectionAttr","text":"<p>Syntax:</p> <pre><code>#hl.section&lt;\n  ::mlir::StringAttr   # name\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_20","title":"Parameters:","text":"Parameter C++ type Description name <code>::mlir::StringAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#standalonedebugattr","title":"StandaloneDebugAttr","text":"<p>Syntax: <code>#hl.standalone_debug</code></p>"},{"location":"dialects/HighLevel/HighLevel/#swiftattrattr","title":"SwiftAttrAttr","text":"<p>Syntax:</p> <pre><code>#hl.swift_attr&lt;\n  ::mlir::StringAttr   # attribute\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_21","title":"Parameters:","text":"Parameter C++ type Description attribute <code>::mlir::StringAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#targetattr","title":"TargetAttr","text":"<p>Syntax:</p> <pre><code>#hl.target&lt;\n  mlir::StringAttr   # features\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_22","title":"Parameters:","text":"Parameter C++ type Description features <code>mlir::StringAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#transparentunionattr","title":"TransparentUnionAttr","text":"<p>Syntax: <code>#hl.transparent_union</code></p>"},{"location":"dialects/HighLevel/HighLevel/#ucvqualifiersattr","title":"UCVQualifiersAttr","text":"<p>Syntax:</p> <pre><code>#hl.quals&lt;\n  bool,   # is_unsigned\n  bool,   # is_const\n  bool   # is_volatile\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_23","title":"Parameters:","text":"Parameter C++ type Description is_unsigned <code>bool</code> unsigned qualifier is_const <code>bool</code> const qualifier is_volatile <code>bool</code> volatile qualifier"},{"location":"dialects/HighLevel/HighLevel/#unavailableattr","title":"UnavailableAttr","text":"<p>Syntax:</p> <pre><code>#hl.unavailable&lt;\n  ::mlir::StringAttr   # name\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_24","title":"Parameters:","text":"Parameter C++ type Description name <code>::mlir::StringAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#unusedattr","title":"UnusedAttr","text":"<p>Syntax: <code>#hl.unused</code></p>"},{"location":"dialects/HighLevel/HighLevel/#usedattr","title":"UsedAttr","text":"<p>Syntax: <code>#hl.used</code></p>"},{"location":"dialects/HighLevel/HighLevel/#visibilityattr","title":"VisibilityAttr","text":"<p>Visibility attribute</p> <p>Syntax:</p> <pre><code>#hl.visibility&lt;\n  ::vast::hl::Visibility   # value\n&gt;\n</code></pre> <p>Enum cases: * default (<code>Default</code>) * hidden (<code>Hidden</code>) * protected (<code>Protected</code>)</p>"},{"location":"dialects/HighLevel/HighLevel/#parameters_25","title":"Parameters:","text":"Parameter C++ type Description value <code>::vast::hl::Visibility</code> an enum of type Visibility"},{"location":"dialects/HighLevel/HighLevel/#warnunusedresultattr","title":"WarnUnusedResultAttr","text":"<p>Syntax: <code>#hl.warn_unused_result</code></p>"},{"location":"dialects/HighLevel/HighLevel/#types","title":"Types","text":""},{"location":"dialects/HighLevel/HighLevel/#adjustedtype","title":"AdjustedType","text":"<p>Syntax:</p> <pre><code>!hl.adjusted&lt;\n  Type,   # original\n  Type   # adjusted\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_26","title":"Parameters:","text":"Parameter C++ type Description original <code>Type</code> adjusted <code>Type</code>"},{"location":"dialects/HighLevel/HighLevel/#arraytype","title":"ArrayType","text":"<p>Syntax:</p> <pre><code>!hl.array&lt;\n  SizeParam,   # size\n  Type,   # elementType\n  CVRQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_27","title":"Parameters:","text":"Parameter C++ type Description size <code>SizeParam</code> size parameter for arrays elementType <code>Type</code> quals <code>CVRQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#atomictype","title":"AtomicType","text":"<p>Syntax:</p> <pre><code>!hl.atomic&lt;\n  Type,   # elementType\n  CVRQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_28","title":"Parameters:","text":"Parameter C++ type Description elementType <code>Type</code> quals <code>CVRQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#attributedtype","title":"AttributedType","text":"<p>Syntax:</p> <pre><code>!hl.attributed&lt;\n  Type   # elementType\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_29","title":"Parameters:","text":"Parameter C++ type Description elementType <code>Type</code>"},{"location":"dialects/HighLevel/HighLevel/#autotype","title":"AutoType","text":"<p>Syntax:</p> <pre><code>!hl.auto&lt;\n  Type,   # deducedType\n  CVRQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_30","title":"Parameters:","text":"Parameter C++ type Description deducedType <code>Type</code> quals <code>CVRQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#bfloat16type","title":"BFloat16Type","text":"<p>Syntax:</p> <pre><code>!hl.bfloat16&lt;\n  CVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_31","title":"Parameters:","text":"Parameter C++ type Description quals <code>CVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#booltype","title":"BoolType","text":"<p>Syntax:</p> <pre><code>!hl.bool&lt;\n  CVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_32","title":"Parameters:","text":"Parameter C++ type Description quals <code>CVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#chartype","title":"CharType","text":"<p>Syntax:</p> <pre><code>!hl.char&lt;\n  UCVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_33","title":"Parameters:","text":"Parameter C++ type Description quals <code>UCVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#complextype","title":"ComplexType","text":"<p>Syntax:</p> <pre><code>!hl.complex&lt;\n  Type,   # elementType\n  CVRQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_34","title":"Parameters:","text":"Parameter C++ type Description elementType <code>Type</code> quals <code>CVRQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#countattributedtype","title":"CountAttributedType","text":"<p>Syntax:</p> <pre><code>!hl.count_attributed&lt;\n  ::vast::hl::CountType,   # type\n  Type   # elementType\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_35","title":"Parameters:","text":"Parameter C++ type Description type <code>::vast::hl::CountType</code> an enum of type CountType elementType <code>Type</code>"},{"location":"dialects/HighLevel/HighLevel/#decayedtype","title":"DecayedType","text":"<p>Syntax:</p> <pre><code>!hl.decayed&lt;\n  Type   # elementType\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_36","title":"Parameters:","text":"Parameter C++ type Description elementType <code>Type</code>"},{"location":"dialects/HighLevel/HighLevel/#doubletype","title":"DoubleType","text":"<p>Syntax:</p> <pre><code>!hl.double&lt;\n  CVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_37","title":"Parameters:","text":"Parameter C++ type Description quals <code>CVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#elaboratedtype","title":"ElaboratedType","text":"<p>Syntax:</p> <pre><code>!hl.elaborated&lt;\n  Type,   # elementType\n  CVRQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_38","title":"Parameters:","text":"Parameter C++ type Description elementType <code>Type</code> quals <code>CVRQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#enumtype","title":"EnumType","text":"<p>Syntax:</p> <pre><code>!hl.enum&lt;\n  ::llvm::StringRef,   # name\n  CVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_39","title":"Parameters:","text":"Parameter C++ type Description name <code>::llvm::StringRef</code> quals <code>CVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#float128type","title":"Float128Type","text":"<p>Syntax:</p> <pre><code>!hl.float128&lt;\n  CVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_40","title":"Parameters:","text":"Parameter C++ type Description quals <code>CVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#floattype","title":"FloatType","text":"<p>Syntax:</p> <pre><code>!hl.float&lt;\n  CVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_41","title":"Parameters:","text":"Parameter C++ type Description quals <code>CVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#halftype","title":"HalfType","text":"<p>Syntax:</p> <pre><code>!hl.half&lt;\n  CVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_42","title":"Parameters:","text":"Parameter C++ type Description quals <code>CVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#int128type","title":"Int128Type","text":"<p>Syntax:</p> <pre><code>!hl.int128&lt;\n  UCVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_43","title":"Parameters:","text":"Parameter C++ type Description quals <code>UCVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#inttype","title":"IntType","text":"<p>Syntax:</p> <pre><code>!hl.int&lt;\n  UCVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_44","title":"Parameters:","text":"Parameter C++ type Description quals <code>UCVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#lvaluetype","title":"LValueType","text":"<p>Syntax:</p> <pre><code>!hl.lvalue&lt;\n  Type   # elementType\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_45","title":"Parameters:","text":"Parameter C++ type Description elementType <code>Type</code>"},{"location":"dialects/HighLevel/HighLevel/#labeltype","title":"LabelType","text":"<p>Syntax: <code>!hl.label</code></p>"},{"location":"dialects/HighLevel/HighLevel/#longdoubletype","title":"LongDoubleType","text":"<p>Syntax:</p> <pre><code>!hl.longdouble&lt;\n  CVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_46","title":"Parameters:","text":"Parameter C++ type Description quals <code>CVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#longlongtype","title":"LongLongType","text":"<p>Syntax:</p> <pre><code>!hl.longlong&lt;\n  UCVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_47","title":"Parameters:","text":"Parameter C++ type Description quals <code>UCVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#longtype","title":"LongType","text":"<p>Syntax:</p> <pre><code>!hl.long&lt;\n  UCVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_48","title":"Parameters:","text":"Parameter C++ type Description quals <code>UCVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#macroqualifiedtype","title":"MacroQualifiedType","text":"<p>Syntax:</p> <pre><code>!hl.macro_qualified&lt;\n  Type   # elementType\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_49","title":"Parameters:","text":"Parameter C++ type Description elementType <code>Type</code>"},{"location":"dialects/HighLevel/HighLevel/#parentype","title":"ParenType","text":"<p>Syntax:</p> <pre><code>!hl.paren&lt;\n  Type   # elementType\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_50","title":"Parameters:","text":"Parameter C++ type Description elementType <code>Type</code>"},{"location":"dialects/HighLevel/HighLevel/#pointertype","title":"PointerType","text":"<p>Syntax:</p> <pre><code>!hl.ptr&lt;\n  Type,   # elementType\n  CVRQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_51","title":"Parameters:","text":"Parameter C++ type Description elementType <code>Type</code> quals <code>CVRQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#rvaluetype","title":"RValueType","text":"<p>Syntax:</p> <pre><code>!hl.rvalue&lt;\n  Type   # elementType\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_52","title":"Parameters:","text":"Parameter C++ type Description elementType <code>Type</code>"},{"location":"dialects/HighLevel/HighLevel/#recordtype","title":"RecordType","text":"<p>Syntax:</p> <pre><code>!hl.record&lt;\n  ::llvm::StringRef,   # name\n  CVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_53","title":"Parameters:","text":"Parameter C++ type Description name <code>::llvm::StringRef</code> quals <code>CVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#referencetype","title":"ReferenceType","text":"<p>Syntax:</p> <pre><code>!hl.reference&lt;\n  Type   # elementType\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_54","title":"Parameters:","text":"Parameter C++ type Description elementType <code>Type</code>"},{"location":"dialects/HighLevel/HighLevel/#shorttype","title":"ShortType","text":"<p>Syntax:</p> <pre><code>!hl.short&lt;\n  UCVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_55","title":"Parameters:","text":"Parameter C++ type Description quals <code>UCVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#typeofexprtype","title":"TypeOfExprType","text":"<p>Syntax:</p> <pre><code>!hl.typeof.expr&lt;\n  ::llvm::StringRef,   # name\n  CVRQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_56","title":"Parameters:","text":"Parameter C++ type Description name <code>::llvm::StringRef</code> quals <code>CVRQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#typeoftypetype","title":"TypeOfTypeType","text":"<p>Syntax:</p> <pre><code>!hl.typeof.type&lt;\n  Type,   # unmodifiedType\n  CVRQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_57","title":"Parameters:","text":"Parameter C++ type Description unmodifiedType <code>Type</code> quals <code>CVRQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#typedeftype","title":"TypedefType","text":"<p>Syntax:</p> <pre><code>!hl.typedef&lt;\n  ::llvm::StringRef,   # name\n  CVRQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_58","title":"Parameters:","text":"Parameter C++ type Description name <code>::llvm::StringRef</code> quals <code>CVRQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#vectortype","title":"VectorType","text":"<p>Syntax:</p> <pre><code>!hl.vector&lt;\n  SizeParam,   # size\n  Type,   # elementType\n  CVRQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_59","title":"Parameters:","text":"Parameter C++ type Description size <code>SizeParam</code> size parameter for arrays elementType <code>Type</code> quals <code>CVRQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#voidtype","title":"VoidType","text":"<p>Syntax:</p> <pre><code>!hl.void&lt;\n  CVQualifiersAttr   # quals\n&gt;\n</code></pre>"},{"location":"dialects/HighLevel/HighLevel/#parameters_60","title":"Parameters:","text":"Parameter C++ type Description quals <code>CVQualifiersAttr</code>"},{"location":"dialects/HighLevel/HighLevel/#enums","title":"Enums","text":""},{"location":"dialects/HighLevel/HighLevel/#accessspecifier","title":"AccessSpecifier","text":"<p>Access specifier</p>"},{"location":"dialects/HighLevel/HighLevel/#cases","title":"Cases:","text":"Symbol Value String as_public <code>0</code> public as_protected <code>1</code> protected as_private <code>2</code> private as_none <code>3</code> none"},{"location":"dialects/HighLevel/HighLevel/#castkind","title":"CastKind","text":"<p>cast kind</p>"},{"location":"dialects/HighLevel/HighLevel/#cases_1","title":"Cases:","text":"Symbol Value String Dependent <code>0</code> Dependent BitCast <code>1</code> BitCast LValueBitCast <code>2</code> LValueBitCast LValueToRValueBitCast <code>3</code> LValueToRValueBitCast LValueToRValue <code>4</code> LValueToRValue NoOp <code>5</code> NoOp BaseToDerived <code>6</code> BaseToDerived DerivedToBase <code>7</code> DerivedToBase UncheckedDerivedToBase <code>8</code> UncheckedDerivedToBase Dynamic <code>9</code> Dynamic ToUnion <code>10</code> ToUnion ArrayToPointerDecay <code>11</code> ArrayToPointerDecay FunctionToPointerDecay <code>12</code> FunctionToPointerDecay NullToPointer <code>13</code> NullToPointer NullToMemberPointer <code>14</code> NullToMemberPointer BaseToDerivedMemberPointer <code>15</code> BaseToDerivedMemberPointer DerivedToBaseMemberPointer <code>16</code> DerivedToBaseMemberPointer MemberPointerToBoolean <code>17</code> MemberPointerToBoolean ReinterpretMemberPointer <code>18</code> ReinterpretMemberPointer UserDefinedConversion <code>19</code> UserDefinedConversion ConstructorConversion <code>20</code> ConstructorConversion IntegralToPointer <code>21</code> IntegralToPointer PointerToIntegral <code>22</code> PointerToIntegral PointerToBoolean <code>23</code> PointerToBoolean ToVoid <code>24</code> ToVoid VectorSplat <code>25</code> VectorSplat IntegralCast <code>26</code> IntegralCast IntegralToBoolean <code>27</code> IntegralToBoolean IntegralToFloating <code>28</code> IntegralToFloating FloatingToFixedPoint <code>29</code> FloatingToFixedPoint FixedPointToFloating <code>30</code> FixedPointToFloating FixedPointCast <code>31</code> FixedPointCast FixedPointToIntegral <code>32</code> FixedPointToIntegral IntegralToFixedPoint <code>33</code> IntegralToFixedPoint FixedPointToBoolean <code>34</code> FixedPointToBoolean FloatingToIntegral <code>35</code> FloatingToIntegral FloatingToBoolean <code>36</code> FloatingToBoolean BooleanToSignedIntegral <code>37</code> BooleanToSignedIntegral FloatingCast <code>38</code> FloatingCast CPointerToObjCPointerCast <code>39</code> CPointerToObjCPointerCast BlockPointerToObjCPointerCast <code>40</code> BlockPointerToObjCPointerCast AnyPointerToBlockPointerCast <code>41</code> AnyPointerToBlockPointerCast ObjCObjectLValueCast <code>42</code> ObjCObjectLValueCast FloatingRealToComplex <code>43</code> FloatingRealToComplex FloatingComplexToReal <code>44</code> FloatingComplexToReal FloatingComplexToBoolean <code>45</code> FloatingComplexToBoolean FloatingComplexCast <code>46</code> FloatingComplexCast FloatingComplexToIntegralComplex <code>47</code> FloatingComplexToIntegralComplex IntegralRealToComplex <code>48</code> IntegralRealToComplex IntegralComplexToReal <code>49</code> IntegralComplexToReal IntegralComplexToBoolean <code>50</code> IntegralComplexToBoolean IntegralComplexCast <code>51</code> IntegralComplexCast IntegralComplexToFloatingComplex <code>52</code> IntegralComplexToFloatingComplex ARCProduceObject <code>53</code> ARCProduceObject ARCConsumeObject <code>54</code> ARCConsumeObject ARCReclaimReturnedObject <code>55</code> ARCReclaimReturnedObject ARCExtendBlockObject <code>56</code> ARCExtendBlockObject AtomicToNonAtomic <code>57</code> AtomicToNonAtomic NonAtomicToAtomic <code>58</code> NonAtomicToAtomic CopyAndAutoreleaseBlockObject <code>59</code> CopyAndAutoreleaseBlockObject BuiltinFnToFnPtr <code>60</code> BuiltinFnToFnPtr ZeroToOCLOpaqueType <code>61</code> ZeroToOCLOpaqueType AddressSpaceConversion <code>62</code> AddressSpaceConversion IntToOCLSampler <code>63</code> IntToOCLSampler MatrixCast <code>64</code> MatrixCast HLSLVectorTruncation <code>65</code> HLSLVectorTruncation HLSLArrayRValue <code>66</code> HLSLArrayRValue"},{"location":"dialects/HighLevel/HighLevel/#counttype","title":"CountType","text":"<p>count type</p>"},{"location":"dialects/HighLevel/HighLevel/#cases_2","title":"Cases:","text":"Symbol Value String CountedBy <code>0</code> CountedBy SizedBy <code>1</code> SizedBy CountedByOrNull <code>2</code> CountedByOrNull SizedByOrNull <code>3</code> SizedByOrNull"},{"location":"dialects/HighLevel/HighLevel/#fpredicate","title":"FPredicate","text":"<p>floating point comparison predicate</p>"},{"location":"dialects/HighLevel/HighLevel/#cases_3","title":"Cases:","text":"Symbol Value String ffalse <code>0</code> ffalse oeq <code>1</code> oeq ogt <code>2</code> ogt oge <code>3</code> oge olt <code>4</code> olt ole <code>5</code> ole one <code>6</code> one ord <code>7</code> ord uno <code>8</code> uno ueq <code>9</code> ueq ugt <code>10</code> ugt uge <code>11</code> uge ult <code>12</code> ult ule <code>13</code> ule une <code>14</code> une ftrue <code>15</code> ftrue"},{"location":"dialects/HighLevel/HighLevel/#identkind","title":"IdentKind","text":"<p>ident kind</p>"},{"location":"dialects/HighLevel/HighLevel/#cases_4","title":"Cases:","text":"Symbol Value String Func <code>0</code> Func Function <code>1</code> Function LFunction <code>2</code> LFunction FuncDName <code>3</code> FuncDName FuncSig <code>4</code> FuncSig LFuncSig <code>5</code> LFuncSig PrettyFunction <code>6</code> PrettyFunction PrettyFunctionNoVirtual <code>7</code> PrettyFunctionNoVirtual"},{"location":"dialects/HighLevel/HighLevel/#predicate","title":"Predicate","text":"<p>comparison predicate</p>"},{"location":"dialects/HighLevel/HighLevel/#cases_5","title":"Cases:","text":"Symbol Value String eq <code>0</code> eq ne <code>1</code> ne slt <code>2</code> slt sle <code>3</code> sle sgt <code>4</code> sgt sge <code>5</code> sge ult <code>6</code> ult ule <code>7</code> ule ugt <code>8</code> ugt uge <code>9</code> uge"},{"location":"dialects/HighLevel/HighLevel/#visibility","title":"Visibility","text":"<p>visibility</p>"},{"location":"dialects/HighLevel/HighLevel/#cases_6","title":"Cases:","text":"Symbol Value String Default <code>0</code> default Hidden <code>1</code> hidden Protected <code>2</code> protected"},{"location":"dialects/LowLevel/LowLevel/","title":"Low Level","text":""},{"location":"dialects/LowLevel/LowLevel/#ll-dialect","title":"'ll' Dialect","text":"<p>A vast low-level dialect. This dialect serves as a bottom layer in VAST dialect tower. There should always exist a pass that lowers this dialect into LLVM Dialect.</p> <p>Work in progress - new operations are still being added and existing can be changed or removed.</p> <ul> <li>'ll' Dialect<ul> <li>Operations<ul> <li>ll.alloca (::vast::ll::Alloca)<ul> <li>Results:</li> </ul> </li> <li>ll.br (::vast::ll::Br)<ul> <li>Operands:</li> <li>Successors:</li> </ul> </li> <li>ll.cell (::vast::ll::Cell)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>ll.cell_init (::vast::ll::CellInit)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>ll.concat (::vast::ll::Concat)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>ll.cond_br (::vast::ll::CondBr)<ul> <li>Operands:</li> <li>Successors:</li> </ul> </li> <li>ll.cond_scope_ret (::vast::ll::CondScopeRet)<ul> <li>Operands:</li> <li>Successors:</li> </ul> </li> <li>ll.extract (::vast::ll::Extract)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>ll.func (::vast::ll::FuncOp)<ul> <li>Attributes:</li> </ul> </li> <li>ll.gep (::vast::ll::StructGEPOp)<ul> <li>Attributes:</li> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>ll.initialize (::vast::ll::InitializeVar)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>ll.inline_scope (::vast::ll::InlineScope)</li> <li>ll.load (::vast::ll::Load)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>ll.return (::vast::ll::ReturnOp)<ul> <li>Operands:</li> </ul> </li> <li>ll.scope (::vast::ll::Scope)</li> <li>ll.scope_recurse (::vast::ll::ScopeRecurse)</li> <li>ll.scope_ret (::vast::ll::ScopeRet)</li> <li>ll.store (::vast::ll::Store)<ul> <li>Operands:</li> </ul> </li> <li>ll.subscript (::vast::ll::Subscript)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>ll.uninitialized_var (::vast::ll::UninitializedVar)<ul> <li>Results:</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"dialects/LowLevel/LowLevel/#operations","title":"Operations","text":""},{"location":"dialects/LowLevel/LowLevel/#llalloca-vastllalloca","title":"<code>ll.alloca</code> (::vast::ll::Alloca)","text":"<p>Alloca for a piece of memory. For now does not support array types.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.alloca` attr-dict `:` type($result)\n</code></pre>"},{"location":"dialects/LowLevel/LowLevel/#results","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/LowLevel/LowLevel/#llbr-vastllbr","title":"<code>ll.br</code> (::vast::ll::Br)","text":"<p>Direct branch.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.br` $dest (`(` $operands^ `:` type($operands) `)`)? attr-dict\n</code></pre> <p>Direct branch Traits: <code>Terminator</code></p> <p>Interfaces: <code>BranchOpInterface</code></p>"},{"location":"dialects/LowLevel/LowLevel/#operands","title":"Operands:","text":"Operand Description <code>operands</code> variadic of any type"},{"location":"dialects/LowLevel/LowLevel/#successors","title":"Successors:","text":"Successor Description <code>dest</code> any successor"},{"location":"dialects/LowLevel/LowLevel/#llcell-vastllcell","title":"<code>ll.cell</code> (::vast::ll::Cell)","text":"<p>Cell that holds the value and is accessible trhough SSA result.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.cell` $sym_name attr-dict custom&lt; StorageClasses &gt;($storageClass, $threadStorageClass)\n              `:` type($result)\n</code></pre> <p>Interfaces: <code>Core_DeclStorageInterface</code>, <code>Core_Symbol</code>, <code>Core_VarSymbol</code>, <code>DeclStorageInterface</code></p>"},{"location":"dialects/LowLevel/LowLevel/#attributes","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>sym_name</code>::mlir::StringAttrstring attribute <code>storageClass</code>::vast::core::StorageClassAttrdeclaration storage class <code>threadStorageClass</code>::vast::core::TSClassAttrdeclaration storage class"},{"location":"dialects/LowLevel/LowLevel/#results_1","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/LowLevel/LowLevel/#llcell_init-vastllcellinit","title":"<code>ll.cell_init</code> (::vast::ll::CellInit)","text":"<p>Cell initialization.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.cell_init` operands attr-dict `:` functional-type(operands, results)\n</code></pre>"},{"location":"dialects/LowLevel/LowLevel/#operands_1","title":"Operands:","text":"Operand Description <code>var</code> any type <code>elements</code> variadic of any type"},{"location":"dialects/LowLevel/LowLevel/#results_2","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/LowLevel/LowLevel/#llconcat-vastllconcat","title":"<code>ll.concat</code> (::vast::ll::Concat)","text":"<p>Concat integers together</p> <p>Syntax:</p> <pre><code>operation ::= `ll.concat` operands attr-dict `:` functional-type(operands, results)\n</code></pre> <p>Concat operands together, where first argument occupies lsb.</p>"},{"location":"dialects/LowLevel/LowLevel/#operands_2","title":"Operands:","text":"Operand Description <code>args</code> variadic of any type"},{"location":"dialects/LowLevel/LowLevel/#results_3","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/LowLevel/LowLevel/#llcond_br-vastllcondbr","title":"<code>ll.cond_br</code> (::vast::ll::CondBr)","text":"<p>Conditional branch.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.cond_br` $cond `:` type($cond) `,`\n              $trueDest (`(` $trueOperands^ `:` type($trueOperands) `)`)? `,`\n              $falseDest (`(` $falseOperands^ `:` type($falseOperands) `)`)?\n              attr-dict\n</code></pre> <p>Direct branch Traits: <code>AttrSizedOperandSegments</code>, <code>Terminator</code></p>"},{"location":"dialects/LowLevel/LowLevel/#operands_3","title":"Operands:","text":"Operand Description <code>cond</code> any type <code>trueOperands</code> variadic of any type <code>falseOperands</code> variadic of any type"},{"location":"dialects/LowLevel/LowLevel/#successors_1","title":"Successors:","text":"Successor Description <code>trueDest</code> any successor <code>falseDest</code> any successor"},{"location":"dialects/LowLevel/LowLevel/#llcond_scope_ret-vastllcondscoperet","title":"<code>ll.cond_scope_ret</code> (::vast::ll::CondScopeRet)","text":"<p>Terminator of scope if condition is met, otherwise branch.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.cond_scope_ret` $cond `:` type($cond) `,`\n              $dest (`(` $dest_operands^ `:` type($dest_operands) `)`)? attr-dict\n</code></pre> <p>Terminate or branch. Traits: <code>Terminator</code></p>"},{"location":"dialects/LowLevel/LowLevel/#operands_4","title":"Operands:","text":"Operand Description <code>cond</code> any type <code>dest_operands</code> variadic of any type"},{"location":"dialects/LowLevel/LowLevel/#successors_2","title":"Successors:","text":"Successor Description <code>dest</code> any successor"},{"location":"dialects/LowLevel/LowLevel/#llextract-vastllextract","title":"<code>ll.extract</code> (::vast::ll::Extract)","text":"<p>Extracts value</p> <p>Syntax:</p> <pre><code>operation ::= `ll.extract` operands attr-dict `:` functional-type(operands, results)\n</code></pre> <p><code>0</code> is lsb, <code>[inc, exc)</code></p>"},{"location":"dialects/LowLevel/LowLevel/#attributes_1","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>from</code>::mlir::TypedAttrTypedAttr instance <code>to</code>::mlir::TypedAttrTypedAttr instance"},{"location":"dialects/LowLevel/LowLevel/#operands_5","title":"Operands:","text":"Operand Description <code>arg</code> any type"},{"location":"dialects/LowLevel/LowLevel/#results_4","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/LowLevel/LowLevel/#llfunc-vastllfuncop","title":"<code>ll.func</code> (::vast::ll::FuncOp)","text":"<p>VAST function template</p> <p>Syntax:</p> <pre><code>operation ::= `ll.func` $sym_name custom&lt; FunctionSignatureAndBody &gt;($function_type, attr-dict, $body)\n</code></pre> <p>Inspired by <code>cir::FuncOp</code> and <code>mlir::func::FuncOp</code>:</p> <p>Operations within the function cannot implicitly capture values defined outside of the function, i.e. Functions are <code>IsolatedFromAbove</code>. All external references must use function arguments or attributes that establish a symbolic connection (e.g. symbols referenced by name via a string attribute like SymbolRefAttr). An external function declaration (used when referring to a function declared in some other module) has no body.</p> <p>The function linkage information is specified by <code>linkage</code>, as defined by <code>GlobalLinkageKind</code> attribute.</p> <p>Traits: <code>AutomaticAllocationScope</code>, <code>IsolatedFromAbove</code>, <code>NoTerminator</code>, <code>ShadowingSymbolTable</code></p> <p>Interfaces: <code>CallableOpInterface</code>, <code>Core_FuncSymbol</code>, <code>Core_FunctionOpInterface</code>, <code>Core_SymbolTableOpInterface</code>, <code>Core_Symbol</code></p>"},{"location":"dialects/LowLevel/LowLevel/#attributes_2","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>sym_name</code>::mlir::StringAttrstring attribute <code>function_type</code>::mlir::TypeAttrtype attribute of function type <code>linkage</code>::vast::core::GlobalLinkageKindAttrglobal linkage kind <code>sym_visibility</code>::mlir::StringAttrstring attribute <code>arg_attrs</code>::mlir::ArrayAttrArray of dictionary attributes <code>res_attrs</code>::mlir::ArrayAttrArray of dictionary attributes"},{"location":"dialects/LowLevel/LowLevel/#llgep-vastllstructgepop","title":"<code>ll.gep</code> (::vast::ll::StructGEPOp)","text":"<p>VAST struct gep  operation</p> <p>VAST struct gep operation</p>"},{"location":"dialects/LowLevel/LowLevel/#attributes_3","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>idx</code>::mlir::IntegerAttr32-bit signless integer attribute <code>field</code>::mlir::FlatSymbolRefAttrflat symbol reference attribute"},{"location":"dialects/LowLevel/LowLevel/#operands_6","title":"Operands:","text":"Operand Description <code>record</code> any type"},{"location":"dialects/LowLevel/LowLevel/#results_5","title":"Results:","text":"Result Description <code>element</code> any type"},{"location":"dialects/LowLevel/LowLevel/#llinitialize-vastllinitializevar","title":"<code>ll.initialize</code> (::vast::ll::InitializeVar)","text":"<p>Initialize a variable.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.initialize` operands attr-dict `:` functional-type(operands, results)\n</code></pre> <p>Initialize a variable - for now this operation is a direct lowering from hl.var initialization section. Later there will be need to discover how this ties to constructors.</p>"},{"location":"dialects/LowLevel/LowLevel/#operands_7","title":"Operands:","text":"Operand Description <code>var</code> any type <code>elements</code> variadic of any type"},{"location":"dialects/LowLevel/LowLevel/#results_6","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/LowLevel/LowLevel/#llinline_scope-vastllinlinescope","title":"<code>ll.inline_scope</code> (::vast::ll::InlineScope)","text":"<p>Scope, that forwards (cond)scope return up.</p> <p>Result of inlined if. Traits: <code>NoRegionArguments</code></p>"},{"location":"dialects/LowLevel/LowLevel/#llload-vastllload","title":"<code>ll.load</code> (::vast::ll::Load)","text":"<p>Load value from memory. Expects <code>hl.ptr</code> as pointer type.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.load` operands attr-dict `:` functional-type(operands, results)\n</code></pre> <p>Interfaces: <code>InferTypeOpInterface</code></p>"},{"location":"dialects/LowLevel/LowLevel/#operands_8","title":"Operands:","text":"Operand Description <code>ptr</code> ElementTypeInterface instance"},{"location":"dialects/LowLevel/LowLevel/#results_7","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/LowLevel/LowLevel/#llreturn-vastllreturnop","title":"<code>ll.return</code> (::vast::ll::ReturnOp)","text":"<p>Syntax:</p> <pre><code>operation ::= `ll.return` ($result^ `:` type($result))? attr-dict\n</code></pre> <p>Traits: <code>Core_ReturnLikeTrait</code>, <code>Terminator</code></p>"},{"location":"dialects/LowLevel/LowLevel/#operands_9","title":"Operands:","text":"Operand Description <code>result</code> variadic of any type"},{"location":"dialects/LowLevel/LowLevel/#llscope-vastllscope","title":"<code>ll.scope</code> (::vast::ll::Scope)","text":"<p>Scope, holds one region.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.scope` $body attr-dict\n</code></pre> <p>Scope that holds one region, each block should be terminated                         with either branch, scope return or their conditional variants. Traits: <code>Core_ScopeLikeTrait</code>, <code>NoRegionArguments</code>, <code>NoTerminator</code>, <code>ShadowingSymbolTable</code></p> <p>Interfaces: <code>Core_SymbolTableOpInterface</code></p>"},{"location":"dialects/LowLevel/LowLevel/#llscope_recurse-vastllscoperecurse","title":"<code>ll.scope_recurse</code> (::vast::ll::ScopeRecurse)","text":"<p>Jump to first block of scope.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.scope_recurse` attr-dict\n</code></pre> <p>Modelling continue. Traits: <code>Terminator</code></p>"},{"location":"dialects/LowLevel/LowLevel/#llscope_ret-vastllscoperet","title":"<code>ll.scope_ret</code> (::vast::ll::ScopeRet)","text":"<p>Terminator of scope.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.scope_ret` attr-dict\n</code></pre> <p>Terminator of scopes (for example during lowering of loops). Traits: <code>Terminator</code></p>"},{"location":"dialects/LowLevel/LowLevel/#llstore-vastllstore","title":"<code>ll.store</code> (::vast::ll::Store)","text":"<p>Store value into memory. Expects <code>hl.ptr</code> as pointer type.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.store` $ptr `,` $val attr-dict `:` type($ptr) `,` type($val)\n</code></pre>"},{"location":"dialects/LowLevel/LowLevel/#operands_10","title":"Operands:","text":"Operand Description <code>val</code> any type <code>ptr</code> ElementTypeInterface instance"},{"location":"dialects/LowLevel/LowLevel/#llsubscript-vastllsubscript","title":"<code>ll.subscript</code> (::vast::ll::Subscript)","text":"<p>VAST array subscript operator</p> <p>Syntax:</p> <pre><code>operation ::= `ll.subscript` $array `at` ` ` `[` $index `:` type($index) `]` attr-dict\n              `:` type($array) `-&gt;` type($result)\n</code></pre> <p>VAST array subscript operator</p>"},{"location":"dialects/LowLevel/LowLevel/#operands_11","title":"Operands:","text":"Operand Description <code>array</code> any type <code>index</code> any type"},{"location":"dialects/LowLevel/LowLevel/#results_8","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/LowLevel/LowLevel/#lluninitialized_var-vastlluninitializedvar","title":"<code>ll.uninitialized_var</code> (::vast::ll::UninitializedVar)","text":"<p>Declaration of variable that have not been initialized yet.</p> <p>Syntax:</p> <pre><code>operation ::= `ll.uninitialized_var` attr-dict `:` type($result)\n</code></pre> <p>Declaration of variable that have not been initialized yet. Interfaces: <code>Core_Symbol</code>, <code>Core_VarSymbol</code></p>"},{"location":"dialects/LowLevel/LowLevel/#results_9","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/Meta/Meta/","title":"Meta","text":""},{"location":"dialects/Meta/Meta/#meta-dialect","title":"'meta' Dialect","text":"<p>A vast metadata dialect. This dialect intends capture user metadata that are kept accross transformations.</p> <ul> <li>'meta' Dialect<ul> <li>Attributes<ul> <li>IdentifierAttr<ul> <li>Parameters:</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"dialects/Meta/Meta/#attributes","title":"Attributes","text":""},{"location":"dialects/Meta/Meta/#identifierattr","title":"IdentifierAttr","text":"<p>A metadata identifier.</p> <p>Syntax:</p> <pre><code>#meta.id&lt;\n  identifier_t   # value\n&gt;\n</code></pre> <p>A metadata identifier can be used to relate operations to external metadata storage.</p> <pre><code>#meta.id&lt;\"0x3A28213A\"&gt;\n</code></pre>"},{"location":"dialects/Meta/Meta/#parameters","title":"Parameters:","text":"Parameter C++ type Description value <code>identifier_t</code>"},{"location":"dialects/Parser/Parser/","title":"Parser","text":""},{"location":"dialects/Parser/Parser/#pr-dialect","title":"'pr' Dialect","text":"<p>Dialect for abstracting parsering logic. Dialect for abstracting parsering logic.</p> <p>The goal of the dialect is to abstract the parsering logic for easier uniform parser recognition.</p> <ul> <li>'pr' Dialect<ul> <li>Operations<ul> <li>pr.assign (::vast::pr::Assign)<ul> <li>Operands:</li> </ul> </li> <li>pr.cast (::vast::pr::Cast)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>pr.decl (::vast::pr::Decl)<ul> <li>Attributes:</li> </ul> </li> <li>pr.maybeparse (::vast::pr::MaybeParse)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>pr.noparse (::vast::pr::NoParse)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>pr.parse (::vast::pr::Parse)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>pr.ref (::vast::pr::Ref)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> <li>pr.sink (::vast::pr::Sink)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> <li>pr.source (::vast::pr::Source)<ul> <li>Operands:</li> <li>Results:</li> </ul> </li> </ul> </li> <li>Types<ul> <li>DataType</li> <li>MaybeDataType</li> <li>NoDataType</li> </ul> </li> </ul> </li> </ul>"},{"location":"dialects/Parser/Parser/#operations","title":"Operations","text":""},{"location":"dialects/Parser/Parser/#prassign-vastprassign","title":"<code>pr.assign</code> (::vast::pr::Assign)","text":"<p>Assignment to referenced value.</p> <p>Syntax:</p> <pre><code>operation ::= `pr.assign` $value `to` $target attr-dict functional-type($value, $target)\n</code></pre>"},{"location":"dialects/Parser/Parser/#operands","title":"Operands:","text":"Operand Description <code>value</code> No data type. or Data type. or Maybe data type. <code>target</code> No data type. or Data type. or Maybe data type."},{"location":"dialects/Parser/Parser/#prcast-vastprcast","title":"<code>pr.cast</code> (::vast::pr::Cast)","text":"<p>Casting operation.</p> <p>Syntax:</p> <pre><code>operation ::= `pr.cast` $operand attr-dict `:` functional-type($operand, $result)\n</code></pre>"},{"location":"dialects/Parser/Parser/#operands_1","title":"Operands:","text":"Operand Description <code>operand</code> No data type. or Data type. or Maybe data type."},{"location":"dialects/Parser/Parser/#results","title":"Results:","text":"Result Description <code>result</code> No data type. or Data type. or Maybe data type."},{"location":"dialects/Parser/Parser/#prdecl-vastprdecl","title":"<code>pr.decl</code> (::vast::pr::Decl)","text":"<p>Declaration operation.</p> <p>Syntax:</p> <pre><code>operation ::= `pr.decl` $sym_name attr-dict `:` $type\n</code></pre> <p>Interfaces: <code>Core_Symbol</code>, <code>Core_VarSymbol</code></p>"},{"location":"dialects/Parser/Parser/#attributes","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>sym_name</code>::mlir::StringAttrstring attribute <code>type</code>::mlir::TypeAttrany type attribute"},{"location":"dialects/Parser/Parser/#prmaybeparse-vastprmaybeparse","title":"<code>pr.maybeparse</code> (::vast::pr::MaybeParse)","text":"<p>Maybe parsing operation data.</p> <p>Syntax:</p> <pre><code>operation ::= `pr.maybeparse` $arguments attr-dict `:` functional-type($arguments, $result)\n</code></pre>"},{"location":"dialects/Parser/Parser/#operands_2","title":"Operands:","text":"Operand Description <code>arguments</code> variadic of No data type. or Data type. or Maybe data type."},{"location":"dialects/Parser/Parser/#results_1","title":"Results:","text":"Result Description <code>result</code> variadic of No data type. or Data type. or Maybe data type."},{"location":"dialects/Parser/Parser/#prnoparse-vastprnoparse","title":"<code>pr.noparse</code> (::vast::pr::NoParse)","text":"<p>Non-parsing operation data.</p> <p>Syntax:</p> <pre><code>operation ::= `pr.noparse` $arguments attr-dict `:` functional-type($arguments, $result)\n</code></pre>"},{"location":"dialects/Parser/Parser/#operands_3","title":"Operands:","text":"Operand Description <code>arguments</code> variadic of No data type."},{"location":"dialects/Parser/Parser/#results_2","title":"Results:","text":"Result Description <code>result</code> variadic of No data type."},{"location":"dialects/Parser/Parser/#prparse-vastprparse","title":"<code>pr.parse</code> (::vast::pr::Parse)","text":"<p>Parsing operation data.</p> <p>Syntax:</p> <pre><code>operation ::= `pr.parse` $arguments attr-dict `:` functional-type($arguments, $result)\n</code></pre>"},{"location":"dialects/Parser/Parser/#operands_4","title":"Operands:","text":"Operand Description <code>arguments</code> variadic of No data type. or Data type. or Maybe data type."},{"location":"dialects/Parser/Parser/#results_3","title":"Results:","text":"Result Description <code>result</code> variadic of No data type. or Data type. or Maybe data type."},{"location":"dialects/Parser/Parser/#prref-vastprref","title":"<code>pr.ref</code> (::vast::pr::Ref)","text":"<p>Parser variable reference operation.</p> <p>Syntax:</p> <pre><code>operation ::= `pr.ref` $name attr-dict `:` type($result)\n</code></pre>"},{"location":"dialects/Parser/Parser/#attributes_1","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::FlatSymbolRefAttrflat symbol reference attribute"},{"location":"dialects/Parser/Parser/#results_4","title":"Results:","text":"Result Description <code>result</code> No data type. or Data type. or Maybe data type."},{"location":"dialects/Parser/Parser/#prsink-vastprsink","title":"<code>pr.sink</code> (::vast::pr::Sink)","text":"<p>Sink of parsed data.</p> <p>Syntax:</p> <pre><code>operation ::= `pr.sink` $arguments attr-dict `:` functional-type($arguments, $result)\n</code></pre>"},{"location":"dialects/Parser/Parser/#operands_5","title":"Operands:","text":"Operand Description <code>arguments</code> variadic of No data type. or Data type. or Maybe data type."},{"location":"dialects/Parser/Parser/#results_5","title":"Results:","text":"Result Description <code>result</code> variadic of No data type."},{"location":"dialects/Parser/Parser/#prsource-vastprsource","title":"<code>pr.source</code> (::vast::pr::Source)","text":"<p>Source of parsed data.</p> <p>Syntax:</p> <pre><code>operation ::= `pr.source` $arguments attr-dict `:` functional-type($arguments, $result)\n</code></pre>"},{"location":"dialects/Parser/Parser/#operands_6","title":"Operands:","text":"Operand Description <code>arguments</code> variadic of No data type. or Data type. or Maybe data type."},{"location":"dialects/Parser/Parser/#results_6","title":"Results:","text":"Result Description <code>result</code> variadic of No data type. or Data type. or Maybe data type."},{"location":"dialects/Parser/Parser/#types","title":"Types","text":""},{"location":"dialects/Parser/Parser/#datatype","title":"DataType","text":"<p>Data type.</p> <p>Syntax: <code>!pr.data</code></p>"},{"location":"dialects/Parser/Parser/#maybedatatype","title":"MaybeDataType","text":"<p>Maybe data type.</p> <p>Syntax: <code>!pr.maybedata</code></p>"},{"location":"dialects/Parser/Parser/#nodatatype","title":"NoDataType","text":"<p>No data type.</p> <p>Syntax: <code>!pr.nodata</code></p>"},{"location":"dialects/Unsupported/Unsupported/","title":"Unsupported","text":""},{"location":"dialects/Unsupported/Unsupported/#unsup-dialect","title":"'unsup' Dialect","text":"<p>A vast unsupported dialect. This dialect defines a set of generic unsupported operation/types that can be used to lower AST Node that are yet not supported and can't be lowered by other dialects.</p> <ul> <li>'unsup' Dialect<ul> <li>Operations<ul> <li>unsup.decl (::vast::unsup::UnsupportedDecl)<ul> <li>Attributes:</li> </ul> </li> <li>unsup.stmt (::vast::unsup::UnsupportedStmt)<ul> <li>Attributes:</li> <li>Results:</li> </ul> </li> </ul> </li> <li>Attributes<ul> <li>UnsupportedAttr<ul> <li>Parameters:</li> </ul> </li> </ul> </li> <li>Types<ul> <li>UnsupportedType<ul> <li>Parameters:</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"dialects/Unsupported/Unsupported/#operations","title":"Operations","text":""},{"location":"dialects/Unsupported/Unsupported/#unsupdecl-vastunsupunsupporteddecl","title":"<code>unsup.decl</code> (::vast::unsup::UnsupportedDecl)","text":"<p>VAST unsupported decl</p> <p>Syntax:</p> <pre><code>operation ::= `unsup.decl` $name attr-dict `:` $body\n</code></pre> <p>VAST unsupported decl Traits: <code>NoTerminator</code></p>"},{"location":"dialects/Unsupported/Unsupported/#attributes","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute"},{"location":"dialects/Unsupported/Unsupported/#unsupstmt-vastunsupunsupportedstmt","title":"<code>unsup.stmt</code> (::vast::unsup::UnsupportedStmt)","text":"<p>VAST unsupported statement</p> <p>Syntax:</p> <pre><code>operation ::= `unsup.stmt` $name attr-dict `:` type($result) $children\n</code></pre> <p>VAST unsupported statement Traits: <code>NoTerminator</code></p>"},{"location":"dialects/Unsupported/Unsupported/#attributes_1","title":"Attributes:","text":"AttributeMLIR TypeDescription <code>name</code>::mlir::StringAttrstring attribute"},{"location":"dialects/Unsupported/Unsupported/#results","title":"Results:","text":"Result Description <code>result</code> any type"},{"location":"dialects/Unsupported/Unsupported/#attributes_2","title":"Attributes","text":""},{"location":"dialects/Unsupported/Unsupported/#unsupportedattr","title":"UnsupportedAttr","text":"<p>Syntax:</p> <pre><code>#unsup.attr&lt;\n  ::mlir::StringAttr   # spelling\n&gt;\n</code></pre>"},{"location":"dialects/Unsupported/Unsupported/#parameters","title":"Parameters:","text":"Parameter C++ type Description spelling <code>::mlir::StringAttr</code>"},{"location":"dialects/Unsupported/Unsupported/#types","title":"Types","text":""},{"location":"dialects/Unsupported/Unsupported/#unsupportedtype","title":"UnsupportedType","text":"<p>Syntax:</p> <pre><code>!unsup.type&lt;\n  ::llvm::StringRef   # originName\n&gt;\n</code></pre>"},{"location":"dialects/Unsupported/Unsupported/#parameters_1","title":"Parameters:","text":"Parameter C++ type Description originName <code>::llvm::StringRef</code>"}]}